/Users/cdgmachado/Documents/Chainshot/myDapps/ozel-v2/interfaces/ozIDiamond.sol
  1 |     | pragma solidity 0.8.19;
  2 |     | 
  3 |     | 
  4 |     | 
  5 |     | 
  6 |     | interface ozIDiamond {
  7 |     | 
  8 |     |     struct FacetCut {
  9 |     |         address facetAddress;
 10 |     |         FacetCutAction action;
 11 |     |         bytes4[] functionSelectors;
 12 |     |     }
 13 |     | 
 14 |     |     enum FacetCutAction {Add, Replace, Remove}
 15 |     | 
 16 |     |     function diamondCut(FacetCut[] memory _diamondCut, address _init, bytes memory _calldata) external;
 17 |     |     function getLastPrice() external view returns(uint256);
 18 |     |     function getEnergyPrice() external view returns(uint256);
 19 |     |     function getOzelIndex() external view returns(uint256);
 20 |     | 
 21 |     | }

/Users/cdgmachado/Documents/Chainshot/myDapps/ozel-v2/test/echidna/EchidnaE2E.sol
  1 |     | // SPDX-License-Identifier: GPL-2.0-or-later
  2 |     | pragma solidity 0.8.19;
  3 |     | 
  4 |     | 
  5 |     | import '../../interfaces/ozIDiamond.sol';
  6 |     | // import '../../contracts/testing-files/WtiFeed.sol';
  7 |     | 
  8 | *r  | 
  9 |     | contract EchidnaE2E {
 10 |     | 
 11 |     |     // constructor() {
 12 |     |     //     hevm.roll(16771449);
 13 |     |     // }
 14 |     | 
 15 |     |     ozIDiamond OZL = ozIDiamond(0x7D1f13Dd05E6b0673DC3D0BFa14d40A74Cfa3EF2);
 16 |     |     // WtiFeed wtiFeed = WtiFeed(0x1dC4c1cEFEF38a777b15aA20260a54E584b16C48);
 17 |     | 
 18 |     | 
 19 | *   |     function get_price() public view  {
 20 |     |         // uint256 price = OZL.getLastPrice();
 21 | *   |         uint256 price = OZL.getOzelIndex();
 22 | *   |         assert(price > 0);
 23 |     |     }
 24 |     | 
 25 |     |     // function get_round_data() public view  {
 26 |     |     //     (, int price,,,) = wtiFeed.latestRoundData();
 27 |     |     //     assert(price > 0);
 28 |     |     // }
 29 |     | 
 30 |     |     // function getHello() public pure {
 31 |     |     //     assert(true);
 32 |     |     // }
 33 |     | 
 34 |     | }

