{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Cant_be_zero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyerBalance",
          "type": "uint256"
        }
      ],
      "name": "Not_enough_funds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPermit2.Permit2Buy",
          "name": "buyOp_",
          "type": "tuple"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c0604052600580546001600160a01b031990811673ff970a61a04b1ca14834a43f5de4533ebddb5cc8179091557382af49447d8a07e3bd95bd0d56f35241523fbab160805260068054909116737d1f13dd05e6b0673dc3d0bfa14d40a74cfa3ef21790556e22d473030f116ddee9f6b43ac78ba360a0523480156200008457600080fd5b506040518060400160405280600a81526020016908adccae4cef2408aa8960b31b815250604051806040016040528060048152602001630ca8aa8960e31b8152508160039081620000d6919062000193565b506004620000e5828262000193565b5050506200025f565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011957607f821691505b6020821081036200013a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018e57600081815260208120601f850160051c81016020861015620001695750805b601f850160051c820191505b818110156200018a5782815560010162000175565b5050505b505050565b81516001600160401b03811115620001af57620001af620000ee565b620001c781620001c0845462000104565b8462000140565b602080601f831160018114620001ff5760008415620001e65750858301515b600019600386901b1c1916600185901b1785556200018a565b600085815260208120601f198616915b8281101562000230578886015182559484019460019091019084016200020f565b50858210156200024f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610d0c6200028260003960006108a6015260005050610d0c6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806398d5fdca1161006657806398d5fdca146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b8063395093511461015e57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a57806331e8cb0414610149575b600080fd5b6100dc6101e3565b6040516100e9919061095c565b60405180910390f35b61010561010036600461098e565b610275565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b6101056101353660046109ba565b61028f565b604051601281526020016100e9565b61015c610157366004610a6b565b6102b3565b005b61010561016c36600461098e565b6103b0565b61011961017f366004610b5f565b6001600160a01b031660009081526020819052604090205490565b6100dc6103d2565b6101196103e1565b6101056101b836600461098e565b610454565b6101056101cb36600461098e565b6104cf565b6101196101de366004610b7c565b6104dd565b6060600380546101f290610bb5565b80601f016020809104026020016040519081016040528092919081815260200182805461021e90610bb5565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b600033610283818585610508565b60019150505b92915050565b60003361029d85828561062c565b6102a88585856106a0565b506001949350505050565b602081015160008190036102da57604051634bf29fe960e01b815260040160405180910390fd5b600064e8d4a510006102ea6103e1565b6102f49084610c05565b6102fe9190610c1c565b83516040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610c3e565b90508181101561039a57604051633dcd925d60e11b8152600481018290526024015b60405180910390fd5b602084018290526103aa84610844565b50505050565b6000336102838185856103c383836104dd565b6103cd9190610c57565b610508565b6060600480546101f290610bb5565b6006546040805163cab0f33560e01b815290516000926001600160a01b03169163cab0f3359160048083019260209291908290030181865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610c3e565b905090565b6000338161046282866104dd565b9050838110156104c25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610391565b6102a88286868403610508565b6000336102838185856106a0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661056a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610391565b6001600160a01b0382166105cb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610391565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061063884846104dd565b905060001981146103aa57818110156106935760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610391565b6103aa8484848403610508565b6001600160a01b0383166107045760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610391565b6001600160a01b0382166107665760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610391565b6001600160a01b038316600090815260208190526040902054818110156107de5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610391565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36103aa565b6020818101516040805160a08101825284516001600160a01b039081166060808401918252608080850187905291845284880151848801528701518385015283518085018552308152958601859052860151925163187945bd60e11b815293947f0000000000000000000000000000000000000000000000000000000000000000909116936330f28b7a936108e0939291339190600401610c6a565b600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b505050505050565b6000815180845260005b8181101561093c57602081850181015186830182015201610920565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061096f6020830184610916565b9392505050565b6001600160a01b038116811461098b57600080fd5b50565b600080604083850312156109a157600080fd5b82356109ac81610976565b946020939093013593505050565b6000806000606084860312156109cf57600080fd5b83356109da81610976565b925060208401356109ea81610976565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610a3457610a346109fb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a6357610a636109fb565b604052919050565b60006020808385031215610a7e57600080fd5b823567ffffffffffffffff80821115610a9657600080fd5b9084019060a08287031215610aaa57600080fd5b610ab2610a11565b8235610abd81610976565b8082525083830135848201526040830135604082015260608301356060820152608083013582811115610aef57600080fd5b80840193505086601f840112610b0457600080fd5b823582811115610b1657610b166109fb565b610b28601f8201601f19168601610a3a565b92508083528785828601011115610b3e57600080fd5b80858501868501376000908301909401939093526080830152509392505050565b600060208284031215610b7157600080fd5b813561096f81610976565b60008060408385031215610b8f57600080fd5b8235610b9a81610976565b91506020830135610baa81610976565b809150509250929050565b600181811c90821680610bc957607f821691505b602082108103610be957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761028957610289610bef565b600082610c3957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610c5057600080fd5b5051919050565b8082018082111561028957610289610bef565b6000610100865160018060a01b03808251168552602082015160208601526020890151604086015260408901516060860152808851166080860152602088015160a086015280871660c086015250508060e0840152610ccb81840185610916565b97965050505050505056fea26469706673582212207a0a9f27e9944f15cf4045747673bc12f069ffefe1c681f022cac7675be32ef164736f6c63430008130033",
    "sourceMap": "624:2328:1:-:0;;;659:64;;;-1:-1:-1;;;;;;659:64:1;;;680:42;659:64;;;;758:42;729:71;;806;;;;;;834:42;806:71;;;921:42;883:81;;971:44;;;;;;;;;;1976:113:32;;;;;;;;;;;;;-1:-1:-1;;;1976:113:32;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:32;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:32;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;624:2328:1;;14:127:40;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:40;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:40;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:40;;;2580:26;2531:89;-1:-1:-1;;1335:1:40;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:40;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:40;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:40;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:40:o;:::-;624:2328:1;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806398d5fdca1161006657806398d5fdca146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b8063395093511461015e57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a57806331e8cb0414610149575b600080fd5b6100dc6101e3565b6040516100e9919061095c565b60405180910390f35b61010561010036600461098e565b610275565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b6101056101353660046109ba565b61028f565b604051601281526020016100e9565b61015c610157366004610a6b565b6102b3565b005b61010561016c36600461098e565b6103b0565b61011961017f366004610b5f565b6001600160a01b031660009081526020819052604090205490565b6100dc6103d2565b6101196103e1565b6101056101b836600461098e565b610454565b6101056101cb36600461098e565b6104cf565b6101196101de366004610b7c565b6104dd565b6060600380546101f290610bb5565b80601f016020809104026020016040519081016040528092919081815260200182805461021e90610bb5565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b600033610283818585610508565b60019150505b92915050565b60003361029d85828561062c565b6102a88585856106a0565b506001949350505050565b602081015160008190036102da57604051634bf29fe960e01b815260040160405180910390fd5b600064e8d4a510006102ea6103e1565b6102f49084610c05565b6102fe9190610c1c565b83516040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610c3e565b90508181101561039a57604051633dcd925d60e11b8152600481018290526024015b60405180910390fd5b602084018290526103aa84610844565b50505050565b6000336102838185856103c383836104dd565b6103cd9190610c57565b610508565b6060600480546101f290610bb5565b6006546040805163cab0f33560e01b815290516000926001600160a01b03169163cab0f3359160048083019260209291908290030181865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610c3e565b905090565b6000338161046282866104dd565b9050838110156104c25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610391565b6102a88286868403610508565b6000336102838185856106a0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661056a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610391565b6001600160a01b0382166105cb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610391565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061063884846104dd565b905060001981146103aa57818110156106935760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610391565b6103aa8484848403610508565b6001600160a01b0383166107045760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610391565b6001600160a01b0382166107665760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610391565b6001600160a01b038316600090815260208190526040902054818110156107de5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610391565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36103aa565b6020818101516040805160a08101825284516001600160a01b039081166060808401918252608080850187905291845284880151848801528701518385015283518085018552308152958601859052860151925163187945bd60e11b815293947f0000000000000000000000000000000000000000000000000000000000000000909116936330f28b7a936108e0939291339190600401610c6a565b600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b505050505050565b6000815180845260005b8181101561093c57602081850181015186830182015201610920565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061096f6020830184610916565b9392505050565b6001600160a01b038116811461098b57600080fd5b50565b600080604083850312156109a157600080fd5b82356109ac81610976565b946020939093013593505050565b6000806000606084860312156109cf57600080fd5b83356109da81610976565b925060208401356109ea81610976565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610a3457610a346109fb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a6357610a636109fb565b604052919050565b60006020808385031215610a7e57600080fd5b823567ffffffffffffffff80821115610a9657600080fd5b9084019060a08287031215610aaa57600080fd5b610ab2610a11565b8235610abd81610976565b8082525083830135848201526040830135604082015260608301356060820152608083013582811115610aef57600080fd5b80840193505086601f840112610b0457600080fd5b823582811115610b1657610b166109fb565b610b28601f8201601f19168601610a3a565b92508083528785828601011115610b3e57600080fd5b80858501868501376000908301909401939093526080830152509392505050565b600060208284031215610b7157600080fd5b813561096f81610976565b60008060408385031215610b8f57600080fd5b8235610b9a81610976565b91506020830135610baa81610976565b809150509250929050565b600181811c90821680610bc957607f821691505b602082108103610be957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761028957610289610bef565b600082610c3957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610c5057600080fd5b5051919050565b8082018082111561028957610289610bef565b6000610100865160018060a01b03808251168552602082015160208601526020890151604086015260408901516060860152808851166080860152602088015160a086015280871660c086015250508060e0840152610ccb81840185610916565b97965050505050505056fea26469706673582212207a0a9f27e9944f15cf4045747673bc12f069ffefe1c681f022cac7675be32ef164736f6c63430008130033",
    "sourceMap": "624:2328:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1288:14:40;;1281:22;1263:41;;1251:2;1236:18;4431:197:32;1123:187:40;3242:106:32;3329:12;;3242:106;;;1461:25:40;;;1449:2;1434:18;3242:106:32;1315:177:40;5190:286:32;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;2100:36:40;;2088:2;2073:18;3091:91:32;1958:184:40;1127:1128:1;;;;;;:::i;:::-;;:::i;:::-;;5871:234:32;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:32;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;1022:93:1:-;;;:::i;6592:427:32:-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:36;4568:32:32;719:10:36;4584:7:32;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:36;5373:38:32;5389:4;719:10:36;5404:6:32;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:32;;5190:286;-1:-1:-1;;;;5190:286:32:o;1127:1128:1:-;1212:13;;;;1196;1240:10;;;1236:37;;1259:14;;-1:-1:-1;;;1259:14:1;;;;;;;;;;;1236:37;1284:13;1323:8;1309:10;:8;:10::i;:::-;1301:18;;:5;:18;:::i;:::-;1300:31;;;;:::i;:::-;1364:12;;:34;;-1:-1:-1;;;1364:34:1;;1387:10;1364:34;;;5865:51:40;1284:47:1;;-1:-1:-1;1341:20:1;;-1:-1:-1;;;;;1364:22:1;;;;;;5838:18:40;;1364:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1341:57;;1428:5;1413:12;:20;1409:63;;;1442:30;;-1:-1:-1;;;1442:30:1;;;;;1461:25:40;;;1434:18;;1442:30:1;;;;;;;;1409:63;1483:13;;;:21;;;1515:14;1483:6;1515;:14::i;:::-;1186:1069;;;1127:1128;:::o;5871:234:32:-;5959:4;719:10:36;6013:64:32;719:10:36;6029:7:32;6066:10;6038:25;719:10:36;6029:7:32;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;1022:93:1:-;1088:3;;:20;;;-1:-1:-1;;;1088:20:1;;;;1062:7;;-1:-1:-1;;;;;1088:3:1;;:18;;:20;;;;;;;;;;;;;;:3;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1081:27;;1022:93;:::o;6592:427:32:-;6685:4;719:10:36;6685:4:32;6766:25;719:10:36;6783:7:32;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:32;;6448:2:40;6801:85:32;;;6430:21:40;6487:2;6467:18;;;6460:30;6526:34;6506:18;;;6499:62;-1:-1:-1;;;6577:18:40;;;6570:35;6622:19;;6801:85:32;6246:401:40;6801:85:32;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:36;3860:28:32;719:10:36;3877:2:32;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:32;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:32;;10627:68;;;;-1:-1:-1;;;10627:68:32;;6854:2:40;10627:68:32;;;6836:21:40;6893:2;6873:18;;;6866:30;6932:34;6912:18;;;6905:62;-1:-1:-1;;;6983:18:40;;;6976:34;7027:19;;10627:68:32;6652:400:40;10627:68:32;-1:-1:-1;;;;;10713:21:32;;10705:68;;;;-1:-1:-1;;;10705:68:32;;7259:2:40;10705:68:32;;;7241:21:40;7298:2;7278:18;;;7271:30;7337:34;7317:18;;;7310:62;-1:-1:-1;;;7388:18:40;;;7381:32;7430:19;;10705:68:32;7057:398:40;10705:68:32;-1:-1:-1;;;;;10784:18:32;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1461:25:40;;;10835:32:32;;1434:18:40;10835:32:32;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:32;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:32;;7662:2:40;11404:68:32;;;7644:21:40;7701:2;7681:18;;;7674:30;7740:31;7720:18;;;7713:59;7789:18;;11404:68:32;7460:353:40;11404:68:32;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;7473:818::-;-1:-1:-1;;;;;7599:18:32;;7591:68;;;;-1:-1:-1;;;7591:68:32;;8020:2:40;7591:68:32;;;8002:21:40;8059:2;8039:18;;;8032:30;8098:34;8078:18;;;8071:62;-1:-1:-1;;;8149:18:40;;;8142:35;8194:19;;7591:68:32;7818:401:40;7591:68:32;-1:-1:-1;;;;;7677:16:32;;7669:64;;;;-1:-1:-1;;;7669:64:32;;8426:2:40;7669:64:32;;;8408:21:40;8465:2;8445:18;;;8438:30;8504:34;8484:18;;;8477:62;-1:-1:-1;;;8555:18:40;;;8548:33;8598:19;;7669:64:32;8224:399:40;7669:64:32;-1:-1:-1;;;;;7815:15:32;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:32;;8830:2:40;7840:72:32;;;8812:21:40;8869:2;8849:18;;;8842:30;8908:34;8888:18;;;8881:62;-1:-1:-1;;;8959:18:40;;;8952:36;9005:19;;7840:72:32;8628:402:40;7840:72:32;-1:-1:-1;;;;;7946:15:32;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1461:25:40;;;8161:13:32;;8210:26;;1434:18:40;8210:26:32;;;;;;;8247:37;12180:121;2262:634:1;2348:13;;;;;2412:274;;;2469:122;;;;;2524:12;;-1:-1:-1;;;;;2469:122:1;;;2412:274;;;;2469:122;;;;;;;;;;2412:274;;;2616:12;;;;2412:274;;;;2656:15;;;2412:274;;;;2700:125;;;;;;;2764:4;2700:125;;;;;;;;2863:16;;;2372:517;;-1:-1:-1;;;2372:517:1;;2348:13;;2372:7;:26;;;;;;:517;;2412:274;2700:125;2839:10;;2863:16;2372:517;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:575;2262:634;:::o;14:423:40:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:40:o;667:131::-;-1:-1:-1;;;;;742:31:40;;732:42;;722:70;;788:1;785;778:12;722:70;667:131;:::o;803:315::-;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;987:9;974:23;1006:31;1031:5;1006:31;:::i;:::-;1056:5;1108:2;1093:18;;;;1080:32;;-1:-1:-1;;;803:315:40:o;1497:456::-;1574:6;1582;1590;1643:2;1631:9;1622:7;1618:23;1614:32;1611:52;;;1659:1;1656;1649:12;1611:52;1698:9;1685:23;1717:31;1742:5;1717:31;:::i;:::-;1767:5;-1:-1:-1;1824:2:40;1809:18;;1796:32;1837:33;1796:32;1837:33;:::i;:::-;1497:456;;1889:7;;-1:-1:-1;;;1943:2:40;1928:18;;;;1915:32;;1497:456::o;2147:127::-;2208:10;2203:3;2199:20;2196:1;2189:31;2239:4;2236:1;2229:15;2263:4;2260:1;2253:15;2279:253;2351:2;2345:9;2393:4;2381:17;;2428:18;2413:34;;2449:22;;;2410:62;2407:88;;;2475:18;;:::i;:::-;2511:2;2504:22;2279:253;:::o;2537:275::-;2608:2;2602:9;2673:2;2654:13;;-1:-1:-1;;2650:27:40;2638:40;;2708:18;2693:34;;2729:22;;;2690:62;2687:88;;;2755:18;;:::i;:::-;2791:2;2784:22;2537:275;;-1:-1:-1;2537:275:40:o;2817:1340::-;2904:6;2935:2;2978;2966:9;2957:7;2953:23;2949:32;2946:52;;;2994:1;2991;2984:12;2946:52;3034:9;3021:23;3063:18;3104:2;3096:6;3093:14;3090:34;;;3120:1;3117;3110:12;3090:34;3143:22;;;;3199:4;3181:16;;;3177:27;3174:47;;;3217:1;3214;3207:12;3174:47;3243:22;;:::i;:::-;3302:2;3289:16;3314:33;3339:7;3314:33;:::i;:::-;3370:7;3363:5;3356:22;;3431:2;3427;3423:11;3410:25;3405:2;3398:5;3394:14;3387:49;3489:2;3485;3481:11;3468:25;3463:2;3456:5;3452:14;3445:49;3547:2;3543;3539:11;3526:25;3521:2;3514:5;3510:14;3503:49;3598:3;3594:2;3590:12;3577:26;3628:2;3618:8;3615:16;3612:36;;;3644:1;3641;3634:12;3612:36;3675:8;3671:2;3667:17;3657:27;;;3722:7;3715:4;3711:2;3707:13;3703:27;3693:55;;3744:1;3741;3734:12;3693:55;3780:2;3767:16;3802:2;3798;3795:10;3792:36;;;3808:18;;:::i;:::-;3850:53;3893:2;3874:13;;-1:-1:-1;;3870:27:40;3866:36;;3850:53;:::i;:::-;3837:66;;3926:2;3919:5;3912:17;3966:7;3961:2;3956;3952;3948:11;3944:20;3941:33;3938:53;;;3987:1;3984;3977:12;3938:53;4042:2;4037;4033;4029:11;4024:2;4017:5;4013:14;4000:45;4086:1;4065:14;;;4061:23;;;4054:34;;;;4115:3;4104:15;;4097:30;-1:-1:-1;4108:5:40;2817:1340;-1:-1:-1;;;2817:1340:40:o;4162:247::-;4221:6;4274:2;4262:9;4253:7;4249:23;4245:32;4242:52;;;4290:1;4287;4280:12;4242:52;4329:9;4316:23;4348:31;4373:5;4348:31;:::i;4414:388::-;4482:6;4490;4543:2;4531:9;4522:7;4518:23;4514:32;4511:52;;;4559:1;4556;4549:12;4511:52;4598:9;4585:23;4617:31;4642:5;4617:31;:::i;:::-;4667:5;-1:-1:-1;4724:2:40;4709:18;;4696:32;4737:33;4696:32;4737:33;:::i;:::-;4789:7;4779:17;;;4414:388;;;;;:::o;4807:380::-;4886:1;4882:12;;;;4929;;;4950:61;;5004:4;4996:6;4992:17;4982:27;;4950:61;5057:2;5049:6;5046:14;5026:18;5023:38;5020:161;;5103:10;5098:3;5094:20;5091:1;5084:31;5138:4;5135:1;5128:15;5166:4;5163:1;5156:15;5020:161;;4807:380;;;:::o;5192:127::-;5253:10;5248:3;5244:20;5241:1;5234:31;5284:4;5281:1;5274:15;5308:4;5305:1;5298:15;5324:168;5397:9;;;5428;;5445:15;;;5439:22;;5425:37;5415:71;;5466:18;;:::i;5497:217::-;5537:1;5563;5553:132;;5607:10;5602:3;5598:20;5595:1;5588:31;5642:4;5639:1;5632:15;5670:4;5667:1;5660:15;5553:132;-1:-1:-1;5699:9:40;;5497:217::o;5927:184::-;5997:6;6050:2;6038:9;6029:7;6025:23;6021:32;6018:52;;;6066:1;6063;6056:12;6018:52;-1:-1:-1;6089:16:40;;5927:184;-1:-1:-1;5927:184:40:o;6116:125::-;6181:9;;;6202:10;;;6199:36;;;6215:18;;:::i;9035:966::-;9385:4;9414:3;9442:6;9436:13;9485:1;9481;9476:3;9472:11;9468:19;9529:2;9524;9518:9;9514:18;9503:9;9496:37;9585:4;9581:2;9577:13;9571:20;9564:4;9553:9;9549:20;9542:50;9648:4;9640:6;9636:17;9630:24;9623:4;9612:9;9608:20;9601:54;9711:4;9703:6;9699:17;9693:24;9686:4;9675:9;9671:20;9664:54;9774:2;9765:6;9759:13;9755:22;9749:3;9738:9;9734:19;9727:51;9833:4;9825:6;9821:17;9815:24;9809:3;9798:9;9794:19;9787:53;9889:2;9881:6;9877:15;9871:3;9860:9;9856:19;9849:44;;;9930:2;9924:3;9913:9;9909:19;9902:31;9950:45;9991:2;9980:9;9976:18;9968:6;9950:45;:::i;:::-;9942:53;9035:966;-1:-1:-1;;;;;;;9035:966:40:o",
    "linkReferences": {},
    "immutableReferences": {
      "79": [
        {
          "start": 2214,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getPrice()": "98d5fdca",
    "increaseAllowance(address,uint256)": "39509351",
    "issue((address,uint256,uint256,uint256,bytes))": "31e8cb04",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Cant_be_zero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyerBalance\",\"type\":\"uint256\"}],\"name\":\"Not_enough_funds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IPermit2.Permit2Buy\",\"name\":\"buyOp_\",\"type\":\"tuple\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EnergyETH.sol\":\"EnergyETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"contracts/EnergyETH.sol\":{\"keccak256\":\"0xf0d41e1c7afa733ba5cfdfbec7a2d683069313576d461ac4b38f6343523d4268\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d22a3d45c54d61e71ed7eeadbec738e20a22a7724b74fc6386546d3d242b519\",\"dweb:/ipfs/QmeKvdvsszpB9phAzDEAbbnGphNGSY9UYWJeQrvBwKYhzC\"]},\"interfaces/IPermit2.sol\":{\"keccak256\":\"0xc44c0a821eb218632bb314df642608c0915b99f494a63617fc2b211376602779\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://615ba6715d3e2286d7deae1846d0e2b8da9cd57a897340b5b58d77995814d436\",\"dweb:/ipfs/QmdDxnGwEhzAtT4Y9miJpYxRH5r8wfNPhTrPt7GPhL8v53\"]},\"interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x5e03ef1db4bfbf6a79809f8f6f61d70f330579286a66f53c603ccee2833e6152\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://508e9a49a24be742788019749254845840e7909a542fb5694038e32cd54b786c\",\"dweb:/ipfs/QmUk8sUZeSvGFghU6UxK7592GaoP6siCLXtNqkAMYhirRd\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Cant_be_zero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "buyerBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Not_enough_funds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPermit2.Permit2Buy",
              "name": "buyOp_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "issue"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/EnergyETH.sol": "EnergyETH"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/EnergyETH.sol": {
        "keccak256": "0xf0d41e1c7afa733ba5cfdfbec7a2d683069313576d461ac4b38f6343523d4268",
        "urls": [
          "bzz-raw://0d22a3d45c54d61e71ed7eeadbec738e20a22a7724b74fc6386546d3d242b519",
          "dweb:/ipfs/QmeKvdvsszpB9phAzDEAbbnGphNGSY9UYWJeQrvBwKYhzC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/IPermit2.sol": {
        "keccak256": "0xc44c0a821eb218632bb314df642608c0915b99f494a63617fc2b211376602779",
        "urls": [
          "bzz-raw://615ba6715d3e2286d7deae1846d0e2b8da9cd57a897340b5b58d77995814d436",
          "dweb:/ipfs/QmdDxnGwEhzAtT4Y9miJpYxRH5r8wfNPhTrPt7GPhL8v53"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/ozIDiamond.sol": {
        "keccak256": "0x5e03ef1db4bfbf6a79809f8f6f61d70f330579286a66f53c603ccee2833e6152",
        "urls": [
          "bzz-raw://508e9a49a24be742788019749254845840e7909a542fb5694038e32cd54b786c",
          "dweb:/ipfs/QmUk8sUZeSvGFghU6UxK7592GaoP6siCLXtNqkAMYhirRd"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/EnergyETH.sol",
    "id": 203,
    "exportedSymbols": {
      "Address": [
        32037
      ],
      "Cant_approve": [
        52
      ],
      "Cant_be_zero": [
        44
      ],
      "Cant_transfer": [
        56
      ],
      "Context": [
        32059
      ],
      "ERC20": [
        31604
      ],
      "EnergyETH": [
        202
      ],
      "IERC20": [
        31682
      ],
      "IERC20Metadata": [
        31707
      ],
      "IPermit2": [
        1079
      ],
      "ISwapRouter": [
        32173
      ],
      "IUniswapV3SwapCallback": [
        32073
      ],
      "Not_enough_funds": [
        48
      ],
      "console": [
        21355
      ],
      "ozIDiamond": [
        1253
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2909:1",
    "nodes": [
      {
        "id": 35,
        "nodeType": "PragmaDirective",
        "src": "45:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 36,
        "nodeType": "ImportDirective",
        "src": "71:68:1",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 203,
        "sourceUnit": 32174,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37,
        "nodeType": "ImportDirective",
        "src": "140:56:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 203,
        "sourceUnit": 31683,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38,
        "nodeType": "ImportDirective",
        "src": "197:55:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 203,
        "sourceUnit": 31605,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39,
        "nodeType": "ImportDirective",
        "src": "253:51:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 203,
        "sourceUnit": 32038,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40,
        "nodeType": "ImportDirective",
        "src": "305:38:1",
        "nodes": [],
        "absolutePath": "interfaces/ozIDiamond.sol",
        "file": "../interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 203,
        "sourceUnit": 1254,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41,
        "nodeType": "ImportDirective",
        "src": "344:36:1",
        "nodes": [],
        "absolutePath": "interfaces/IPermit2.sol",
        "file": "../interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 203,
        "sourceUnit": 1080,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42,
        "nodeType": "ImportDirective",
        "src": "414:31:1",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 203,
        "sourceUnit": 21356,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44,
        "nodeType": "ErrorDefinition",
        "src": "481:21:1",
        "nodes": [],
        "errorSelector": "4bf29fe9",
        "name": "Cant_be_zero",
        "nameLocation": "487:12:1",
        "parameters": {
          "id": 43,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "499:2:1"
        }
      },
      {
        "id": 48,
        "nodeType": "ErrorDefinition",
        "src": "503:45:1",
        "nodes": [],
        "errorSelector": "7b9b24ba",
        "name": "Not_enough_funds",
        "nameLocation": "509:16:1",
        "parameters": {
          "id": 47,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 46,
              "mutability": "mutable",
              "name": "buyerBalance",
              "nameLocation": "534:12:1",
              "nodeType": "VariableDeclaration",
              "scope": 48,
              "src": "526:20:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 45,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "526:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "525:22:1"
        }
      },
      {
        "id": 52,
        "nodeType": "ErrorDefinition",
        "src": "549:35:1",
        "nodes": [],
        "errorSelector": "1c806982",
        "name": "Cant_approve",
        "nameLocation": "555:12:1",
        "parameters": {
          "id": 51,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 50,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "576:6:1",
              "nodeType": "VariableDeclaration",
              "scope": 52,
              "src": "568:14:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 49,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "568:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "567:16:1"
        }
      },
      {
        "id": 56,
        "nodeType": "ErrorDefinition",
        "src": "585:36:1",
        "nodes": [],
        "errorSelector": "22cc7a08",
        "name": "Cant_transfer",
        "nameLocation": "591:13:1",
        "parameters": {
          "id": 55,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 54,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "613:6:1",
              "nodeType": "VariableDeclaration",
              "scope": 56,
              "src": "605:14:1",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 53,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "605:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "604:16:1"
        }
      },
      {
        "id": 202,
        "nodeType": "ContractDefinition",
        "src": "624:2328:1",
        "nodes": [
          {
            "id": 64,
            "nodeType": "VariableDeclaration",
            "src": "659:64:1",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "666:4:1",
            "scope": 202,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$31682",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 60,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59,
                "name": "IERC20",
                "nameLocations": [
                  "659:6:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31682,
                "src": "659:6:1"
              },
              "referencedDeclaration": 31682,
              "src": "659:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$31682",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846463937304136314130346231634131343833344134336635644534353333654244444235434338",
                  "id": 62,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "680:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 61,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31682,
                "src": "673:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$31682_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 63,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "673:50:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$31682",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 67,
            "nodeType": "VariableDeclaration",
            "src": "729:71:1",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "wethAdrr",
            "nameLocation": "747:8:1",
            "scope": 202,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838326146343934343744386130376533626439354244306435366633353234313532336642616231",
              "id": 66,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "758:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
            },
            "visibility": "internal"
          },
          {
            "id": 73,
            "nodeType": "VariableDeclaration",
            "src": "806:71:1",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OZL",
            "nameLocation": "817:3:1",
            "scope": 202,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ozIDiamond_$1253",
              "typeString": "contract ozIDiamond"
            },
            "typeName": {
              "id": 69,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68,
                "name": "ozIDiamond",
                "nameLocations": [
                  "806:10:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1253,
                "src": "806:10:1"
              },
              "referencedDeclaration": 1253,
              "src": "806:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$1253",
                "typeString": "contract ozIDiamond"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837443166313344643035453662303637334443334430424661313464343041373443666133454632",
                  "id": 71,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "834:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7D1f13Dd05E6b0673DC3D0BFa14d40A74Cfa3EF2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 70,
                "name": "ozIDiamond",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1253,
                "src": "823:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$1253_$",
                  "typeString": "type(contract ozIDiamond)"
                }
              },
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "823:54:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$1253",
                "typeString": "contract ozIDiamond"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 79,
            "nodeType": "VariableDeclaration",
            "src": "883:81:1",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "PERMIT2",
            "nameLocation": "902:7:1",
            "scope": 202,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$1079",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 75,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74,
                "name": "IPermit2",
                "nameLocations": [
                  "883:8:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1079,
                "src": "883:8:1"
              },
              "referencedDeclaration": 1079,
              "src": "883:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$1079",
                "typeString": "contract IPermit2"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
                  "id": 77,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "921:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 76,
                "name": "IPermit2",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1079,
                "src": "912:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPermit2_$1079_$",
                  "typeString": "type(contract IPermit2)"
                }
              },
              "id": 78,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "912:52:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$1079",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87,
            "nodeType": "FunctionDefinition",
            "src": "971:44:1",
            "nodes": [],
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "1013:2:1",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456e6572677920455448",
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "991:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4bd924deff42c91521bdefb2ca9a2dce3b459602ead3da951ea02073f4b45534",
                      "typeString": "literal_string \"Energy ETH\""
                    },
                    "value": "Energy ETH"
                  },
                  {
                    "hexValue": "65455448",
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1005:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d6c14ce243ce7d5c149bd600a04038f4aa1a3243dd4808b0e0441d8ec7b87788",
                      "typeString": "literal_string \"eETH\""
                    },
                    "value": "eETH"
                  }
                ],
                "id": 84,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 81,
                  "name": "ERC20",
                  "nameLocations": [
                    "985:5:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31604,
                  "src": "985:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "985:27:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:1"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:0:1"
            },
            "scope": 202,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 97,
            "nodeType": "FunctionDefinition",
            "src": "1022:93:1",
            "nodes": [],
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1071:44:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 92,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1088:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$1253",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1092:14:1",
                      "memberName": "getEnergyPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1247,
                      "src": "1088:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1088:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 91,
                  "id": 95,
                  "nodeType": "Return",
                  "src": "1081:27:1"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "1031:8:1",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1039:2:1"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1062:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:9:1"
            },
            "scope": 202,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 155,
            "nodeType": "FunctionDefinition",
            "src": "1127:1128:1",
            "nodes": [],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1186:1069:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "toBuy",
                      "nameLocation": "1204:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1196:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1196:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 107,
                  "initialValue": {
                    "expression": {
                      "id": 105,
                      "name": "buyOp_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "1212:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                        "typeString": "struct IPermit2.Permit2Buy memory"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1219:6:1",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1053,
                    "src": "1212:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1196:29:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 108,
                      "name": "toBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "1240:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1249:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1240:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "IfStatement",
                  "src": "1236:37:1",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 111,
                        "name": "Cant_be_zero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1259:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1259:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 113,
                    "nodeType": "RevertStatement",
                    "src": "1252:21:1"
                  }
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "1292:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1284:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1284:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 126,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 117,
                            "name": "toBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104,
                            "src": "1301:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 118,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "1309:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1309:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1301:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 121,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1300:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1323:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3132",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1329:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        "value": "12"
                      },
                      "src": "1323:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      }
                    },
                    "src": "1300:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1284:47:1"
                },
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "buyerBalance",
                      "nameLocation": "1349:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1341:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1341:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1387:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1391:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1387:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 129,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1364:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1371:5:1",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1051,
                        "src": "1364:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31682",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1377:9:1",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31639,
                      "src": "1364:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1341:57:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 136,
                      "name": "buyerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "1413:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 137,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1428:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1413:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 143,
                  "nodeType": "IfStatement",
                  "src": "1409:63:1",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 140,
                          "name": "buyerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1459:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 139,
                        "name": "Not_enough_funds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1442:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1442:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 142,
                    "nodeType": "RevertStatement",
                    "src": "1435:37:1"
                  }
                },
                {
                  "expression": {
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 144,
                        "name": "buyOp_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1483:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1490:6:1",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1053,
                      "src": "1483:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 147,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1499:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1483:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151,
                        "name": "buyOp_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1522:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      ],
                      "id": 150,
                      "name": "_issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "1515:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Permit2Buy_$1060_memory_ptr_$returns$__$",
                        "typeString": "function (struct IPermit2.Permit2Buy memory)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1515:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:14:1"
                }
              ]
            },
            "functionSelector": "31e8cb04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issue",
            "nameLocation": "1136:5:1",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "buyOp_",
                  "nameLocation": "1169:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1142:33:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                    "typeString": "struct IPermit2.Permit2Buy"
                  },
                  "typeName": {
                    "id": 99,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 98,
                      "name": "IPermit2.Permit2Buy",
                      "nameLocations": [
                        "1142:8:1",
                        "1151:10:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1060,
                      "src": "1142:19:1"
                    },
                    "referencedDeclaration": 1060,
                    "src": "1142:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit2Buy_$1060_storage_ptr",
                      "typeString": "struct IPermit2.Permit2Buy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:35:1"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:1"
            },
            "scope": 202,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 197,
            "nodeType": "FunctionDefinition",
            "src": "2262:634:1",
            "nodes": [],
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "2321:575:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2339:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2331:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2331:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 165,
                  "initialValue": {
                    "expression": {
                      "id": 163,
                      "name": "buyOp_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2348:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                        "typeString": "struct IPermit2.Permit2Buy memory"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2355:6:1",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1053,
                    "src": "2348:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2331:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 173,
                                  "name": "buyOp_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 158,
                                  "src": "2524:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                                    "typeString": "struct IPermit2.Permit2Buy memory"
                                  }
                                },
                                "id": 174,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2531:5:1",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1051,
                                "src": "2524:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$31682",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 175,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 162,
                                "src": "2566:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$31682",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 171,
                                "name": "IPermit2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1079,
                                "src": "2469:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPermit2_$1079_$",
                                  "typeString": "type(contract IPermit2)"
                                }
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2478:16:1",
                              "memberName": "TokenPermissions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1035,
                              "src": "2469:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenPermissions_$1035_storage_ptr_$",
                                "typeString": "type(struct IPermit2.TokenPermissions storage pointer)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "2517:5:1",
                              "2558:6:1"
                            ],
                            "names": [
                              "token",
                              "amount"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2469:122:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenPermissions_$1035_memory_ptr",
                              "typeString": "struct IPermit2.TokenPermissions memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 177,
                              "name": "buyOp_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "2616:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                                "typeString": "struct IPermit2.Permit2Buy memory"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2623:5:1",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1055,
                            "src": "2616:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 179,
                              "name": "buyOp_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "2656:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                                "typeString": "struct IPermit2.Permit2Buy memory"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2663:8:1",
                            "memberName": "deadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1057,
                            "src": "2656:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenPermissions_$1035_memory_ptr",
                              "typeString": "struct IPermit2.TokenPermissions memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 169,
                            "name": "IPermit2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "2412:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPermit2_$1079_$",
                              "typeString": "type(contract IPermit2)"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2421:18:1",
                          "memberName": "PermitTransferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1043,
                          "src": "2412:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PermitTransferFrom_$1043_storage_ptr_$",
                            "typeString": "type(struct IPermit2.PermitTransferFrom storage pointer)"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2458:9:1",
                          "2609:5:1",
                          "2646:8:1"
                        ],
                        "names": [
                          "permitted",
                          "nonce",
                          "deadline"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2412:274:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$1043_memory_ptr",
                          "typeString": "struct IPermit2.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 186,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2764:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EnergyETH_$202",
                                  "typeString": "contract EnergyETH"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EnergyETH_$202",
                                  "typeString": "contract EnergyETH"
                                }
                              ],
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2756:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 184,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2756:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2756:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 188,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "2804:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 182,
                            "name": "IPermit2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "2700:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPermit2_$1079_$",
                              "typeString": "type(contract IPermit2)"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2709:24:1",
                          "memberName": "SignatureTransferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1048,
                          "src": "2700:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignatureTransferDetails_$1048_storage_ptr_$",
                            "typeString": "type(struct IPermit2.SignatureTransferDetails storage pointer)"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2752:2:1",
                          "2787:15:1"
                        ],
                        "names": [
                          "to",
                          "requestedAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2700:125:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$1048_memory_ptr",
                          "typeString": "struct IPermit2.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2839:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2843:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2839:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 192,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "2863:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2870:9:1",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1059,
                        "src": "2863:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$1043_memory_ptr",
                          "typeString": "struct IPermit2.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$1048_memory_ptr",
                          "typeString": "struct IPermit2.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 166,
                        "name": "PERMIT2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "2372:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$1079",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2380:18:1",
                      "memberName": "permitTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1073,
                      "src": "2372:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$1043_memory_ptr_$_t_struct$_SignatureTransferDetails_$1048_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IPermit2.PermitTransferFrom memory,struct IPermit2.SignatureTransferDetails memory,address,bytes memory) external"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2372:517:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "2372:517:1"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_issue",
            "nameLocation": "2271:6:1",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "buyOp_",
                  "nameLocation": "2305:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2278:33:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit2Buy_$1060_memory_ptr",
                    "typeString": "struct IPermit2.Permit2Buy"
                  },
                  "typeName": {
                    "id": 157,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 156,
                      "name": "IPermit2.Permit2Buy",
                      "nameLocations": [
                        "2278:8:1",
                        "2287:10:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1060,
                      "src": "2278:19:1"
                    },
                    "referencedDeclaration": 1060,
                    "src": "2278:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit2Buy_$1060_storage_ptr",
                      "typeString": "struct IPermit2.Permit2Buy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2277:35:1"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:0:1"
            },
            "scope": 202,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 201,
            "nodeType": "FunctionDefinition",
            "src": "2904:44:1",
            "nodes": [],
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2938:10:1",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositInDeFi",
            "nameLocation": "2913:14:1",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2927:2:1"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2938:0:1"
            },
            "scope": 202,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57,
              "name": "ERC20",
              "nameLocations": [
                "646:5:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31604,
              "src": "646:5:1"
            },
            "id": 58,
            "nodeType": "InheritanceSpecifier",
            "src": "646:5:1"
          }
        ],
        "canonicalName": "EnergyETH",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          202,
          31604,
          31707,
          31682,
          32059
        ],
        "name": "EnergyETH",
        "nameLocation": "633:9:1",
        "scope": 203,
        "usedErrors": [
          44,
          48
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 1
}