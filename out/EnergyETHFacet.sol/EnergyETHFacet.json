{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Cant_be_zero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyerBalance",
          "type": "uint256"
        }
      ],
      "name": "Not_enough_funds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPermit2.Permit2Buy",
          "name": "buyOp_",
          "type": "tuple"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c0604052600580546001600160a01b031990811673ff970a61a04b1ca14834a43f5de4533ebddb5cc8179091557382af49447d8a07e3bd95bd0d56f35241523fbab160805260068054909116737d1f13dd05e6b0673dc3d0bfa14d40a74cfa3ef21790556e22d473030f116ddee9f6b43ac78ba360a0523480156200008457600080fd5b506040518060400160405280600a81526020016908adccae4cef2408aa8960b31b815250604051806040016040528060048152602001630ca8aa8960e31b8152508160039081620000d6919062000193565b506004620000e5828262000193565b5050506200025f565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011957607f821691505b6020821081036200013a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018e57600081815260208120601f850160051c81016020861015620001695750805b601f850160051c820191505b818110156200018a5782815560010162000175565b5050505b505050565b81516001600160401b03811115620001af57620001af620000ee565b620001c781620001c0845462000104565b8462000140565b602080601f831160018114620001ff5760008415620001e65750858301515b600019600386901b1c1916600185901b1785556200018a565b600085815260208120601f198616915b8281101562000230578886015182559484019460019091019084016200020f565b50858210156200024f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516112886200029060003960008181610a4e01528181610b700152610c3a0152600050506112886000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806398d5fdca1161006657806398d5fdca146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b8063395093511461015e57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a57806331e8cb0414610149575b600080fd5b6100dc6101e3565b6040516100e99190610e9b565b60405180910390f35b610105610100366004610ed1565b610275565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610efb565b61028f565b604051601281526020016100e9565b61015c610157366004610fa7565b6102b3565b005b61010561016c366004610ed1565b6103be565b61011961017f366004611097565b6001600160a01b031660009081526020819052604090205490565b6100dc6103e0565b6101196103ef565b6101056101b8366004610ed1565b610462565b6101056101cb366004610ed1565b6104dd565b6101196101de3660046110b2565b6104eb565b6060600380546101f2906110e5565b80601f016020809104026020016040519081016040528092919081815260200182805461021e906110e5565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b600033610283818585610516565b60019150505b92915050565b60003361029d85828561063a565b6102a88585856106ae565b506001949350505050565b602081015160008190036102da57604051634bf29fe960e01b815260040160405180910390fd5b600064e8d4a510006102ea6103ef565b6102f49084611135565b6102fe919061114c565b6005546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610370919061116e565b90508181101561039b57604051633dcd925d60e11b8152600481018290526024015b60405180910390fd5b602084018290526005546103b8906001600160a01b031685610852565b50505050565b6000336102838185856103d183836104eb565b6103db9190611187565b610516565b6060600480546101f2906110e5565b6006546040805163cab0f33560e01b815290516000926001600160a01b03169163cab0f3359160048083019260209291908290030181865afa158015610439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045d919061116e565b905090565b6000338161047082866104eb565b9050838110156104d05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610392565b6102a88286868403610516565b6000336102838185856106ae565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105785760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610392565b6001600160a01b0382166105d95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610392565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061064684846104eb565b905060001981146103b857818110156106a15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610392565b6103b88484848403610516565b6001600160a01b0383166107125760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610392565b6001600160a01b0382166107745760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610392565b6001600160a01b038316600090815260208190526040902054818110156107ec5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610392565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36103b8565b60008160200151905061088c6040518060400160405280601081526020016f2d2d2d2d2d206661636574202d2d2d2d60801b815250610d21565b6108b660405180604001604052806008815260200167030b6b7bab73a1d160c51b81525082610d67565b6108df6040518060400160405280600781526020016603a37b5b2b71d160cd1b81525084610db0565b61090c6040518060400160405280600781526020016603737b731b29d160cd1b8152508360400151610d67565b61093c6040518060400160405280600a81526020016903232b0b23634b7329d160b51b8152508360600151610d67565b61096d6040518060400160405280600f81526020016e030b2323932b9b9943a3434b9949d1608d1b81525030610db0565b61099a604051806040016040528060078152602001660313abcb2b91d160cd1b8152508360000151610db0565b6109cc6040518060400160405280601081526020016f039b2b73232b9101e90313abcb2b91d160851b81525033610db0565b6109d98260800151610df5565b610a086040518060400160405280600e81526020016d39b4b3b730ba3ab932902f2f2f2f60911b815250610d21565b6040805180820182526014815273030b63637bbb0b731b290169039b2b73232b91d160651b60208201529051636eb1769f60e11b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152610acd92919086169063dd62ed3e906044015b602060405180830381865afa158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac8919061116e565b610d67565b604080518082018252601481527303a37b5b2b7103130b610169039b2b73232b91d160651b602082015290516370a0823160e01b8152336004820152610b2791906001600160a01b038616906370a0823190602401610a87565b6040805180820182526013815272030b63637bbb0b731b2901690313abcb2b91d1606d1b602082015283519151636eb1769f60e11b81526001600160a01b0392831660048201527f000000000000000000000000000000000000000000000000000000000000000083166024820152610bab9286169063dd62ed3e90604401610a87565b604080518082018252601381527203a37b5b2b7103130b6101690313abcb2b91d1606d1b6020820152835191516370a0823160e01b81526001600160a01b039283166004820152610c07928616906370a0823190602401610a87565b610c386040518060400160405280601081526020016f2d2d2d2d2d206661636574202d2d2d2d60801b815250610d21565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166330f28b7a60405180606001604052806040518060400160405280886001600160a01b031681526020018681525081526020018560400151815260200185606001518152506040518060400160405280306001600160a01b03168152602001858152503386608001516040518563ffffffff1660e01b8152600401610cea949392919061119a565b600060405180830381600087803b158015610d0457600080fd5b505af1158015610d18573d6000803e3d6000fd5b50505050505050565b610d6481604051602401610d359190610e9b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610e34565b50565b610dac8282604051602401610d7d929190611206565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610e34565b5050565b610dac8282604051602401610dc6929190611228565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610e34565b610d6481604051602401610e099190610e9b565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b81811015610e7b57602081850181015186830182015201610e5f565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610eae6020830184610e55565b9392505050565b80356001600160a01b0381168114610ecc57600080fd5b919050565b60008060408385031215610ee457600080fd5b610eed83610eb5565b946020939093013593505050565b600080600060608486031215610f1057600080fd5b610f1984610eb5565b9250610f2760208501610eb5565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610f7057610f70610f37565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f9f57610f9f610f37565b604052919050565b60006020808385031215610fba57600080fd5b823567ffffffffffffffff80821115610fd257600080fd5b9084019060a08287031215610fe657600080fd5b610fee610f4d565b610ff783610eb5565b81528383013584820152604083013560408201526060830135606082015260808301358281111561102757600080fd5b80840193505086601f84011261103c57600080fd5b82358281111561104e5761104e610f37565b611060601f8201601f19168601610f76565b9250808352878582860101111561107657600080fd5b80858501868501376000908301909401939093526080830152509392505050565b6000602082840312156110a957600080fd5b610eae82610eb5565b600080604083850312156110c557600080fd5b6110ce83610eb5565b91506110dc60208401610eb5565b90509250929050565b600181811c908216806110f957607f821691505b60208210810361111957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102895761028961111f565b60008261116957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561118057600080fd5b5051919050565b808201808211156102895761028961111f565b6000610100865160018060a01b03808251168552602082015160208601526020890151604086015260408901516060860152808851166080860152602088015160a086015280871660c086015250508060e08401526111fb81840185610e55565b979650505050505050565b6040815260006112196040830185610e55565b90508260208301529392505050565b60408152600061123b6040830185610e55565b905060018060a01b0383166020830152939250505056fea26469706673582212208551a2ab3f3ae04306e33179f3211792f3d4827941632d7d42b698cfbf36e5f064736f6c63430008130033",
    "sourceMap": "630:3517:2:-:0;;;670:64;;;-1:-1:-1;;;;;;670:64:2;;;691:42;670:64;;;;769:42;740:71;;817;;;;;;845:42;817:71;;;932:42;894:81;;982:44;;;;;;;;;;1976:113:32;;;;;;;;;;;;;-1:-1:-1;;;1976:113:32;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:32;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:32;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;630:3517:2;;14:127:40;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:40;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:40;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:40;;;2580:26;2531:89;-1:-1:-1;;1335:1:40;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:40;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:40;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:40;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:40:o;:::-;630:3517:2;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806398d5fdca1161006657806398d5fdca146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b8063395093511461015e57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a57806331e8cb0414610149575b600080fd5b6100dc6101e3565b6040516100e99190610e9b565b60405180910390f35b610105610100366004610ed1565b610275565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610efb565b61028f565b604051601281526020016100e9565b61015c610157366004610fa7565b6102b3565b005b61010561016c366004610ed1565b6103be565b61011961017f366004611097565b6001600160a01b031660009081526020819052604090205490565b6100dc6103e0565b6101196103ef565b6101056101b8366004610ed1565b610462565b6101056101cb366004610ed1565b6104dd565b6101196101de3660046110b2565b6104eb565b6060600380546101f2906110e5565b80601f016020809104026020016040519081016040528092919081815260200182805461021e906110e5565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b600033610283818585610516565b60019150505b92915050565b60003361029d85828561063a565b6102a88585856106ae565b506001949350505050565b602081015160008190036102da57604051634bf29fe960e01b815260040160405180910390fd5b600064e8d4a510006102ea6103ef565b6102f49084611135565b6102fe919061114c565b6005546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610370919061116e565b90508181101561039b57604051633dcd925d60e11b8152600481018290526024015b60405180910390fd5b602084018290526005546103b8906001600160a01b031685610852565b50505050565b6000336102838185856103d183836104eb565b6103db9190611187565b610516565b6060600480546101f2906110e5565b6006546040805163cab0f33560e01b815290516000926001600160a01b03169163cab0f3359160048083019260209291908290030181865afa158015610439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045d919061116e565b905090565b6000338161047082866104eb565b9050838110156104d05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610392565b6102a88286868403610516565b6000336102838185856106ae565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105785760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610392565b6001600160a01b0382166105d95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610392565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061064684846104eb565b905060001981146103b857818110156106a15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610392565b6103b88484848403610516565b6001600160a01b0383166107125760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610392565b6001600160a01b0382166107745760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610392565b6001600160a01b038316600090815260208190526040902054818110156107ec5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610392565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36103b8565b60008160200151905061088c6040518060400160405280601081526020016f2d2d2d2d2d206661636574202d2d2d2d60801b815250610d21565b6108b660405180604001604052806008815260200167030b6b7bab73a1d160c51b81525082610d67565b6108df6040518060400160405280600781526020016603a37b5b2b71d160cd1b81525084610db0565b61090c6040518060400160405280600781526020016603737b731b29d160cd1b8152508360400151610d67565b61093c6040518060400160405280600a81526020016903232b0b23634b7329d160b51b8152508360600151610d67565b61096d6040518060400160405280600f81526020016e030b2323932b9b9943a3434b9949d1608d1b81525030610db0565b61099a604051806040016040528060078152602001660313abcb2b91d160cd1b8152508360000151610db0565b6109cc6040518060400160405280601081526020016f039b2b73232b9101e90313abcb2b91d160851b81525033610db0565b6109d98260800151610df5565b610a086040518060400160405280600e81526020016d39b4b3b730ba3ab932902f2f2f2f60911b815250610d21565b6040805180820182526014815273030b63637bbb0b731b290169039b2b73232b91d160651b60208201529051636eb1769f60e11b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152610acd92919086169063dd62ed3e906044015b602060405180830381865afa158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac8919061116e565b610d67565b604080518082018252601481527303a37b5b2b7103130b610169039b2b73232b91d160651b602082015290516370a0823160e01b8152336004820152610b2791906001600160a01b038616906370a0823190602401610a87565b6040805180820182526013815272030b63637bbb0b731b2901690313abcb2b91d1606d1b602082015283519151636eb1769f60e11b81526001600160a01b0392831660048201527f000000000000000000000000000000000000000000000000000000000000000083166024820152610bab9286169063dd62ed3e90604401610a87565b604080518082018252601381527203a37b5b2b7103130b6101690313abcb2b91d1606d1b6020820152835191516370a0823160e01b81526001600160a01b039283166004820152610c07928616906370a0823190602401610a87565b610c386040518060400160405280601081526020016f2d2d2d2d2d206661636574202d2d2d2d60801b815250610d21565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166330f28b7a60405180606001604052806040518060400160405280886001600160a01b031681526020018681525081526020018560400151815260200185606001518152506040518060400160405280306001600160a01b03168152602001858152503386608001516040518563ffffffff1660e01b8152600401610cea949392919061119a565b600060405180830381600087803b158015610d0457600080fd5b505af1158015610d18573d6000803e3d6000fd5b50505050505050565b610d6481604051602401610d359190610e9b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610e34565b50565b610dac8282604051602401610d7d929190611206565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610e34565b5050565b610dac8282604051602401610dc6929190611228565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610e34565b610d6481604051602401610e099190610e9b565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b81811015610e7b57602081850181015186830182015201610e5f565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610eae6020830184610e55565b9392505050565b80356001600160a01b0381168114610ecc57600080fd5b919050565b60008060408385031215610ee457600080fd5b610eed83610eb5565b946020939093013593505050565b600080600060608486031215610f1057600080fd5b610f1984610eb5565b9250610f2760208501610eb5565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610f7057610f70610f37565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f9f57610f9f610f37565b604052919050565b60006020808385031215610fba57600080fd5b823567ffffffffffffffff80821115610fd257600080fd5b9084019060a08287031215610fe657600080fd5b610fee610f4d565b610ff783610eb5565b81528383013584820152604083013560408201526060830135606082015260808301358281111561102757600080fd5b80840193505086601f84011261103c57600080fd5b82358281111561104e5761104e610f37565b611060601f8201601f19168601610f76565b9250808352878582860101111561107657600080fd5b80858501868501376000908301909401939093526080830152509392505050565b6000602082840312156110a957600080fd5b610eae82610eb5565b600080604083850312156110c557600080fd5b6110ce83610eb5565b91506110dc60208401610eb5565b90509250929050565b600181811c908216806110f957607f821691505b60208210810361111957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176102895761028961111f565b60008261116957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561118057600080fd5b5051919050565b808201808211156102895761028961111f565b6000610100865160018060a01b03808251168552602082015160208601526020890151604086015260408901516060860152808851166080860152602088015160a086015280871660c086015250508060e08401526111fb81840185610e55565b979650505050505050565b6040815260006112196040830185610e55565b90508260208301529392505050565b60408152600061123b6040830185610e55565b905060018060a01b0383166020830152939250505056fea26469706673582212208551a2ab3f3ae04306e33179f3211792f3d4827941632d7d42b698cfbf36e5f064736f6c63430008130033",
    "sourceMap": "630:3517:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:40;;1262:22;1244:41;;1232:2;1217:18;4431:197:32;1104:187:40;3242:106:32;3329:12;;3242:106;;;1442:25:40;;;1430:2;1415:18;3242:106:32;1296:177:40;5190:286:32;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1953:36:40;;1941:2;1926:18;3091:91:32;1811:184:40;2965:1127:2;;;;;;:::i;:::-;;:::i;:::-;;5871:234:32;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:32;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;1033:93:2:-;;;:::i;6592:427:32:-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:36;4568:32:32;719:10:36;4584:7:32;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:36;5373:38:32;5389:4;719:10:36;5404:6:32;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:32;;5190:286;-1:-1:-1;;;;5190:286:32:o;2965:1127:2:-;3050:13;;;;3034;3078:10;;;3074:37;;3097:14;;-1:-1:-1;;;3097:14:2;;;;;;;;;;;3074:37;3122:13;3161:8;3147:10;:8;:10::i;:::-;3139:18;;:5;:18;:::i;:::-;3138:31;;;;:::i;:::-;3202:4;;:26;;-1:-1:-1;;;3202:26:2;;3217:10;3202:26;;;5462:51:40;3122:47:2;;-1:-1:-1;3179:20:2;;-1:-1:-1;;;;;3202:4:2;;;;:14;;5435:18:40;;3202:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3179:49;;3258:5;3243:12;:20;3239:63;;;3272:30;;-1:-1:-1;;;3272:30:2;;;;;1442:25:40;;;1415:18;;3272:30:2;;;;;;;;3239:63;3313:13;;;:21;;;3352:4;;3345:20;;-1:-1:-1;;;;;3352:4:2;3313:6;3345;:20::i;:::-;3024:1068;;;2965:1127;:::o;5871:234:32:-;5959:4;719:10:36;6013:64:32;719:10:36;6029:7:32;6066:10;6038:25;719:10:36;6029:7:32;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;1033:93:2:-;1099:3;;:20;;;-1:-1:-1;;;1099:20:2;;;;1073:7;;-1:-1:-1;;;;;1099:3:2;;:18;;:20;;;;;;;;;;;;;;:3;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1092:27;;1033:93;:::o;6592:427:32:-;6685:4;719:10:36;6685:4:32;6766:25;719:10:36;6783:7:32;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:32;;6045:2:40;6801:85:32;;;6027:21:40;6084:2;6064:18;;;6057:30;6123:34;6103:18;;;6096:62;-1:-1:-1;;;6174:18:40;;;6167:35;6219:19;;6801:85:32;5843:401:40;6801:85:32;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:36;3860:28:32;719:10:36;3877:2:32;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:32;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:32;;10627:68;;;;-1:-1:-1;;;10627:68:32;;6451:2:40;10627:68:32;;;6433:21:40;6490:2;6470:18;;;6463:30;6529:34;6509:18;;;6502:62;-1:-1:-1;;;6580:18:40;;;6573:34;6624:19;;10627:68:32;6249:400:40;10627:68:32;-1:-1:-1;;;;;10713:21:32;;10705:68;;;;-1:-1:-1;;;10705:68:32;;6856:2:40;10705:68:32;;;6838:21:40;6895:2;6875:18;;;6868:30;6934:34;6914:18;;;6907:62;-1:-1:-1;;;6985:18:40;;;6978:32;7027:19;;10705:68:32;6654:398:40;10705:68:32;-1:-1:-1;;;;;10784:18:32;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1442:25:40;;;10835:32:32;;1415:18:40;10835:32:32;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:32;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:32;;7259:2:40;11404:68:32;;;7241:21:40;7298:2;7278:18;;;7271:30;7337:31;7317:18;;;7310:59;7386:18;;11404:68:32;7057:353:40;11404:68:32;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;7473:818::-;-1:-1:-1;;;;;7599:18:32;;7591:68;;;;-1:-1:-1;;;7591:68:32;;7617:2:40;7591:68:32;;;7599:21:40;7656:2;7636:18;;;7629:30;7695:34;7675:18;;;7668:62;-1:-1:-1;;;7746:18:40;;;7739:35;7791:19;;7591:68:32;7415:401:40;7591:68:32;-1:-1:-1;;;;;7677:16:32;;7669:64;;;;-1:-1:-1;;;7669:64:32;;8023:2:40;7669:64:32;;;8005:21:40;8062:2;8042:18;;;8035:30;8101:34;8081:18;;;8074:62;-1:-1:-1;;;8152:18:40;;;8145:33;8195:19;;7669:64:32;7821:399:40;7669:64:32;-1:-1:-1;;;;;7815:15:32;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:32;;8427:2:40;7840:72:32;;;8409:21:40;8466:2;8446:18;;;8439:30;8505:34;8485:18;;;8478:62;-1:-1:-1;;;8556:18:40;;;8549:36;8602:19;;7840:72:32;8225:402:40;7840:72:32;-1:-1:-1;;;;;7946:15:32;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1442:25:40;;;8161:13:32;;8210:26;;1415:18:40;8210:26:32;;;;;;;8247:37;12180:121;1133:1625:2;1357:14;1374:6;:13;;;1357:30;;1398:31;;;;;;;;;;;;;;-1:-1:-1;;;1398:31:2;;;:11;:31::i;:::-;1439;;;;;;;;;;;;;;-1:-1:-1;;;1439:31:2;;;1463:6;1439:11;:31::i;:::-;1480:38;;;;;;;;;;;;;;-1:-1:-1;;;1480:38:2;;;1511:5;1480:11;:38::i;:::-;1528:36;;;;;;;;;;;;;;-1:-1:-1;;;1528:36:2;;;1551:6;:12;;;1528:11;:36::i;:::-;1574:42;;;;;;;;;;;;;;-1:-1:-1;;;1574:42:2;;;1600:6;:15;;;1574:11;:42::i;:::-;1626:45;;;;;;;;;;;;;;-1:-1:-1;;;1626:45:2;;;1665:4;1626:11;:45::i;:::-;1681:36;;;;;;;;;;;;;;-1:-1:-1;;;1681:36:2;;;1704:6;:12;;;1681:11;:36::i;:::-;1727:43;;;;;;;;;;;;;;-1:-1:-1;;;1727:43:2;;;1759:10;1727:11;:43::i;:::-;1780:34;1797:6;:16;;;1780;:34::i;:::-;1824:29;;;;;;;;;;;;;;-1:-1:-1;;;1824:29:2;;;:11;:29::i;:::-;1863:82;;;;;;;;;;;-1:-1:-1;;;1863:82:2;;;;1899:45;;-1:-1:-1;;;1899:45:2;;1915:10;1899:45;;;8844:34:40;-1:-1:-1;;;;;1935:7:2;8914:15:40;;8894:18;;;8887:43;1863:82:2;;;1899:15;;;;;;8779:18:40;;1899:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1863:11;:82::i;:::-;1955:64;;;;;;;;;;;-1:-1:-1;;;1955:64:2;;;;1991:27;;-1:-1:-1;;;1991:27:2;;2007:10;1991:27;;;5462:51:40;1955:64:2;;;-1:-1:-1;;;;;1991:15:2;;;;;5435:18:40;;1991:27:2;5316:203:40;1955:64:2;2029:83;;;;;;;;;;;-1:-1:-1;;;2029:83:2;;;;2080:12;;2064:47;;-1:-1:-1;;;2064:47:2;;-1:-1:-1;;;;;8862:15:40;;;2064:47:2;;;8844:34:40;2102:7:2;8914:15:40;;8894:18;;;8887:43;2029:83:2;;2064:15;;;;;8779:18:40;;2064:47:2;8632:304:40;2029:83:2;2122:65;;;;;;;;;;;-1:-1:-1;;;2122:65:2;;;;2173:12;;2157:29;;-1:-1:-1;;;2157:29:2;;-1:-1:-1;;;;;5480:32:40;;;2157:29:2;;;5462:51:40;2122:65:2;;2157:15;;;;;5435:18:40;;2157:29:2;5316:203:40;2122:65:2;2197:31;;;;;;;;;;;;;;-1:-1:-1;;;2197:31:2;;;:11;:31::i;:::-;2239:7;-1:-1:-1;;;;;2239:26:2;;2279:267;;;;;;;;2336:115;;;;;;;;2391:5;-1:-1:-1;;;;;2336:115:2;;;;;2426:6;2336:115;;;2279:267;;;;2476:6;:12;;;2279:267;;;;2516:6;:15;;;2279:267;;;2560:125;;;;;;;;2624:4;-1:-1:-1;;;;;2560:125:2;;;;;2664:6;2560:125;;;2699:10;2723:6;:16;;;2239:510;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:1411;1133:1625;;:::o;5630:121:26:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:26;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:26;-1:-1:-1;;;5701:42:26;;;5685:15;:59::i;:::-;5630:121;:::o;6548:139::-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:26;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:26;-1:-1:-1;;;6628:51:26;;;6612:15;:68::i;:::-;6548:139;;:::o;6994:145::-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:26;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:26;-1:-1:-1;;;7077:54:26;;;7061:15;:71::i;1283:124::-;1342:58;1396:2;1358:41;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1358:41:26;;;;;;;;;;;;;;-1:-1:-1;;;;;1358:41:26;-1:-1:-1;;;1358:41:26;;;181:376;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;14:423:40:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:40:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:40;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:40:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2000:127::-;2061:10;2056:3;2052:20;2049:1;2042:31;2092:4;2089:1;2082:15;2116:4;2113:1;2106:15;2132:253;2204:2;2198:9;2246:4;2234:17;;2281:18;2266:34;;2302:22;;;2263:62;2260:88;;;2328:18;;:::i;:::-;2364:2;2357:22;2132:253;:::o;2390:275::-;2461:2;2455:9;2526:2;2507:13;;-1:-1:-1;;2503:27:40;2491:40;;2561:18;2546:34;;2582:22;;;2543:62;2540:88;;;2608:18;;:::i;:::-;2644:2;2637:22;2390:275;;-1:-1:-1;2390:275:40:o;2670:1273::-;2757:6;2788:2;2831;2819:9;2810:7;2806:23;2802:32;2799:52;;;2847:1;2844;2837:12;2799:52;2887:9;2874:23;2916:18;2957:2;2949:6;2946:14;2943:34;;;2973:1;2970;2963:12;2943:34;2996:22;;;;3052:4;3034:16;;;3030:27;3027:47;;;3070:1;3067;3060:12;3027:47;3096:22;;:::i;:::-;3141;3160:2;3141:22;:::i;:::-;3134:5;3127:37;3217:2;3213;3209:11;3196:25;3191:2;3184:5;3180:14;3173:49;3275:2;3271;3267:11;3254:25;3249:2;3242:5;3238:14;3231:49;3333:2;3329;3325:11;3312:25;3307:2;3300:5;3296:14;3289:49;3384:3;3380:2;3376:12;3363:26;3414:2;3404:8;3401:16;3398:36;;;3430:1;3427;3420:12;3398:36;3461:8;3457:2;3453:17;3443:27;;;3508:7;3501:4;3497:2;3493:13;3489:27;3479:55;;3530:1;3527;3520:12;3479:55;3566:2;3553:16;3588:2;3584;3581:10;3578:36;;;3594:18;;:::i;:::-;3636:53;3679:2;3660:13;;-1:-1:-1;;3656:27:40;3652:36;;3636:53;:::i;:::-;3623:66;;3712:2;3705:5;3698:17;3752:7;3747:2;3742;3738;3734:11;3730:20;3727:33;3724:53;;;3773:1;3770;3763:12;3724:53;3828:2;3823;3819;3815:11;3810:2;3803:5;3799:14;3786:45;3872:1;3851:14;;;3847:23;;;3840:34;;;;3901:3;3890:15;;3883:30;-1:-1:-1;3894:5:40;2670:1273;-1:-1:-1;;;2670:1273:40:o;3948:186::-;4007:6;4060:2;4048:9;4039:7;4035:23;4031:32;4028:52;;;4076:1;4073;4066:12;4028:52;4099:29;4118:9;4099:29;:::i;4139:260::-;4207:6;4215;4268:2;4256:9;4247:7;4243:23;4239:32;4236:52;;;4284:1;4281;4274:12;4236:52;4307:29;4326:9;4307:29;:::i;:::-;4297:39;;4355:38;4389:2;4378:9;4374:18;4355:38;:::i;:::-;4345:48;;4139:260;;;;;:::o;4404:380::-;4483:1;4479:12;;;;4526;;;4547:61;;4601:4;4593:6;4589:17;4579:27;;4547:61;4654:2;4646:6;4643:14;4623:18;4620:38;4617:161;;4700:10;4695:3;4691:20;4688:1;4681:31;4735:4;4732:1;4725:15;4763:4;4760:1;4753:15;4617:161;;4404:380;;;:::o;4789:127::-;4850:10;4845:3;4841:20;4838:1;4831:31;4881:4;4878:1;4871:15;4905:4;4902:1;4895:15;4921:168;4994:9;;;5025;;5042:15;;;5036:22;;5022:37;5012:71;;5063:18;;:::i;5094:217::-;5134:1;5160;5150:132;;5204:10;5199:3;5195:20;5192:1;5185:31;5239:4;5236:1;5229:15;5267:4;5264:1;5257:15;5150:132;-1:-1:-1;5296:9:40;;5094:217::o;5524:184::-;5594:6;5647:2;5635:9;5626:7;5622:23;5618:32;5615:52;;;5663:1;5660;5653:12;5615:52;-1:-1:-1;5686:16:40;;5524:184;-1:-1:-1;5524:184:40:o;5713:125::-;5778:9;;;5799:10;;;5796:36;;;5812:18;;:::i;8941:966::-;9291:4;9320:3;9348:6;9342:13;9391:1;9387;9382:3;9378:11;9374:19;9435:2;9430;9424:9;9420:18;9409:9;9402:37;9491:4;9487:2;9483:13;9477:20;9470:4;9459:9;9455:20;9448:50;9554:4;9546:6;9542:17;9536:24;9529:4;9518:9;9514:20;9507:54;9617:4;9609:6;9605:17;9599:24;9592:4;9581:9;9577:20;9570:54;9680:2;9671:6;9665:13;9661:22;9655:3;9644:9;9640:19;9633:51;9739:4;9731:6;9727:17;9721:24;9715:3;9704:9;9700:19;9693:53;9795:2;9787:6;9783:15;9777:3;9766:9;9762:19;9755:44;;;9836:2;9830:3;9819:9;9815:19;9808:31;9856:45;9897:2;9886:9;9882:18;9874:6;9856:45;:::i;:::-;9848:53;8941:966;-1:-1:-1;;;;;;;8941:966:40:o;9912:291::-;10089:2;10078:9;10071:21;10052:4;10109:45;10150:2;10139:9;10135:18;10127:6;10109:45;:::i;:::-;10101:53;;10190:6;10185:2;10174:9;10170:18;10163:34;9912:291;;;;;:::o;10208:317::-;10385:2;10374:9;10367:21;10348:4;10405:45;10446:2;10435:9;10431:18;10423:6;10405:45;:::i;:::-;10397:53;;10515:1;10511;10506:3;10502:11;10498:19;10490:6;10486:32;10481:2;10470:9;10466:18;10459:60;10208:317;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "144": [
        {
          "start": 2638,
          "length": 32
        },
        {
          "start": 2928,
          "length": 32
        },
        {
          "start": 3130,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getPrice()": "98d5fdca",
    "increaseAllowance(address,uint256)": "39509351",
    "issue((address,uint256,uint256,uint256,bytes))": "31e8cb04",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Cant_be_zero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyerBalance\",\"type\":\"uint256\"}],\"name\":\"Not_enough_funds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IPermit2.Permit2Buy\",\"name\":\"buyOp_\",\"type\":\"tuple\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/EnergyETHFacet.sol\":\"EnergyETHFacet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"contracts/facets/EnergyETHFacet.sol\":{\"keccak256\":\"0x995f9031804e0157ff0b590a2c25809b77d0b66ddec32c3dba993269022c418f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://71f42b8acea1bdf8081fa070166edd9275bb4dae67d69221b5950f5b9faaf025\",\"dweb:/ipfs/Qmd4jWRfN8Q7Hz7Nf4oFLWG7HpS6GNYxPocpCiTFyRsxgj\"]},\"interfaces/IPermit2.sol\":{\"keccak256\":\"0xb3b517a6be1cb7e890e83ddc2d5e4a5ec41c1ef377c28e546e4b956cd6f57857\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://210f7ff2ccd1c7174f4852a81548945cd5625c9c69e21c4ab65a23ce389ea157\",\"dweb:/ipfs/Qmc6rRPsUUwMrXF3uNwAaBmhewEHnfwzxty9uMB25hzy5R\"]},\"interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x5e03ef1db4bfbf6a79809f8f6f61d70f330579286a66f53c603ccee2833e6152\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://508e9a49a24be742788019749254845840e7909a542fb5694038e32cd54b786c\",\"dweb:/ipfs/QmUk8sUZeSvGFghU6UxK7592GaoP6siCLXtNqkAMYhirRd\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Cant_be_zero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "buyerBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Not_enough_funds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPermit2.Permit2Buy",
              "name": "buyOp_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "issue"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/facets/EnergyETHFacet.sol": "EnergyETHFacet"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/facets/EnergyETHFacet.sol": {
        "keccak256": "0x995f9031804e0157ff0b590a2c25809b77d0b66ddec32c3dba993269022c418f",
        "urls": [
          "bzz-raw://71f42b8acea1bdf8081fa070166edd9275bb4dae67d69221b5950f5b9faaf025",
          "dweb:/ipfs/Qmd4jWRfN8Q7Hz7Nf4oFLWG7HpS6GNYxPocpCiTFyRsxgj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/IPermit2.sol": {
        "keccak256": "0xb3b517a6be1cb7e890e83ddc2d5e4a5ec41c1ef377c28e546e4b956cd6f57857",
        "urls": [
          "bzz-raw://210f7ff2ccd1c7174f4852a81548945cd5625c9c69e21c4ab65a23ce389ea157",
          "dweb:/ipfs/Qmc6rRPsUUwMrXF3uNwAaBmhewEHnfwzxty9uMB25hzy5R"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/ozIDiamond.sol": {
        "keccak256": "0x5e03ef1db4bfbf6a79809f8f6f61d70f330579286a66f53c603ccee2833e6152",
        "urls": [
          "bzz-raw://508e9a49a24be742788019749254845840e7909a542fb5694038e32cd54b786c",
          "dweb:/ipfs/QmUk8sUZeSvGFghU6UxK7592GaoP6siCLXtNqkAMYhirRd"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/facets/EnergyETHFacet.sol",
    "id": 406,
    "exportedSymbols": {
      "Address": [
        32174
      ],
      "Cant_approve": [
        117
      ],
      "Cant_be_zero": [
        109
      ],
      "Cant_transfer": [
        121
      ],
      "Context": [
        32196
      ],
      "ERC20": [
        31741
      ],
      "EnergyETHFacet": [
        405
      ],
      "IERC20": [
        31819
      ],
      "IERC20Metadata": [
        31844
      ],
      "IPermit2": [
        1216
      ],
      "ISwapRouter": [
        32310
      ],
      "IUniswapV3SwapCallback": [
        32210
      ],
      "Not_enough_funds": [
        113
      ],
      "console": [
        21492
      ],
      "ozIDiamond": [
        1390
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:4104:2",
    "nodes": [
      {
        "id": 100,
        "nodeType": "PragmaDirective",
        "src": "45:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 101,
        "nodeType": "ImportDirective",
        "src": "71:68:2",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 406,
        "sourceUnit": 32311,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 102,
        "nodeType": "ImportDirective",
        "src": "140:56:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 406,
        "sourceUnit": 31820,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 103,
        "nodeType": "ImportDirective",
        "src": "197:55:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 406,
        "sourceUnit": 31742,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 104,
        "nodeType": "ImportDirective",
        "src": "253:51:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 406,
        "sourceUnit": 32175,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 105,
        "nodeType": "ImportDirective",
        "src": "305:41:2",
        "nodes": [],
        "absolutePath": "interfaces/ozIDiamond.sol",
        "file": "../../interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 406,
        "sourceUnit": 1391,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 106,
        "nodeType": "ImportDirective",
        "src": "347:39:2",
        "nodes": [],
        "absolutePath": "interfaces/IPermit2.sol",
        "file": "../../interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 406,
        "sourceUnit": 1217,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 107,
        "nodeType": "ImportDirective",
        "src": "420:31:2",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 406,
        "sourceUnit": 21493,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 109,
        "nodeType": "ErrorDefinition",
        "src": "487:21:2",
        "nodes": [],
        "errorSelector": "4bf29fe9",
        "name": "Cant_be_zero",
        "nameLocation": "493:12:2",
        "parameters": {
          "id": 108,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "505:2:2"
        }
      },
      {
        "id": 113,
        "nodeType": "ErrorDefinition",
        "src": "509:45:2",
        "nodes": [],
        "errorSelector": "7b9b24ba",
        "name": "Not_enough_funds",
        "nameLocation": "515:16:2",
        "parameters": {
          "id": 112,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 111,
              "mutability": "mutable",
              "name": "buyerBalance",
              "nameLocation": "540:12:2",
              "nodeType": "VariableDeclaration",
              "scope": 113,
              "src": "532:20:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 110,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "532:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "531:22:2"
        }
      },
      {
        "id": 117,
        "nodeType": "ErrorDefinition",
        "src": "555:35:2",
        "nodes": [],
        "errorSelector": "1c806982",
        "name": "Cant_approve",
        "nameLocation": "561:12:2",
        "parameters": {
          "id": 116,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 115,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "582:6:2",
              "nodeType": "VariableDeclaration",
              "scope": 117,
              "src": "574:14:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 114,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "574:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "573:16:2"
        }
      },
      {
        "id": 121,
        "nodeType": "ErrorDefinition",
        "src": "591:36:2",
        "nodes": [],
        "errorSelector": "22cc7a08",
        "name": "Cant_transfer",
        "nameLocation": "597:13:2",
        "parameters": {
          "id": 120,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 119,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "619:6:2",
              "nodeType": "VariableDeclaration",
              "scope": 121,
              "src": "611:14:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 118,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "611:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "610:16:2"
        }
      },
      {
        "id": 405,
        "nodeType": "ContractDefinition",
        "src": "630:3517:2",
        "nodes": [
          {
            "id": 129,
            "nodeType": "VariableDeclaration",
            "src": "670:64:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "677:4:2",
            "scope": 405,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$31819",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 125,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 124,
                "name": "IERC20",
                "nameLocations": [
                  "670:6:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31819,
                "src": "670:6:2"
              },
              "referencedDeclaration": 31819,
              "src": "670:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$31819",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846463937304136314130346231634131343833344134336635644534353333654244444235434338",
                  "id": 127,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "691:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 126,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31819,
                "src": "684:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$31819_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 128,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "684:50:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$31819",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 132,
            "nodeType": "VariableDeclaration",
            "src": "740:71:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "wethAdrr",
            "nameLocation": "758:8:2",
            "scope": 405,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 130,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "740:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838326146343934343744386130376533626439354244306435366633353234313532336642616231",
              "id": 131,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "769:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
            },
            "visibility": "internal"
          },
          {
            "id": 138,
            "nodeType": "VariableDeclaration",
            "src": "817:71:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OZL",
            "nameLocation": "828:3:2",
            "scope": 405,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ozIDiamond_$1390",
              "typeString": "contract ozIDiamond"
            },
            "typeName": {
              "id": 134,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 133,
                "name": "ozIDiamond",
                "nameLocations": [
                  "817:10:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1390,
                "src": "817:10:2"
              },
              "referencedDeclaration": 1390,
              "src": "817:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$1390",
                "typeString": "contract ozIDiamond"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837443166313344643035453662303637334443334430424661313464343041373443666133454632",
                  "id": 136,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "845:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7D1f13Dd05E6b0673DC3D0BFa14d40A74Cfa3EF2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 135,
                "name": "ozIDiamond",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1390,
                "src": "834:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$1390_$",
                  "typeString": "type(contract ozIDiamond)"
                }
              },
              "id": 137,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "834:54:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$1390",
                "typeString": "contract ozIDiamond"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 144,
            "nodeType": "VariableDeclaration",
            "src": "894:81:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "PERMIT2",
            "nameLocation": "913:7:2",
            "scope": 405,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$1216",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 140,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 139,
                "name": "IPermit2",
                "nameLocations": [
                  "894:8:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1216,
                "src": "894:8:2"
              },
              "referencedDeclaration": 1216,
              "src": "894:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$1216",
                "typeString": "contract IPermit2"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
                  "id": 142,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "932:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 141,
                "name": "IPermit2",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1216,
                "src": "923:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IPermit2_$1216_$",
                  "typeString": "type(contract IPermit2)"
                }
              },
              "id": 143,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "923:52:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$1216",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 152,
            "nodeType": "FunctionDefinition",
            "src": "982:44:2",
            "nodes": [],
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1024:2:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456e6572677920455448",
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1002:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4bd924deff42c91521bdefb2ca9a2dce3b459602ead3da951ea02073f4b45534",
                      "typeString": "literal_string \"Energy ETH\""
                    },
                    "value": "Energy ETH"
                  },
                  {
                    "hexValue": "65455448",
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1016:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d6c14ce243ce7d5c149bd600a04038f4aa1a3243dd4808b0e0441d8ec7b87788",
                      "typeString": "literal_string \"eETH\""
                    },
                    "value": "eETH"
                  }
                ],
                "id": 149,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 146,
                  "name": "ERC20",
                  "nameLocations": [
                    "996:5:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31741,
                  "src": "996:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "996:27:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:2:2"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1024:0:2"
            },
            "scope": 405,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 162,
            "nodeType": "FunctionDefinition",
            "src": "1033:93:2",
            "nodes": [],
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "1082:44:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 157,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "1099:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$1390",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1103:14:2",
                      "memberName": "getEnergyPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1384,
                      "src": "1099:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "1092:27:2"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "1042:8:2",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:2"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "1073:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:9:2"
            },
            "scope": 405,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 342,
            "nodeType": "FunctionDefinition",
            "src": "1133:1625:2",
            "nodes": [],
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "1347:1411:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1365:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 341,
                      "src": "1357:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1357:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 175,
                  "initialValue": {
                    "expression": {
                      "id": 173,
                      "name": "buyOp_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "1374:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                        "typeString": "struct IPermit2.Permit2Buy memory"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1381:6:2",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1190,
                    "src": "1374:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1357:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "2d2d2d2d2d206661636574202d2d2d2d",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1410:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_807a4c630b0c2ab4b9eced70cf6de45bfcaf1276560110563f34ff1165c4e8af",
                          "typeString": "literal_string \"----- facet ----\""
                        },
                        "value": "----- facet ----"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_807a4c630b0c2ab4b9eced70cf6de45bfcaf1276560110563f34ff1165c4e8af",
                          "typeString": "literal_string \"----- facet ----\""
                        }
                      ],
                      "expression": {
                        "id": 176,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1398:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1406:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14023,
                      "src": "1398:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616d6f756e743a20",
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1451:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b90c700d23afe04c7d96df315169d7dd9115d63af99e32370b79d6382c967eb",
                          "typeString": "literal_string \"amount: \""
                        },
                        "value": "amount: "
                      },
                      {
                        "id": 186,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "1463:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9b90c700d23afe04c7d96df315169d7dd9115d63af99e32370b79d6382c967eb",
                          "typeString": "literal_string \"amount: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 182,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1439:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1447:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14136,
                      "src": "1439:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f6b656e3a20",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1492:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f4f979af2fe1e484269b60ce35fe0c4d6697001d712f9e7eb5a0f5b6052071f",
                          "typeString": "literal_string \"token: \""
                        },
                        "value": "token: "
                      },
                      {
                        "arguments": [
                          {
                            "id": 195,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "1511:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$31819",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$31819",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1503:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 193,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1503:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1503:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2f4f979af2fe1e484269b60ce35fe0c4d6697001d712f9e7eb5a0f5b6052071f",
                          "typeString": "literal_string \"token: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 189,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1480:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1488:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14187,
                      "src": "1480:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f6e63653a20",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92851b08efce32de26dc114b3b5f903cde5fcadc2b38229ecb178c18890413f5",
                          "typeString": "literal_string \"nonce: \""
                        },
                        "value": "nonce: "
                      },
                      {
                        "expression": {
                          "id": 203,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "1551:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1558:5:2",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1192,
                        "src": "1551:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_92851b08efce32de26dc114b3b5f903cde5fcadc2b38229ecb178c18890413f5",
                          "typeString": "literal_string \"nonce: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 199,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1528:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1536:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14136,
                      "src": "1528:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:36:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "646561646c696e653a20",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1586:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f6de849baeb0154a3a42954eb3dc31d94711a341a3e958b97a32d89eb39b443",
                          "typeString": "literal_string \"deadline: \""
                        },
                        "value": "deadline: "
                      },
                      {
                        "expression": {
                          "id": 211,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "1600:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1607:8:2",
                        "memberName": "deadline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1194,
                        "src": "1600:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f6de849baeb0154a3a42954eb3dc31d94711a341a3e958b97a32d89eb39b443",
                          "typeString": "literal_string \"deadline: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 207,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1574:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1582:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14136,
                      "src": "1574:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616464726573732874686973293a20",
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1638:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_396bef04aae91249a3dd13a9913d678813c2f3033c945455930d08a976cf89bb",
                          "typeString": "literal_string \"address(this): \""
                        },
                        "value": "address(this): "
                      },
                      {
                        "arguments": [
                          {
                            "id": 221,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1665:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EnergyETHFacet_$405",
                              "typeString": "contract EnergyETHFacet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EnergyETHFacet_$405",
                              "typeString": "contract EnergyETHFacet"
                            }
                          ],
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1657:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1657:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1657:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_396bef04aae91249a3dd13a9913d678813c2f3033c945455930d08a976cf89bb",
                          "typeString": "literal_string \"address(this): \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 215,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1626:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1634:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14187,
                      "src": "1626:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "62757965723a20",
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1693:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6e60cc7e55306a60cf9c6bc634cd50e32ac6f7218050b267e0e5e5deffbcaf7",
                          "typeString": "literal_string \"buyer: \""
                        },
                        "value": "buyer: "
                      },
                      {
                        "expression": {
                          "id": 229,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "1704:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1711:5:2",
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1188,
                        "src": "1704:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6e60cc7e55306a60cf9c6bc634cd50e32ac6f7218050b267e0e5e5deffbcaf7",
                          "typeString": "literal_string \"buyer: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 225,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1681:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1689:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14187,
                      "src": "1681:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1681:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:36:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73656e646572203d2062757965723a20",
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1739:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7502ce5f56d6e6df27b2b818e8f22d61b03793683f2c75f5c0afce185989936c",
                          "typeString": "literal_string \"sender = buyer: \""
                        },
                        "value": "sender = buyer: "
                      },
                      {
                        "expression": {
                          "id": 237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1759:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1763:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1759:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7502ce5f56d6e6df27b2b818e8f22d61b03793683f2c75f5c0afce185989936c",
                          "typeString": "literal_string \"sender = buyer: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 233,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1727:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1735:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14187,
                      "src": "1727:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 244,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "1797:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1804:9:2",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1196,
                        "src": "1797:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 241,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1780:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1788:8:2",
                      "memberName": "logBytes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13547,
                      "src": "1780:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) view"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:34:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7369676e6174757265205e5e5e5e",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1836:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dccde2b2993882a7ae3630b5fd0b208de75f6d3f0982262e3fa5de1c41998a01",
                          "typeString": "literal_string \"signature ^^^^\""
                        },
                        "value": "signature ^^^^"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dccde2b2993882a7ae3630b5fd0b208de75f6d3f0982262e3fa5de1c41998a01",
                          "typeString": "literal_string \"signature ^^^^\""
                        }
                      ],
                      "expression": {
                        "id": 248,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1824:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1832:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14023,
                      "src": "1824:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:29:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616c6c6f77616e6365202d2073656e6465723a20",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1875:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_776c5564111b2820c01ae1bf0125d47ef7f3b861d5c41d2eedde54959b4dda4c",
                          "typeString": "literal_string \"allowance - sender: \""
                        },
                        "value": "allowance - sender: "
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 260,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1915:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1919:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1915:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 264,
                                "name": "PERMIT2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 144,
                                "src": "1935:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPermit2_$1216",
                                  "typeString": "contract IPermit2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IPermit2_$1216",
                                  "typeString": "contract IPermit2"
                                }
                              ],
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1927:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 262,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1927:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1927:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 258,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "1899:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$31819",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1905:9:2",
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31796,
                          "src": "1899:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1899:45:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_776c5564111b2820c01ae1bf0125d47ef7f3b861d5c41d2eedde54959b4dda4c",
                          "typeString": "literal_string \"allowance - sender: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 254,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1863:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1871:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14136,
                      "src": "1863:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:82:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f6b656e2062616c202d2073656e6465723a20",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1967:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_281be7ba081ab2c2432708049ed8cd391ec036da3bb7f530d2e2e483f2998e83",
                          "typeString": "literal_string \"token bal - sender: \""
                        },
                        "value": "token bal - sender: "
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 275,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2007:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2011:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2007:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 273,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "1991:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$31819",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1997:9:2",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31776,
                          "src": "1991:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1991:27:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_281be7ba081ab2c2432708049ed8cd391ec036da3bb7f530d2e2e483f2998e83",
                          "typeString": "literal_string \"token bal - sender: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 269,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "1955:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1963:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14136,
                      "src": "1955:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:64:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616c6c6f77616e6365202d2062757965723a20",
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2041:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d32b584d69ba187bb83894e36d759f412c752b750e6d337021de59ab9c2dc71f",
                          "typeString": "literal_string \"allowance - buyer: \""
                        },
                        "value": "allowance - buyer: "
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 286,
                              "name": "buyOp_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2080:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                                "typeString": "struct IPermit2.Permit2Buy memory"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2087:5:2",
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1188,
                            "src": "2080:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 290,
                                "name": "PERMIT2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 144,
                                "src": "2102:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPermit2_$1216",
                                  "typeString": "contract IPermit2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IPermit2_$1216",
                                  "typeString": "contract IPermit2"
                                }
                              ],
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2094:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 288,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2094:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2094:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 284,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "2064:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$31819",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2070:9:2",
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31796,
                          "src": "2064:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2064:47:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d32b584d69ba187bb83894e36d759f412c752b750e6d337021de59ab9c2dc71f",
                          "typeString": "literal_string \"allowance - buyer: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 280,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "2029:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2037:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14136,
                      "src": "2029:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2029:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:83:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f6b656e2062616c202d2062757965723a20",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2134:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e591796fea3a87039d1e268f4a4aa3e20257646f8fdf8d593b22692e99a7c6f4",
                          "typeString": "literal_string \"token bal - buyer: \""
                        },
                        "value": "token bal - buyer: "
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 301,
                              "name": "buyOp_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2173:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                                "typeString": "struct IPermit2.Permit2Buy memory"
                              }
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2180:5:2",
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1188,
                            "src": "2173:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 299,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "2157:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$31819",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2163:9:2",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31776,
                          "src": "2157:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2157:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e591796fea3a87039d1e268f4a4aa3e20257646f8fdf8d593b22692e99a7c6f4",
                          "typeString": "literal_string \"token bal - buyer: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 295,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "2122:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2130:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14136,
                      "src": "2122:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "2d2d2d2d2d206661636574202d2d2d2d",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2209:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_807a4c630b0c2ab4b9eced70cf6de45bfcaf1276560110563f34ff1165c4e8af",
                          "typeString": "literal_string \"----- facet ----\""
                        },
                        "value": "----- facet ----"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_807a4c630b0c2ab4b9eced70cf6de45bfcaf1276560110563f34ff1165c4e8af",
                          "typeString": "literal_string \"----- facet ----\""
                        }
                      ],
                      "expression": {
                        "id": 306,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21492,
                        "src": "2197:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21492_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2205:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14023,
                      "src": "2197:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 319,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "2391:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$31819",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 320,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "2426:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$31819",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 317,
                                "name": "IPermit2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1216,
                                "src": "2336:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPermit2_$1216_$",
                                  "typeString": "type(contract IPermit2)"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2345:16:2",
                              "memberName": "TokenPermissions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1173,
                              "src": "2336:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenPermissions_$1173_storage_ptr_$",
                                "typeString": "type(struct IPermit2.TokenPermissions storage pointer)"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "2384:5:2",
                              "2418:6:2"
                            ],
                            "names": [
                              "token",
                              "amount"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2336:115:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenPermissions_$1173_memory_ptr",
                              "typeString": "struct IPermit2.TokenPermissions memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 322,
                              "name": "buyOp_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2476:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                                "typeString": "struct IPermit2.Permit2Buy memory"
                              }
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2483:5:2",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1192,
                            "src": "2476:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 324,
                              "name": "buyOp_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2516:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                                "typeString": "struct IPermit2.Permit2Buy memory"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2523:8:2",
                            "memberName": "deadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1194,
                            "src": "2516:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_TokenPermissions_$1173_memory_ptr",
                              "typeString": "struct IPermit2.TokenPermissions memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 315,
                            "name": "IPermit2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "2279:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPermit2_$1216_$",
                              "typeString": "type(contract IPermit2)"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2288:18:2",
                          "memberName": "PermitTransferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1181,
                          "src": "2279:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PermitTransferFrom_$1181_storage_ptr_$",
                            "typeString": "type(struct IPermit2.PermitTransferFrom storage pointer)"
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2325:9:2",
                          "2469:5:2",
                          "2506:8:2"
                        ],
                        "names": [
                          "permitted",
                          "nonce",
                          "deadline"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2279:267:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$1181_memory_ptr",
                          "typeString": "struct IPermit2.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 331,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2624:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_EnergyETHFacet_$405",
                                  "typeString": "contract EnergyETHFacet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_EnergyETHFacet_$405",
                                  "typeString": "contract EnergyETHFacet"
                                }
                              ],
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2616:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 329,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2616:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2616:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 333,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "2664:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 327,
                            "name": "IPermit2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "2560:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPermit2_$1216_$",
                              "typeString": "type(contract IPermit2)"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2569:24:2",
                          "memberName": "SignatureTransferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1186,
                          "src": "2560:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SignatureTransferDetails_$1186_storage_ptr_$",
                            "typeString": "type(struct IPermit2.SignatureTransferDetails storage pointer)"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2612:2:2",
                          "2647:15:2"
                        ],
                        "names": [
                          "to",
                          "requestedAmount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2560:125:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$1186_memory_ptr",
                          "typeString": "struct IPermit2.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 335,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2699:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2703:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2699:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 337,
                          "name": "buyOp_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "2723:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                            "typeString": "struct IPermit2.Permit2Buy memory"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2730:9:2",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1196,
                        "src": "2723:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$1181_memory_ptr",
                          "typeString": "struct IPermit2.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$1186_memory_ptr",
                          "typeString": "struct IPermit2.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 312,
                        "name": "PERMIT2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2239:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$1216",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2247:18:2",
                      "memberName": "permitTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1210,
                      "src": "2239:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$1181_memory_ptr_$_t_struct$_SignatureTransferDetails_$1186_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IPermit2.PermitTransferFrom memory,struct IPermit2.SignatureTransferDetails memory,address,bytes memory) external"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2239:510:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:510:2"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_issue",
            "nameLocation": "1142:6:2",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1165:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "1158:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31819",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 164,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 163,
                      "name": "IERC20",
                      "nameLocations": [
                        "1158:6:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31819,
                      "src": "1158:6:2"
                    },
                    "referencedDeclaration": 31819,
                    "src": "1158:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31819",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "buyOp_",
                  "nameLocation": "1326:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "1299:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                    "typeString": "struct IPermit2.Permit2Buy"
                  },
                  "typeName": {
                    "id": 167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 166,
                      "name": "IPermit2.Permit2Buy",
                      "nameLocations": [
                        "1299:8:2",
                        "1308:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1197,
                      "src": "1299:19:2"
                    },
                    "referencedDeclaration": 1197,
                    "src": "1299:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit2Buy_$1197_storage_ptr",
                      "typeString": "struct IPermit2.Permit2Buy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:190:2"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1347:0:2"
            },
            "scope": 405,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 400,
            "nodeType": "FunctionDefinition",
            "src": "2965:1127:2",
            "nodes": [],
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "3024:1068:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "toBuy",
                      "nameLocation": "3042:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "3034:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3034:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "initialValue": {
                    "expression": {
                      "id": 350,
                      "name": "buyOp_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "3050:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                        "typeString": "struct IPermit2.Permit2Buy memory"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3057:6:2",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1190,
                    "src": "3050:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3034:29:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 353,
                      "name": "toBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "3078:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3087:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3078:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 359,
                  "nodeType": "IfStatement",
                  "src": "3074:37:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 356,
                        "name": "Cant_be_zero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "3097:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3097:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 358,
                    "nodeType": "RevertStatement",
                    "src": "3090:21:2"
                  }
                },
                {
                  "assignments": [
                    361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 361,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "3130:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "3122:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3122:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 362,
                            "name": "toBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "3139:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 363,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "3147:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3147:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3139:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 366,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3138:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3161:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3132",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3167:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        "value": "12"
                      },
                      "src": "3161:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      }
                    },
                    "src": "3138:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3122:47:2"
                },
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "mutability": "mutable",
                      "name": "buyerBalance",
                      "nameLocation": "3187:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "3179:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 372,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3179:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 379,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3217:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3221:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3217:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 374,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "3202:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31819",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3207:9:2",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31776,
                      "src": "3202:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3202:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3179:49:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 380,
                      "name": "buyerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "3243:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 381,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "3258:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3243:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 387,
                  "nodeType": "IfStatement",
                  "src": "3239:63:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 384,
                          "name": "buyerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 373,
                          "src": "3289:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 383,
                        "name": "Not_enough_funds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "3272:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3272:30:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 386,
                    "nodeType": "RevertStatement",
                    "src": "3265:37:2"
                  }
                },
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 388,
                        "name": "buyOp_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3313:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3320:6:2",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1190,
                      "src": "3313:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 391,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "3329:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3313:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 395,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "3352:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31819",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 396,
                        "name": "buyOp_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "3358:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$31819",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                          "typeString": "struct IPermit2.Permit2Buy memory"
                        }
                      ],
                      "id": 394,
                      "name": "_issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "3345:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$31819_$_t_struct$_Permit2Buy_$1197_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,struct IPermit2.Permit2Buy memory)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3345:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "3345:20:2"
                }
              ]
            },
            "functionSelector": "31e8cb04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issue",
            "nameLocation": "2974:5:2",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "buyOp_",
                  "nameLocation": "3007:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "2980:33:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permit2Buy_$1197_memory_ptr",
                    "typeString": "struct IPermit2.Permit2Buy"
                  },
                  "typeName": {
                    "id": 344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 343,
                      "name": "IPermit2.Permit2Buy",
                      "nameLocations": [
                        "2980:8:2",
                        "2989:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1197,
                      "src": "2980:19:2"
                    },
                    "referencedDeclaration": 1197,
                    "src": "2980:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permit2Buy_$1197_storage_ptr",
                      "typeString": "struct IPermit2.Permit2Buy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2979:35:2"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3024:0:2"
            },
            "scope": 405,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 404,
            "nodeType": "FunctionDefinition",
            "src": "4099:44:2",
            "nodes": [],
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "4133:10:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositInDeFi",
            "nameLocation": "4108:14:2",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4122:2:2"
            },
            "returnParameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4133:0:2"
            },
            "scope": 405,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 122,
              "name": "ERC20",
              "nameLocations": [
                "657:5:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31741,
              "src": "657:5:2"
            },
            "id": 123,
            "nodeType": "InheritanceSpecifier",
            "src": "657:5:2"
          }
        ],
        "canonicalName": "EnergyETHFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          405,
          31741,
          31844,
          31819,
          32196
        ],
        "name": "EnergyETHFacet",
        "nameLocation": "639:14:2",
        "scope": 406,
        "usedErrors": [
          109,
          113
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 2
}