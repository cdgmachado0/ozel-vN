{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Cant_be_zero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Cant_transfer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyerBalance",
          "type": "uint256"
        }
      ],
      "name": "Not_enough_funds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052600580546001600160a01b031990811673ff970a61a04b1ca14834a43f5de4533ebddb5cc8179091557382af49447d8a07e3bd95bd0d56f35241523fbab160805260068054909116737d1f13dd05e6b0673dc3d0bfa14d40a74cfa3ef21790553480156200007157600080fd5b506040518060400160405280600a81526020016908adccae4cef2408aa8960b31b815250604051806040016040528060048152602001630ca8aa8960e31b8152508160039081620000c3919062000180565b506004620000d2828262000180565b5050506200024c565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010657607f821691505b6020821081036200012757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017b57600081815260208120601f850160051c81016020861015620001565750805b601f850160051c820191505b81811015620001775782815560010162000162565b5050505b505050565b81516001600160401b038111156200019c576200019c620000db565b620001b481620001ad8454620000f1565b846200012d565b602080601f831160018114620001ec5760008415620001d35750858301515b600019600386901b1c1916600185901b17855562000177565b600085815260208120601f198616915b828110156200021d57888601518255948401946001909101908401620001fc565b50858210156200023c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610f836200026560003960005050610f836000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806398d5fdca1161006657806398d5fdca146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b806370a082311461015c578063867904b41461018557806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc6101e3565b6040516100e99190610d1c565b60405180910390f35b610105610100366004610d52565b610275565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610d7c565b6102b7565b604051601281526020016100e9565b610105610157366004610d52565b6102db565b61011961016a366004610db8565b6001600160a01b031660009081526020819052604090205490565b610198610193366004610d52565b6102fd565b005b6100dc610657565b610119610666565b6101056101b8366004610d52565b6106d9565b6101056101cb366004610d52565b610754565b6101196101de366004610dd3565b610762565b6060600380546101f290610e06565b80601f016020809104026020016040519081016040528092919081815260200182805461021e90610e06565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b600061029f6040518060400160405280600781526020016668656c6c6f6f6f60c81b81525061078d565b336102ab8185856107d3565b60019150505b92915050565b6000336102c5858285610983565b6102d08585856109fd565b506001949350505050565b6000336102ab8185856102ee8383610762565b6102f89190610e56565b6107d3565b8060000361031e57604051634bf29fe960e01b815260040160405180910390fd5b61034e604051806040016040528060078152602001660383934b1b29d160cd1b815250610349610666565b610ba1565b600064e8d4a5100061035e610666565b6103689084610e69565b6103729190610e80565b905061037e6003610bea565b6005546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610ea2565b905061041860405180604001604052806009815260200168030b6b7bab73a2f9d160bd1b81525084610ba1565b6104486040518060400160405280600e81526020016d0313abcb2b92130b630b731b29d160951b81525082610ba1565b61047160405180604001604052806007815260200166038bab7ba329d160cd1b81525083610ba1565b6104b26040518060400160405280601e81526020017f627579657242616c616e6365203c2071756f7465202d2066616c73653a200000815250838310610c2f565b6104e960405180604001604052806015815260200174036b9b39739b2b73232b91034b71034b9b9bab29d1605d1b81525033610c74565b8181101561051257604051633dcd925d60e11b8152600481018290526024015b60405180910390fd5b600554604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610ea2565b90506105b060405180604001604052806007815260200166030b63637bb9d160cd1b81525082610ba1565b6005546040516323b872dd60e01b8152336004820152306024820152604481018590526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610ebb565b90508061064f576040516304598f4160e31b815260048101859052602401610509565b505050505050565b6060600480546101f290610e06565b6006546040805163cab0f33560e01b815290516000926001600160a01b03169163cab0f3359160048083019260209291908290030181865afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610ea2565b905090565b600033816106e78286610762565b9050838110156107475760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610509565b6102d082868684036107d3565b6000336102ab8185856109fd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107d0816040516024016107a19190610d1c565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610cb5565b50565b6001600160a01b0383166108355760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610509565b6001600160a01b0382166108965760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610509565b6108c66040518060400160405280600e81526020016d037bbb732b91034b71032b9319d160951b81525084610c74565b6108f86040518060400160405280601081526020016f039b832b73232b91034b71032b9319d160851b81525083610c74565b61092260405180604001604052806008815260200167030b6b7bab73a1d160c51b81525082610ba1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061098f8484610762565b905060001981146109f757818110156109ea5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610509565b6109f784848484036107d3565b50505050565b6001600160a01b038316610a615760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610509565b6001600160a01b038216610ac35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610509565b6001600160a01b03831660009081526020819052604090205481811015610b3b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610509565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36109f7565b610be68282604051602401610bb7929190610edd565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610cb5565b5050565b6107d081604051602401610c0091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052610cb5565b610be68282604051602401610c45929190610eff565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052610cb5565b610be68282604051602401610c8a929190610f23565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b81811015610cfc57602081850181015186830182015201610ce0565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d2f6020830184610cd6565b9392505050565b80356001600160a01b0381168114610d4d57600080fd5b919050565b60008060408385031215610d6557600080fd5b610d6e83610d36565b946020939093013593505050565b600080600060608486031215610d9157600080fd5b610d9a84610d36565b9250610da860208501610d36565b9150604084013590509250925092565b600060208284031215610dca57600080fd5b610d2f82610d36565b60008060408385031215610de657600080fd5b610def83610d36565b9150610dfd60208401610d36565b90509250929050565b600181811c90821680610e1a57607f821691505b602082108103610e3a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102b1576102b1610e40565b80820281158282048414176102b1576102b1610e40565b600082610e9d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610eb457600080fd5b5051919050565b600060208284031215610ecd57600080fd5b81518015158114610d2f57600080fd5b604081526000610ef06040830185610cd6565b90508260208301529392505050565b604081526000610f126040830185610cd6565b905082151560208301529392505050565b604081526000610f366040830185610cd6565b905060018060a01b0383166020830152939250505056fea2646970667358221220cec3bd96ced7a3a657888c9a4b87e7c9d79390ef498e62e1c274daf1dbe9698664736f6c63430008130033",
    "sourceMap": "590:2398:2:-:0;;;630:57;;;-1:-1:-1;;;;;;630:57:2;;;645:42;630:57;;;;722:42;693:71;;770;;;;;;798:42;770:71;;;848:44;;;;;;;;;;2042:113:28;;;;;;;;;;;;;-1:-1:-1;;;2042:113:28;;;;;;;;;;;;;;;;-1:-1:-1;;;2042:113:28;;;2116:5;2108;:13;;;;;;:::i;:::-;-1:-1:-1;2131:7:28;:17;2141:7;2131;:17;:::i;:::-;;2042:113;;590:2398:2;;14:127:36;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:36;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:36;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:36;;;2580:26;2531:89;-1:-1:-1;;1335:1:36;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:36;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:36;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:36;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:36:o;:::-;590:2398:2;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806398d5fdca1161006657806398d5fdca146101a2578063a457c2d7146101aa578063a9059cbb146101bd578063dd62ed3e146101d057600080fd5b806370a082311461015c578063867904b41461018557806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc6101e3565b6040516100e99190610d1c565b60405180910390f35b610105610100366004610d52565b610275565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610d7c565b6102b7565b604051601281526020016100e9565b610105610157366004610d52565b6102db565b61011961016a366004610db8565b6001600160a01b031660009081526020819052604090205490565b610198610193366004610d52565b6102fd565b005b6100dc610657565b610119610666565b6101056101b8366004610d52565b6106d9565b6101056101cb366004610d52565b610754565b6101196101de366004610dd3565b610762565b6060600380546101f290610e06565b80601f016020809104026020016040519081016040528092919081815260200182805461021e90610e06565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b600061029f6040518060400160405280600781526020016668656c6c6f6f6f60c81b81525061078d565b336102ab8185856107d3565b60019150505b92915050565b6000336102c5858285610983565b6102d08585856109fd565b506001949350505050565b6000336102ab8185856102ee8383610762565b6102f89190610e56565b6107d3565b8060000361031e57604051634bf29fe960e01b815260040160405180910390fd5b61034e604051806040016040528060078152602001660383934b1b29d160cd1b815250610349610666565b610ba1565b600064e8d4a5100061035e610666565b6103689084610e69565b6103729190610e80565b905061037e6003610bea565b6005546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610ea2565b905061041860405180604001604052806009815260200168030b6b7bab73a2f9d160bd1b81525084610ba1565b6104486040518060400160405280600e81526020016d0313abcb2b92130b630b731b29d160951b81525082610ba1565b61047160405180604001604052806007815260200166038bab7ba329d160cd1b81525083610ba1565b6104b26040518060400160405280601e81526020017f627579657242616c616e6365203c2071756f7465202d2066616c73653a200000815250838310610c2f565b6104e960405180604001604052806015815260200174036b9b39739b2b73232b91034b71034b9b9bab29d1605d1b81525033610c74565b8181101561051257604051633dcd925d60e11b8152600481018290526024015b60405180910390fd5b600554604051636eb1769f60e11b81523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105859190610ea2565b90506105b060405180604001604052806007815260200166030b63637bb9d160cd1b81525082610ba1565b6005546040516323b872dd60e01b8152336004820152306024820152604481018590526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190610ebb565b90508061064f576040516304598f4160e31b815260048101859052602401610509565b505050505050565b6060600480546101f290610e06565b6006546040805163cab0f33560e01b815290516000926001600160a01b03169163cab0f3359160048083019260209291908290030181865afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610ea2565b905090565b600033816106e78286610762565b9050838110156107475760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610509565b6102d082868684036107d3565b6000336102ab8185856109fd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107d0816040516024016107a19190610d1c565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610cb5565b50565b6001600160a01b0383166108355760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610509565b6001600160a01b0382166108965760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610509565b6108c66040518060400160405280600e81526020016d037bbb732b91034b71032b9319d160951b81525084610c74565b6108f86040518060400160405280601081526020016f039b832b73232b91034b71032b9319d160851b81525083610c74565b61092260405180604001604052806008815260200167030b6b7bab73a1d160c51b81525082610ba1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061098f8484610762565b905060001981146109f757818110156109ea5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610509565b6109f784848484036107d3565b50505050565b6001600160a01b038316610a615760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610509565b6001600160a01b038216610ac35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610509565b6001600160a01b03831660009081526020819052604090205481811015610b3b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610509565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36109f7565b610be68282604051602401610bb7929190610edd565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610cb5565b5050565b6107d081604051602401610c0091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052610cb5565b610be68282604051602401610c45929190610eff565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052610cb5565b610be68282604051602401610c8a929190610f23565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b81811015610cfc57602081850181015186830182015201610ce0565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d2f6020830184610cd6565b9392505050565b80356001600160a01b0381168114610d4d57600080fd5b919050565b60008060408385031215610d6557600080fd5b610d6e83610d36565b946020939093013593505050565b600080600060608486031215610d9157600080fd5b610d9a84610d36565b9250610da860208501610d36565b9150604084013590509250925092565b600060208284031215610dca57600080fd5b610d2f82610d36565b60008060408385031215610de657600080fd5b610def83610d36565b9150610dfd60208401610d36565b90509250929050565b600181811c90821680610e1a57607f821691505b602082108103610e3a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102b1576102b1610e40565b80820281158282048414176102b1576102b1610e40565b600082610e9d57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610eb457600080fd5b5051919050565b600060208284031215610ecd57600080fd5b81518015158114610d2f57600080fd5b604081526000610ef06040830185610cd6565b90508260208301529392505050565b604081526000610f126040830185610cd6565b905082151560208301529392505050565b604081526000610f366040830185610cd6565b905060018060a01b0383166020830152939250505056fea2646970667358221220cec3bd96ced7a3a657888c9a4b87e7c9d79390ef498e62e1c274daf1dbe9698664736f6c63430008130033",
    "sourceMap": "590:2398:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:98:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4497:229;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:36;;1262:22;1244:41;;1232:2;1217:18;4497:229:28;1104:187:36;3308:106:28;3395:12;;3308:106;;;1442:25:36;;;1430:2;1415:18;3308:106:28;1296:177:36;5288:286:28;;;;;;:::i;:::-;;:::i;3157:91::-;;;3239:2;1953:36:36;;1941:2;1926:18;3157:91:28;1811:184:36;5969:234:28;;;;;;:::i;:::-;;:::i;3472:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3572:18:28;3546:7;3572:18;;;;;;;;;;;;3472:125;1003:1930:2;;;;;;:::i;:::-;;:::i;:::-;;2431:102:28;;;:::i;899:93:2:-;;;:::i;6690:427:28:-;;;;;;:::i;:::-;;:::i;3793:189::-;;;;;;:::i;:::-;;:::i;4040:149::-;;;;;;:::i;:::-;;:::i;2220:98::-;2274:13;2306:5;2299:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:98;:::o;4497:229::-;4580:4;4596:22;;;;;;;;;;;;;;-1:-1:-1;;;4596:22:28;;;:11;:22::i;:::-;719:10:32;4666:32:28;719:10:32;4682:7:28;4691:6;4666:8;:32::i;:::-;4715:4;4708:11;;;4497:229;;;;;:::o;5288:286::-;5415:4;719:10:32;5471:38:28;5487:4;719:10:32;5502:6:28;5471:15;:38::i;:::-;5519:27;5529:4;5535:2;5539:6;5519:9;:27::i;:::-;-1:-1:-1;5563:4:28;;5288:286;-1:-1:-1;;;;5288:286:28:o;5969:234::-;6057:4;719:10:32;6111:64:28;719:10:32;6127:7:28;6164:10;6136:25;719:10:32;6127:7:28;6136:9;:25::i;:::-;:38;;;;:::i;:::-;6111:8;:64::i;1003:1930:2:-;1073:7;1084:1;1073:12;1069:39;;1094:14;;-1:-1:-1;;;1094:14:2;;;;;;;;;;;1069:39;1118:34;;;;;;;;;;;;;;-1:-1:-1;;;1118:34:2;;;1141:10;:8;:10::i;:::-;1118:11;:34::i;:::-;1163:13;1204:8;1190:10;:8;:10::i;:::-;1180:20;;:7;:20;:::i;:::-;1179:33;;;;:::i;:::-;1163:49;;1222:14;1234:1;1222:11;:14::i;:::-;1276:4;;1269:34;;-1:-1:-1;;;1269:34:2;;1292:10;1269:34;;;3644:51:36;1246:20:2;;-1:-1:-1;;;;;1276:4:2;;1269:22;;3617:18:36;;1269:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1246:57;;1314:33;;;;;;;;;;;;;;-1:-1:-1;;;1314:33:2;;;1339:7;1314:11;:33::i;:::-;1357:43;;;;;;;;;;;;;;-1:-1:-1;;;1357:43:2;;;1387:12;1357:11;:43::i;:::-;1410:29;;;;;;;;;;;;;;-1:-1:-1;;;1410:29:2;;;1433:5;1410:11;:29::i;:::-;1449:67;;;;;;;;;;;;;;;;;;1510:5;1495:12;:20;1449:11;:67::i;:::-;1526:48;;;;;;;;;;;;;;-1:-1:-1;;;1526:48:2;;;1563:10;1526:11;:48::i;:::-;1604:5;1589:12;:20;1585:63;;;1618:30;;-1:-1:-1;;;1618:30:2;;;;;1442:25:36;;;1415:18;;1618:30:2;;;;;;;;1585:63;2143:4;;2136:49;;-1:-1:-1;;;2136:49:2;;2159:10;2136:49;;;4107:34:36;2179:4:2;4157:18:36;;;4150:43;2123:10:2;;-1:-1:-1;;;;;2143:4:2;;2136:22;;4042:18:36;;2136:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2123:62;;2195:29;;;;;;;;;;;;;;-1:-1:-1;;;2195:29:2;;;2218:5;2195:11;:29::i;:::-;2257:4;;2250:59;;-1:-1:-1;;;2250:59:2;;2276:10;2250:59;;;4444:34:36;2296:4:2;4494:18:36;;;4487:43;4546:18;;;4539:34;;;2235:12:2;;-1:-1:-1;;;;;2257:4:2;;2250:25;;4379:18:36;;2250:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2235:74;;2324:7;2319:41;;2340:20;;-1:-1:-1;;;2340:20:2;;;;;1442:25:36;;;1415:18;;2340:20:2;1296:177:36;2319:41:2;1059:1874;;;;1003:1930;;:::o;2431:102:28:-;2487:13;2519:7;2512:14;;;;;:::i;899:93:2:-;965:3;;:20;;;-1:-1:-1;;;965:20:2;;;;939:7;;-1:-1:-1;;;;;965:3:2;;:18;;:20;;;;;;;;;;;;;;:3;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;958:27;;899:93;:::o;6690:427:28:-;6783:4;719:10:32;6783:4:28;6864:25;719:10:32;6881:7:28;6864:9;:25::i;:::-;6837:52;;6927:15;6907:16;:35;;6899:85;;;;-1:-1:-1;;;6899:85:28;;5068:2:36;6899:85:28;;;5050:21:36;5107:2;5087:18;;;5080:30;5146:34;5126:18;;;5119:62;-1:-1:-1;;;5197:18:36;;;5190:35;5242:19;;6899:85:28;4866:401:36;6899:85:28;7018:60;7027:5;7034:7;7062:15;7043:16;:34;7018:8;:60::i;3793:189::-;3872:4;719:10:32;3926:28:28;719:10:32;3943:2:28;3947:6;3926:9;:28::i;4040:149::-;-1:-1:-1;;;;;4155:18:28;;;4129:7;4155:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4040:149::o;5630:121:23:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:23;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:23;-1:-1:-1;;;5701:42:23;;;5685:15;:59::i;:::-;5630:121;:::o;10602:508:28:-;-1:-1:-1;;;;;10733:19:28;;10725:68;;;;-1:-1:-1;;;10725:68:28;;5474:2:36;10725:68:28;;;5456:21:36;5513:2;5493:18;;;5486:30;5552:34;5532:18;;;5525:62;-1:-1:-1;;;5603:18:36;;;5596:34;5647:19;;10725:68:28;5272:400:36;10725:68:28;-1:-1:-1;;;;;10811:21:28;;10803:68;;;;-1:-1:-1;;;10803:68:28;;5879:2:36;10803:68:28;;;5861:21:36;5918:2;5898:18;;;5891:30;5957:34;5937:18;;;5930:62;-1:-1:-1;;;6008:18:36;;;6001:32;6050:19;;10803:68:28;5677:398:36;10803:68:28;10882:36;;;;;;;;;;;;;;-1:-1:-1;;;10882:36:28;;;10912:5;10882:11;:36::i;:::-;10928:40;;;;;;;;;;;;;;-1:-1:-1;;;10928:40:28;;;10960:7;10928:11;:40::i;:::-;10978:31;;;;;;;;;;;;;;-1:-1:-1;;;10978:31:28;;;11002:6;10978:11;:31::i;:::-;-1:-1:-1;;;;;11020:18:28;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11071:32;;1442:25:36;;;11071:32:28;;1415:18:36;11071:32:28;;;;;;;10602:508;;;:::o;11391:441::-;11521:24;11548:25;11558:5;11565:7;11548:9;:25::i;:::-;11521:52;;-1:-1:-1;;11587:16:28;:37;11583:243;;11668:6;11648:16;:26;;11640:68;;;;-1:-1:-1;;;11640:68:28;;6282:2:36;11640:68:28;;;6264:21:36;6321:2;6301:18;;;6294:30;6360:31;6340:18;;;6333:59;6409:18;;11640:68:28;6080:353:36;11640:68:28;11750:51;11759:5;11766:7;11794:6;11775:16;:25;11750:8;:51::i;:::-;11511:321;11391:441;;;:::o;7571:818::-;-1:-1:-1;;;;;7697:18:28;;7689:68;;;;-1:-1:-1;;;7689:68:28;;6640:2:36;7689:68:28;;;6622:21:36;6679:2;6659:18;;;6652:30;6718:34;6698:18;;;6691:62;-1:-1:-1;;;6769:18:36;;;6762:35;6814:19;;7689:68:28;6438:401:36;7689:68:28;-1:-1:-1;;;;;7775:16:28;;7767:64;;;;-1:-1:-1;;;7767:64:28;;7046:2:36;7767:64:28;;;7028:21:36;7085:2;7065:18;;;7058:30;7124:34;7104:18;;;7097:62;-1:-1:-1;;;7175:18:36;;;7168:33;7218:19;;7767:64:28;6844:399:36;7767:64:28;-1:-1:-1;;;;;7913:15:28;;7891:19;7913:15;;;;;;;;;;;7946:21;;;;7938:72;;;;-1:-1:-1;;;7938:72:28;;7450:2:36;7938:72:28;;;7432:21:36;7489:2;7469:18;;;7462:30;7528:34;7508:18;;;7501:62;-1:-1:-1;;;7579:18:36;;;7572:36;7625:19;;7938:72:28;7248:402:36;7938:72:28;-1:-1:-1;;;;;8044:15:28;;;:9;:15;;;;;;;;;;;8062:20;;;8044:38;;8259:13;;;;;;;;;;:23;;;;;;8308:26;;1442:25:36;;;8259:13:28;;8308:26;;1415:18:36;8308:26:28;;;;;;;8345:37;12416:121;6548:139:23;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:23;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:23;-1:-1:-1;;;6628:51:23;;;6612:15;:68::i;:::-;6548:139;;:::o;5514:110::-;5560:57;5613:2;5576:40;;;;;;1442:25:36;;1430:2;1415:18;;1296:177;5576:40:23;;;;-1:-1:-1;;5576:40:23;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:23;-1:-1:-1;;;5576:40:23;;;5560:15;:57::i;6849:139::-;6913:68;6973:2;6977;6929:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6929:51:23;;;;;;;;;;;;;;-1:-1:-1;;;;;6929:51:23;-1:-1:-1;;;6929:51:23;;;6913:15;:68::i;6994:145::-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:23;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:23;-1:-1:-1;;;7077:54:23;;;181:376;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;14:423:36:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:36:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:36;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:36:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2000:186::-;2059:6;2112:2;2100:9;2091:7;2087:23;2083:32;2080:52;;;2128:1;2125;2118:12;2080:52;2151:29;2170:9;2151:29;:::i;2191:260::-;2259:6;2267;2320:2;2308:9;2299:7;2295:23;2291:32;2288:52;;;2336:1;2333;2326:12;2288:52;2359:29;2378:9;2359:29;:::i;:::-;2349:39;;2407:38;2441:2;2430:9;2426:18;2407:38;:::i;:::-;2397:48;;2191:260;;;;;:::o;2456:380::-;2535:1;2531:12;;;;2578;;;2599:61;;2653:4;2645:6;2641:17;2631:27;;2599:61;2706:2;2698:6;2695:14;2675:18;2672:38;2669:161;;2752:10;2747:3;2743:20;2740:1;2733:31;2787:4;2784:1;2777:15;2815:4;2812:1;2805:15;2669:161;;2456:380;;;:::o;2841:127::-;2902:10;2897:3;2893:20;2890:1;2883:31;2933:4;2930:1;2923:15;2957:4;2954:1;2947:15;2973:125;3038:9;;;3059:10;;;3056:36;;;3072:18;;:::i;3103:168::-;3176:9;;;3207;;3224:15;;;3218:22;;3204:37;3194:71;;3245:18;;:::i;3276:217::-;3316:1;3342;3332:132;;3386:10;3381:3;3377:20;3374:1;3367:31;3421:4;3418:1;3411:15;3449:4;3446:1;3439:15;3332:132;-1:-1:-1;3478:9:36;;3276:217::o;3706:184::-;3776:6;3829:2;3817:9;3808:7;3804:23;3800:32;3797:52;;;3845:1;3842;3835:12;3797:52;-1:-1:-1;3868:16:36;;3706:184;-1:-1:-1;3706:184:36:o;4584:277::-;4651:6;4704:2;4692:9;4683:7;4679:23;4675:32;4672:52;;;4720:1;4717;4710:12;4672:52;4752:9;4746:16;4805:5;4798:13;4791:21;4784:5;4781:32;4771:60;;4827:1;4824;4817:12;7655:291;7832:2;7821:9;7814:21;7795:4;7852:45;7893:2;7882:9;7878:18;7870:6;7852:45;:::i;:::-;7844:53;;7933:6;7928:2;7917:9;7913:18;7906:34;7655:291;;;;;:::o;7951:301::-;8122:2;8111:9;8104:21;8085:4;8142:45;8183:2;8172:9;8168:18;8160:6;8142:45;:::i;:::-;8134:53;;8237:6;8230:14;8223:22;8218:2;8207:9;8203:18;8196:50;7951:301;;;;;:::o;8257:317::-;8434:2;8423:9;8416:21;8397:4;8454:45;8495:2;8484:9;8480:18;8472:6;8454:45;:::i;:::-;8446:53;;8564:1;8560;8555:3;8551:11;8547:19;8539:6;8535:32;8530:2;8519:9;8515:18;8508:60;8257:317;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getPrice()": "98d5fdca",
    "increaseAllowance(address,uint256)": "39509351",
    "issue(address,uint256)": "867904b4",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Cant_be_zero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Cant_transfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyerBalance\",\"type\":\"uint256\"}],\"name\":\"Not_enough_funds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/EnergyETHFacet.sol\":\"EnergyETHFacet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"contracts/facets/EnergyETHFacet.sol\":{\"keccak256\":\"0x8e8d6d0e5cd5362bd008eb3ffa676727bdb751799248c0072dff0f9117db5697\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4f4e532b72e5ab2d4fa1dd2cc4f9320398f69121e2494078e560ab4fd735dfe9\",\"dweb:/ipfs/Qmd4miroYTvap1ZygfFJd48RhYvgHZnTjiXSzBH7emCiJy\"]},\"interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x5e03ef1db4bfbf6a79809f8f6f61d70f330579286a66f53c603ccee2833e6152\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://508e9a49a24be742788019749254845840e7909a542fb5694038e32cd54b786c\",\"dweb:/ipfs/QmUk8sUZeSvGFghU6UxK7592GaoP6siCLXtNqkAMYhirRd\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x71080136fc8fca6ad0b6835a96120f4ba97b5d2f9665ddaf315ab700da97d600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1e14d60fc63ae12154507c1355a392cf7a403284cd9e9c5cd1a61d0f35835bd\",\"dweb:/ipfs/QmZhD5TtCKEYnqizqofE5yH1bJ8WqtVKerdKfNnjtaqZ53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Cant_be_zero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Cant_transfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "buyerBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Not_enough_funds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "issue"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/facets/EnergyETHFacet.sol": "EnergyETHFacet"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/facets/EnergyETHFacet.sol": {
        "keccak256": "0x8e8d6d0e5cd5362bd008eb3ffa676727bdb751799248c0072dff0f9117db5697",
        "urls": [
          "bzz-raw://4f4e532b72e5ab2d4fa1dd2cc4f9320398f69121e2494078e560ab4fd735dfe9",
          "dweb:/ipfs/Qmd4miroYTvap1ZygfFJd48RhYvgHZnTjiXSzBH7emCiJy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/ozIDiamond.sol": {
        "keccak256": "0x5e03ef1db4bfbf6a79809f8f6f61d70f330579286a66f53c603ccee2833e6152",
        "urls": [
          "bzz-raw://508e9a49a24be742788019749254845840e7909a542fb5694038e32cd54b786c",
          "dweb:/ipfs/QmUk8sUZeSvGFghU6UxK7592GaoP6siCLXtNqkAMYhirRd"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x71080136fc8fca6ad0b6835a96120f4ba97b5d2f9665ddaf315ab700da97d600",
        "urls": [
          "bzz-raw://d1e14d60fc63ae12154507c1355a392cf7a403284cd9e9c5cd1a61d0f35835bd",
          "dweb:/ipfs/QmZhD5TtCKEYnqizqofE5yH1bJ8WqtVKerdKfNnjtaqZ53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/facets/EnergyETHFacet.sol",
    "id": 298,
    "exportedSymbols": {
      "Address": [
        31314
      ],
      "Cant_approve": [
        116
      ],
      "Cant_be_zero": [
        108
      ],
      "Cant_transfer": [
        120
      ],
      "Context": [
        31336
      ],
      "ERC20": [
        30881
      ],
      "EnergyETHFacet": [
        297
      ],
      "IERC20": [
        30959
      ],
      "IERC20Metadata": [
        30984
      ],
      "ISwapRouter": [
        31450
      ],
      "IUniswapV3SwapCallback": [
        31350
      ],
      "Not_enough_funds": [
        112
      ],
      "console": [
        21004
      ],
      "ozIDiamond": [
        902
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:2945:2",
    "nodes": [
      {
        "id": 100,
        "nodeType": "PragmaDirective",
        "src": "45:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 101,
        "nodeType": "ImportDirective",
        "src": "71:68:2",
        "nodes": [],
        "absolutePath": "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 298,
        "sourceUnit": 31451,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 102,
        "nodeType": "ImportDirective",
        "src": "140:56:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 298,
        "sourceUnit": 30960,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 103,
        "nodeType": "ImportDirective",
        "src": "197:55:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 298,
        "sourceUnit": 30882,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 104,
        "nodeType": "ImportDirective",
        "src": "253:51:2",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 298,
        "sourceUnit": 31315,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 105,
        "nodeType": "ImportDirective",
        "src": "305:41:2",
        "nodes": [],
        "absolutePath": "interfaces/ozIDiamond.sol",
        "file": "../../interfaces/ozIDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 298,
        "sourceUnit": 903,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 106,
        "nodeType": "ImportDirective",
        "src": "380:31:2",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 298,
        "sourceUnit": 21005,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 108,
        "nodeType": "ErrorDefinition",
        "src": "447:21:2",
        "nodes": [],
        "errorSelector": "4bf29fe9",
        "name": "Cant_be_zero",
        "nameLocation": "453:12:2",
        "parameters": {
          "id": 107,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "465:2:2"
        }
      },
      {
        "id": 112,
        "nodeType": "ErrorDefinition",
        "src": "469:45:2",
        "nodes": [],
        "errorSelector": "7b9b24ba",
        "name": "Not_enough_funds",
        "nameLocation": "475:16:2",
        "parameters": {
          "id": 111,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 110,
              "mutability": "mutable",
              "name": "buyerBalance",
              "nameLocation": "500:12:2",
              "nodeType": "VariableDeclaration",
              "scope": 112,
              "src": "492:20:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 109,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "492:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "491:22:2"
        }
      },
      {
        "id": 116,
        "nodeType": "ErrorDefinition",
        "src": "515:35:2",
        "nodes": [],
        "errorSelector": "1c806982",
        "name": "Cant_approve",
        "nameLocation": "521:12:2",
        "parameters": {
          "id": 115,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 114,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "542:6:2",
              "nodeType": "VariableDeclaration",
              "scope": 116,
              "src": "534:14:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 113,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "534:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "533:16:2"
        }
      },
      {
        "id": 120,
        "nodeType": "ErrorDefinition",
        "src": "551:36:2",
        "nodes": [],
        "errorSelector": "22cc7a08",
        "name": "Cant_transfer",
        "nameLocation": "557:13:2",
        "parameters": {
          "id": 119,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 118,
              "mutability": "mutable",
              "name": "amount",
              "nameLocation": "579:6:2",
              "nodeType": "VariableDeclaration",
              "scope": 120,
              "src": "571:14:2",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 117,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "571:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "570:16:2"
        }
      },
      {
        "id": 297,
        "nodeType": "ContractDefinition",
        "src": "590:2398:2",
        "nodes": [
          {
            "id": 125,
            "nodeType": "VariableDeclaration",
            "src": "630:57:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "638:4:2",
            "scope": 297,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 123,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846463937304136314130346231634131343833344134336635644534353333654244444235434338",
              "id": 124,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "645:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"
            },
            "visibility": "internal"
          },
          {
            "id": 128,
            "nodeType": "VariableDeclaration",
            "src": "693:71:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "wethAdrr",
            "nameLocation": "711:8:2",
            "scope": 297,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 126,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "693:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838326146343934343744386130376533626439354244306435366633353234313532336642616231",
              "id": 127,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "722:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
            },
            "visibility": "internal"
          },
          {
            "id": 134,
            "nodeType": "VariableDeclaration",
            "src": "770:71:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "OZL",
            "nameLocation": "781:3:2",
            "scope": 297,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ozIDiamond_$902",
              "typeString": "contract ozIDiamond"
            },
            "typeName": {
              "id": 130,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 129,
                "name": "ozIDiamond",
                "nameLocations": [
                  "770:10:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 902,
                "src": "770:10:2"
              },
              "referencedDeclaration": 902,
              "src": "770:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$902",
                "typeString": "contract ozIDiamond"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837443166313344643035453662303637334443334430424661313464343041373443666133454632",
                  "id": 132,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "798:42:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7D1f13Dd05E6b0673DC3D0BFa14d40A74Cfa3EF2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 131,
                "name": "ozIDiamond",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 902,
                "src": "787:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ozIDiamond_$902_$",
                  "typeString": "type(contract ozIDiamond)"
                }
              },
              "id": 133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "787:54:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ozIDiamond_$902",
                "typeString": "contract ozIDiamond"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 142,
            "nodeType": "FunctionDefinition",
            "src": "848:44:2",
            "nodes": [],
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "890:2:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456e6572677920455448",
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "868:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4bd924deff42c91521bdefb2ca9a2dce3b459602ead3da951ea02073f4b45534",
                      "typeString": "literal_string \"Energy ETH\""
                    },
                    "value": "Energy ETH"
                  },
                  {
                    "hexValue": "65455448",
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "882:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d6c14ce243ce7d5c149bd600a04038f4aa1a3243dd4808b0e0441d8ec7b87788",
                      "typeString": "literal_string \"eETH\""
                    },
                    "value": "eETH"
                  }
                ],
                "id": 139,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 136,
                  "name": "ERC20",
                  "nameLocations": [
                    "862:5:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30881,
                  "src": "862:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "862:27:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "859:2:2"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "890:0:2"
            },
            "scope": 297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 152,
            "nodeType": "FunctionDefinition",
            "src": "899:93:2",
            "nodes": [],
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "948:44:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 147,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "965:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$902",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "969:14:2",
                      "memberName": "getEnergyPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 896,
                      "src": "965:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "965:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "958:27:2"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "908:8:2",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "916:2:2"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "939:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:9:2"
            },
            "scope": 297,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 292,
            "nodeType": "FunctionDefinition",
            "src": "1003:1930:2",
            "nodes": [],
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "1059:1874:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 159,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1073:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1084:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1073:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 165,
                  "nodeType": "IfStatement",
                  "src": "1069:39:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 162,
                        "name": "Cant_be_zero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1094:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1094:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 164,
                    "nodeType": "RevertStatement",
                    "src": "1087:21:2"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "70726963653a20",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3aa48c3588dd77a7238e530f76a63b6b4be114831bfa0aeb1ab81b373f2e5d81",
                          "typeString": "literal_string \"price: \""
                        },
                        "value": "price: "
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 170,
                          "name": "getPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "1141:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1141:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3aa48c3588dd77a7238e530f76a63b6b4be114831bfa0aeb1ab81b373f2e5d81",
                          "typeString": "literal_string \"price: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 166,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1118:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1126:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13648,
                      "src": "1118:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:34:2"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "1171:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 291,
                      "src": "1163:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1163:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 176,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "1180:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 177,
                              "name": "getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "1190:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1190:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1180:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 180,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1179:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1204:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3132",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1210:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        "value": "12"
                      },
                      "src": "1204:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000_by_1",
                        "typeString": "int_const 1000000000000"
                      }
                    },
                    "src": "1179:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1163:49:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1234:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 186,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1222:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1230:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13521,
                      "src": "1222:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:14:2"
                },
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "buyerBalance",
                      "nameLocation": "1254:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 291,
                      "src": "1246:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1246:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 201,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1292:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1296:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1292:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 195,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "1276:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 194,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30959,
                          "src": "1269:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30959_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1269:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30959",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1282:9:2",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30916,
                      "src": "1269:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1269:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1246:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616d6f756e745f3a20",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1326:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ac721b723f388acfd7d1da048b3c07d16de5cc620e2dc35fa312ddc31d4df2d",
                          "typeString": "literal_string \"amount_: \""
                        },
                        "value": "amount_: "
                      },
                      {
                        "id": 206,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "1339:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0ac721b723f388acfd7d1da048b3c07d16de5cc620e2dc35fa312ddc31d4df2d",
                          "typeString": "literal_string \"amount_: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1314:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1322:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13648,
                      "src": "1314:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:33:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "627579657242616c616e63653a20",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1369:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f9c4b0ecfe21dd0303157fa14113224c3667388d8636ea8700a760832f979a4",
                          "typeString": "literal_string \"buyerBalance: \""
                        },
                        "value": "buyerBalance: "
                      },
                      {
                        "id": 213,
                        "name": "buyerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "1387:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f9c4b0ecfe21dd0303157fa14113224c3667388d8636ea8700a760832f979a4",
                          "typeString": "literal_string \"buyerBalance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 209,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1357:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1365:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13648,
                      "src": "1357:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "71756f74653a20",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1422:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87ac3a4a276e0fc87419e1f6b1766fc3f78ba5fd4e53c6d21ee8fc97111438bb",
                          "typeString": "literal_string \"quote: \""
                        },
                        "value": "quote: "
                      },
                      {
                        "id": 220,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "1433:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_87ac3a4a276e0fc87419e1f6b1766fc3f78ba5fd4e53c6d21ee8fc97111438bb",
                          "typeString": "literal_string \"quote: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 216,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1410:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1418:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13648,
                      "src": "1410:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1410:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:29:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "627579657242616c616e6365203c2071756f7465202d2066616c73653a20",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf55e4c4a2a5b91dee2389af185e4f2fd2e4e15a5c450e9d3d841e97780913b0",
                          "typeString": "literal_string \"buyerBalance < quote - false: \""
                        },
                        "value": "buyerBalance < quote - false: "
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 227,
                          "name": "buyerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "1495:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 228,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 175,
                          "src": "1510:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1495:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cf55e4c4a2a5b91dee2389af185e4f2fd2e4e15a5c450e9d3d841e97780913b0",
                          "typeString": "literal_string \"buyerBalance < quote - false: \""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 223,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1449:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1457:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13682,
                      "src": "1449:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,bool) view"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1449:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "1449:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d73672e73656e64657220696e2069737375653a20",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1538:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_153ad812503091fd95d25fdf6e42822c8f6f7f70f438f4c04ce52c5f594ed6ed",
                          "typeString": "literal_string \"msg.sender in issue: \""
                        },
                        "value": "msg.sender in issue: "
                      },
                      {
                        "expression": {
                          "id": 236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1563:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1567:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1563:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_153ad812503091fd95d25fdf6e42822c8f6f7f70f438f4c04ce52c5f594ed6ed",
                          "typeString": "literal_string \"msg.sender in issue: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 232,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1526:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1534:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13699,
                      "src": "1526:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:48:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 240,
                      "name": "buyerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "1589:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 241,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "1604:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1589:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "nodeType": "IfStatement",
                  "src": "1585:63:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 244,
                          "name": "buyerBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "1635:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 243,
                        "name": "Not_enough_funds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1618:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1618:30:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 246,
                    "nodeType": "RevertStatement",
                    "src": "1611:37:2"
                  }
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "allow",
                      "nameLocation": "2128:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 291,
                      "src": "2123:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2123:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 261,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 254,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2159:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2163:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2159:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 258,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2179:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EnergyETHFacet_$297",
                              "typeString": "contract EnergyETHFacet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EnergyETHFacet_$297",
                              "typeString": "contract EnergyETHFacet"
                            }
                          ],
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2171:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2171:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2171:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 251,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "2143:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 250,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30959,
                          "src": "2136:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30959_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2136:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30959",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2149:9:2",
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30936,
                      "src": "2136:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2123:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "616c6c6f773a20",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2207:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64d091f6b2dd6a60bcc6ab23b7444b37dc07f227fbc6ace2bf6e67520e7db8a0",
                          "typeString": "literal_string \"allow: \""
                        },
                        "value": "allow: "
                      },
                      {
                        "id": 266,
                        "name": "allow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "2218:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_64d091f6b2dd6a60bcc6ab23b7444b37dc07f227fbc6ace2bf6e67520e7db8a0",
                          "typeString": "literal_string \"allow: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 262,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "2195:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21004_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2203:3:2",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13648,
                      "src": "2195:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:29:2"
                },
                {
                  "assignments": [
                    270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 270,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2240:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 291,
                      "src": "2235:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 269,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2235:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 283,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2276:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2280:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2276:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 279,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2296:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EnergyETHFacet_$297",
                              "typeString": "contract EnergyETHFacet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EnergyETHFacet_$297",
                              "typeString": "contract EnergyETHFacet"
                            }
                          ],
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2288:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2288:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2288:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 281,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "2303:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 272,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "2257:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 271,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30959,
                          "src": "2250:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$30959_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2250:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$30959",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2263:12:2",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30958,
                      "src": "2250:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2235:74:2"
                },
                {
                  "condition": {
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2323:8:2",
                    "subExpression": {
                      "id": 284,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 270,
                      "src": "2324:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 290,
                  "nodeType": "IfStatement",
                  "src": "2319:41:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 287,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 175,
                          "src": "2354:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 286,
                        "name": "Cant_transfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "2340:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2340:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 289,
                    "nodeType": "RevertStatement",
                    "src": "2333:27:2"
                  }
                }
              ]
            },
            "functionSelector": "867904b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issue",
            "nameLocation": "1012:5:2",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "user_",
                  "nameLocation": "1026:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "1018:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1041:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "1033:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:32:2"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:0:2"
            },
            "scope": 297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 296,
            "nodeType": "FunctionDefinition",
            "src": "2940:44:2",
            "nodes": [],
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "2974:10:2",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositInDeFi",
            "nameLocation": "2949:14:2",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2963:2:2"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2974:0:2"
            },
            "scope": 297,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 121,
              "name": "ERC20",
              "nameLocations": [
                "617:5:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30881,
              "src": "617:5:2"
            },
            "id": 122,
            "nodeType": "InheritanceSpecifier",
            "src": "617:5:2"
          }
        ],
        "canonicalName": "EnergyETHFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          297,
          30881,
          30984,
          30959,
          31336
        ],
        "name": "EnergyETHFacet",
        "nameLocation": "599:14:2",
        "scope": 298,
        "usedErrors": [
          108,
          112,
          120
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 2
}