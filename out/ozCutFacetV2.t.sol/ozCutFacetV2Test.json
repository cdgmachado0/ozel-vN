{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_addOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_addOracle_notOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_removeOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_removeOracle_notOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805460ff199081166001908117909255600480549091169091179055602980546001600160a01b031990811673e738696676571d9b74c81716e4ae797c2440d30617909155602a8054821673bcd8bea7831f392bb019ef3a672cc15866004536179055602b80548216737d1f13dd05e6b0673dc3d0bfa14d40a74cfa3ef2179055602c8054821661dead179055602d8054821673c31e54c7a869b9fcbecc14363cf510d1c41fa443179055602e8054821673fd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9179055602f80549091166e22d473030f116ddee9f6b43ac78ba317905560e0604052602260808181529062001a9e60a039603290620001079082620001c1565b503480156200011557600080fd5b506200028d565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014757607f821691505b6020821081036200016857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001bc57600081815260208120601f850160051c81016020861015620001975750805b601f850160051c820191505b81811015620001b857828155600101620001a3565b5050505b505050565b81516001600160401b03811115620001dd57620001dd6200011c565b620001f581620001ee845462000132565b846200016e565b602080601f8311600181146200022d5760008415620002145750858301515b600019600386901b1c1916600185901b178555620001b8565b600085815260208120601f198616915b828110156200025e578886015182559484019460019091019084016200023d565b50858210156200027d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611801806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636db3fb2111610097578063ba414fa611610066578063ba414fa614610184578063d60b819b1461019c578063e20c9f71146101a4578063fa7626d4146101ac57600080fd5b80636db3fb211461015757806385226c811461015f578063916a17c614610174578063b5508aa91461017c57600080fd5b80633e5e3c23116100d35780633e5e3c231461012a5780633f7286f4146101325780634c7c495b1461013a57806366d9a9a01461014257600080fd5b80630a9254e4146100fa5780631ed7831c1461010457806334f7582a14610122575b600080fd5b6101026101b9565b005b61010c6103bb565b60405161011991906112c8565b60405180910390f35b61010261041d565b61010c6105fc565b61010c61065c565b6101026106bc565b61014a610850565b6040516101199190611315565b61010261093f565b610167610a8d565b6040516101199190611418565b61014a610b5d565b610167610c43565b61018c610d13565b6040519015158152602001610119565b610102610e3e565b61010c6110ed565b60005461018c9060ff1681565b60405163975a6ce960e01b8152602060048201526008602482015267617262697472756d60c01b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063975a6ce990606401600060405180830381865afa158015610229573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261025191908101906114c1565b630420bcff6040518363ffffffff1660e01b8152600401610273929190611555565b6020604051808303816000875af1158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b69190611577565b60305560405163975a6ce960e01b8152602060048201526008602482015267617262697472756d60c01b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063975a6ce990606401600060405180830381865afa158015610329573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261035191908101906114c1565b630420be2c6040518363ffffffff1660e01b8152600401610373929190611555565b6020604051808303816000875af1158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190611577565b603155565b6060600d80548060200260200160405190810160405280929190818152602001828054801561041357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103f5575b5050505050905090565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610466573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261048e91908101906115a7565b905061049d815160011461114d565b60295460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b5050602154601d54604051633f7217f160e21b81526001600160a01b0391821660048201529116925063fdc85fc49150602401600060405180830381600087803b15801561055757600080fd5b505af115801561056b573d6000803e3d6000fd5b50505050602160009054906101000a90046001600160a01b03166001600160a01b03166340884c526040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ea91908101906115a7565b90506105f9815160001461114d565b50565b6060600f805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610705573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072d91908101906115a7565b905061073c815160011461114d565b602c5460405160609190911b6bffffffffffffffffffffffff1916602082015260009060340160408051601f1981840301815290829052805160209091012063f28dceb360e01b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906107b29060329060040161168e565b600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b5050602154602c54604051637e790d3160e01b81526001600160a01b0391821660048201526024810186905291169250637e790d319150604401600060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050505050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109365760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108e05790505b50505050508152505081526020019060010190610874565b50505050905090565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610988573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109b091908101906115a7565b90506109bf815160011461114d565b60405163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906109f79060329060040161168e565b600060405180830381600087803b158015610a1157600080fd5b505af1158015610a25573d6000803e3d6000fd5b5050602154601d54604051633f7217f160e21b81526001600160a01b0391821660048201529116925063fdc85fc49150602401600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b5050505050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610936578382906000526020600020018054610ad090611654565b80601f0160208091040260200160405190810160405280929190818152602001828054610afc90611654565b8015610b495780601f10610b1e57610100808354040283529160200191610b49565b820191906000526020600020905b815481529060010190602001808311610b2c57829003601f168201915b505050505081526020019060010190610ab1565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109365760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c2b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bed5790505b50505050508152505081526020019060010190610b81565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610936578382906000526020600020018054610c8690611654565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb290611654565b8015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b505050505081526020019060010190610c67565b60008054610100900460ff1615610d335750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e395760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610dc1917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161173a565b60408051601f1981840301815290829052610ddb9161176b565b6000604051808303816000865af19150503d8060008114610e18576040519150601f19603f3d011682016040523d82523d6000602084013e610e1d565b606091505b5091505080806020019051810190610e359190611787565b9150505b919050565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610e87573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eaf91908101906115a7565b9050610ebe815160011461114d565b602c5460405160609190911b6bffffffffffffffffffffffff1916602082015260009060340160408051808303601f1901815290829052805160209091012060295463ca669fa760e01b83526001600160a01b031660048301529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015610f5357600080fd5b505af1158015610f67573d6000803e3d6000fd5b5050602154602c54604051637e790d3160e01b81526001600160a01b0391821660048201526024810186905291169250637e790d319150604401600060405180830381600087803b158015610fbb57600080fd5b505af1158015610fcf573d6000803e3d6000fd5b50505050602160009054906101000a90046001600160a01b03166001600160a01b03166340884c526040518163ffffffff1660e01b8152600401600060405180830381865afa158015611026573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261104e91908101906115a7565b915061105d825160021461114d565b602154604051633bf84b0160e01b8152600481018390526000916001600160a01b031690633bf84b0190602401602060405180830381865afa1580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906117b0565b602c549091506110e8906001600160a01b0380841691161461114d565b505050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b806105f9577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516111b19060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16105f9737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156112b75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611256929160200161173a565b60408051601f19818403018152908290526112709161176b565b6000604051808303816000865af19150503d80600081146112ad576040519150601f19603f3d011682016040523d82523d6000602084013e6112b2565b606091505b505050505b6000805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b818110156113095783516001600160a01b0316835292840192918401916001016112e4565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156113b957898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156113a45783516001600160e01b0319168252928b019260019290920191908b019061137a565b50978a0197955050509187019160010161133d565b50919998505050505050505050565b60005b838110156113e35781810151838201526020016113cb565b50506000910152565b600081518084526114048160208601602086016113c8565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561146d57603f1988860301845261145b8583516113ec565b9450928501929085019060010161143f565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114b9576114b961147a565b604052919050565b6000602082840312156114d357600080fd5b815167ffffffffffffffff808211156114eb57600080fd5b818401915084601f8301126114ff57600080fd5b8151818111156115115761151161147a565b611524601f8201601f1916602001611490565b915080825285602082850101111561153b57600080fd5b61154c8160208401602086016113c8565b50949350505050565b60408152600061156860408301856113ec565b90508260208301529392505050565b60006020828403121561158957600080fd5b5051919050565b80516001600160a01b0381168114610e3957600080fd5b600060208083850312156115ba57600080fd5b825167ffffffffffffffff808211156115d257600080fd5b818501915085601f8301126115e657600080fd5b8151818111156115f8576115f861147a565b8060051b9150611609848301611490565b818152918301840191848101908884111561162357600080fd5b938501935b838510156116485761163985611590565b82529385019390850190611628565b98975050505050505050565b600181811c9082168061166857607f821691505b60208210810361168857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208083526000845481600182811c9150808316806116b057607f831692505b85831081036116cd57634e487b7160e01b85526022600452602485fd5b8786018381526020018180156116ea57600181146117005761172b565b60ff198616825284151560051b8201965061172b565b60008b81526020902060005b868110156117255781548482015290850190890161170c565b83019750505b50949998505050505050505050565b6001600160e01b031983168152815160009061175d8160048501602087016113c8565b919091016004019392505050565b6000825161177d8184602087016113c8565b9190910192915050565b60006020828403121561179957600080fd5b815180151581146117a957600080fd5b9392505050565b6000602082840312156117c257600080fd5b6117a98261159056fea2646970667358221220fb378fc1ad7daccb2ca5db92bb53778df1e048784a743b7a62d9e658b229ea1964736f6c634300081300334c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e6572",
    "sourceMap": "1572:26:20:-:0;;;-1:-1:-1;;1572:26:20;;;1594:4;1572:26;;;;;;3288:44:23;;;;;;;;;;;1180:70:64;;;-1:-1:-1;;;;;;1180:70:64;;;1208:42;1180:70;;;;1256;;;;;1284:42;1256:70;;;1332:69;;;;;1359:42;1332:69;;;1407:70;;;;;1435:42;1407:70;;;1483:73;;;;;1514:42;1483:73;;;1563:64;;;;;1584:42;1563:64;;;1634:71;;;;;;1662:42;1634:71;;;1772:43;157:1540:66;1772:43:64;;157:1540:66;1772:43:64;;;157:1540:66;1772:43:64;;;1755:60;;;;;;:::i;:::-;;157:1540:66;;;;;;;;;;;;14:127:69;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;656:544::-;757:2;752:3;749:11;746:448;;;793:1;818:5;814:2;807:17;863:4;859:2;849:19;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:69;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;746:448;656:544;;;:::o;1376:1348::-;1494:10;;-1:-1:-1;;;;;1516:30:69;;1513:56;;;1549:18;;:::i;:::-;1578:96;1667:6;1627:38;1659:4;1653:11;1627:38;:::i;:::-;1621:4;1578:96;:::i;:::-;1729:4;;1793:2;1782:14;;1810:1;1805:662;;;;2511:1;2528:6;2525:89;;;-1:-1:-1;2580:19:69;;;2574:26;2525:89;-1:-1:-1;;1333:1:69;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2627:81;;1775:943;;1805:662;603:1;596:14;;;640:4;627:18;;-1:-1:-1;;1841:20:69;;;1958:236;1972:7;1969:1;1966:14;1958:236;;;2061:19;;;2055:26;2040:42;;2153:27;;;;2121:1;2109:14;;;;1988:19;;1958:236;;;1962:3;2222:6;2213:7;2210:19;2207:201;;;2283:19;;;2277:26;-1:-1:-1;;2366:1:69;2362:14;;;2378:3;2358:24;2354:37;2350:42;2335:58;2320:74;;2207:201;-1:-1:-1;;;;;2454:1:69;2438:14;;;2434:22;2421:36;;-1:-1:-1;1376:1348:69:o;:::-;157:1540:66;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636db3fb2111610097578063ba414fa611610066578063ba414fa614610184578063d60b819b1461019c578063e20c9f71146101a4578063fa7626d4146101ac57600080fd5b80636db3fb211461015757806385226c811461015f578063916a17c614610174578063b5508aa91461017c57600080fd5b80633e5e3c23116100d35780633e5e3c231461012a5780633f7286f4146101325780634c7c495b1461013a57806366d9a9a01461014257600080fd5b80630a9254e4146100fa5780631ed7831c1461010457806334f7582a14610122575b600080fd5b6101026101b9565b005b61010c6103bb565b60405161011991906112c8565b60405180910390f35b61010261041d565b61010c6105fc565b61010c61065c565b6101026106bc565b61014a610850565b6040516101199190611315565b61010261093f565b610167610a8d565b6040516101199190611418565b61014a610b5d565b610167610c43565b61018c610d13565b6040519015158152602001610119565b610102610e3e565b61010c6110ed565b60005461018c9060ff1681565b60405163975a6ce960e01b8152602060048201526008602482015267617262697472756d60c01b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063975a6ce990606401600060405180830381865afa158015610229573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261025191908101906114c1565b630420bcff6040518363ffffffff1660e01b8152600401610273929190611555565b6020604051808303816000875af1158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b69190611577565b60305560405163975a6ce960e01b8152602060048201526008602482015267617262697472756d60c01b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90636ba3ba2b90829063975a6ce990606401600060405180830381865afa158015610329573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261035191908101906114c1565b630420be2c6040518363ffffffff1660e01b8152600401610373929190611555565b6020604051808303816000875af1158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190611577565b603155565b6060600d80548060200260200160405190810160405280929190818152602001828054801561041357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103f5575b5050505050905090565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610466573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261048e91908101906115a7565b905061049d815160011461114d565b60295460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b5050602154601d54604051633f7217f160e21b81526001600160a01b0391821660048201529116925063fdc85fc49150602401600060405180830381600087803b15801561055757600080fd5b505af115801561056b573d6000803e3d6000fd5b50505050602160009054906101000a90046001600160a01b03166001600160a01b03166340884c526040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ea91908101906115a7565b90506105f9815160001461114d565b50565b6060600f805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610705573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072d91908101906115a7565b905061073c815160011461114d565b602c5460405160609190911b6bffffffffffffffffffffffff1916602082015260009060340160408051601f1981840301815290829052805160209091012063f28dceb360e01b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906107b29060329060040161168e565b600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b5050602154602c54604051637e790d3160e01b81526001600160a01b0391821660048201526024810186905291169250637e790d319150604401600060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050505050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156109365760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561091e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108e05790505b50505050508152505081526020019060010190610874565b50505050905090565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610988573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109b091908101906115a7565b90506109bf815160011461114d565b60405163f28dceb360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb3906109f79060329060040161168e565b600060405180830381600087803b158015610a1157600080fd5b505af1158015610a25573d6000803e3d6000fd5b5050602154601d54604051633f7217f160e21b81526001600160a01b0391821660048201529116925063fdc85fc49150602401600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b5050505050565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610936578382906000526020600020018054610ad090611654565b80601f0160208091040260200160405190810160405280929190818152602001828054610afc90611654565b8015610b495780601f10610b1e57610100808354040283529160200191610b49565b820191906000526020600020905b815481529060010190602001808311610b2c57829003601f168201915b505050505081526020019060010190610ab1565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156109365760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c2b57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bed5790505b50505050508152505081526020019060010190610b81565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610936578382906000526020600020018054610c8690611654565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb290611654565b8015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b505050505081526020019060010190610c67565b60008054610100900460ff1615610d335750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e395760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610dc1917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161173a565b60408051601f1981840301815290829052610ddb9161176b565b6000604051808303816000865af19150503d8060008114610e18576040519150601f19603f3d011682016040523d82523d6000602084013e610e1d565b606091505b5091505080806020019051810190610e359190611787565b9150505b919050565b60215460408051632044262960e11b815290516000926001600160a01b0316916340884c5291600480830192869291908290030181865afa158015610e87573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eaf91908101906115a7565b9050610ebe815160011461114d565b602c5460405160609190911b6bffffffffffffffffffffffff1916602082015260009060340160408051808303601f1901815290829052805160209091012060295463ca669fa760e01b83526001600160a01b031660048301529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b158015610f5357600080fd5b505af1158015610f67573d6000803e3d6000fd5b5050602154602c54604051637e790d3160e01b81526001600160a01b0391821660048201526024810186905291169250637e790d319150604401600060405180830381600087803b158015610fbb57600080fd5b505af1158015610fcf573d6000803e3d6000fd5b50505050602160009054906101000a90046001600160a01b03166001600160a01b03166340884c526040518163ffffffff1660e01b8152600401600060405180830381865afa158015611026573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261104e91908101906115a7565b915061105d825160021461114d565b602154604051633bf84b0160e01b8152600481018390526000916001600160a01b031690633bf84b0190602401602060405180830381865afa1580156110a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cb91906117b0565b602c549091506110e8906001600160a01b0380841691161461114d565b505050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610413576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f5575050505050905090565b806105f9577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516111b19060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16105f9737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156112b75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611256929160200161173a565b60408051601f19818403018152908290526112709161176b565b6000604051808303816000865af19150503d80600081146112ad576040519150601f19603f3d011682016040523d82523d6000602084013e6112b2565b606091505b505050505b6000805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b818110156113095783516001600160a01b0316835292840192918401916001016112e4565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156113b957898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156113a45783516001600160e01b0319168252928b019260019290920191908b019061137a565b50978a0197955050509187019160010161133d565b50919998505050505050505050565b60005b838110156113e35781810151838201526020016113cb565b50506000910152565b600081518084526114048160208601602086016113c8565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561146d57603f1988860301845261145b8583516113ec565b9450928501929085019060010161143f565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114b9576114b961147a565b604052919050565b6000602082840312156114d357600080fd5b815167ffffffffffffffff808211156114eb57600080fd5b818401915084601f8301126114ff57600080fd5b8151818111156115115761151161147a565b611524601f8201601f1916602001611490565b915080825285602082850101111561153b57600080fd5b61154c8160208401602086016113c8565b50949350505050565b60408152600061156860408301856113ec565b90508260208301529392505050565b60006020828403121561158957600080fd5b5051919050565b80516001600160a01b0381168114610e3957600080fd5b600060208083850312156115ba57600080fd5b825167ffffffffffffffff808211156115d257600080fd5b818501915085601f8301126115e657600080fd5b8151818111156115f8576115f861147a565b8060051b9150611609848301611490565b818152918301840191848101908884111561162357600080fd5b938501935b838510156116485761163985611590565b82529385019390850190611628565b98975050505050505050565b600181811c9082168061166857607f821691505b60208210810361168857634e487b7160e01b600052602260045260246000fd5b50919050565b600060208083526000845481600182811c9150808316806116b057607f831692505b85831081036116cd57634e487b7160e01b85526022600452602485fd5b8786018381526020018180156116ea57600181146117005761172b565b60ff198616825284151560051b8201965061172b565b60008b81526020902060005b868110156117255781548482015290850190890161170c565b83019750505b50949998505050505050505050565b6001600160e01b031983168152815160009061175d8160048501602087016113c8565b919091016004019392505050565b6000825161177d8184602087016113c8565b9190910192915050565b60006020828403121561179957600080fd5b815180151581146117a957600080fd5b9392505050565b6000602082840312156117c257600080fd5b6117a98261159056fea2646970667358221220fb378fc1ad7daccb2ca5db92bb53778df1e048784a743b7a62d9e658b229ea1964736f6c63430008130033",
    "sourceMap": "157:1540:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1822:302:64;;;:::i;:::-;;2161:134:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;732:355:66;;;:::i;2930:133:26:-;;;:::i;2631:141::-;;;:::i;1093:325:66:-;;;:::i;2447:178:26:-;;;:::i;:::-;;;;;;;:::i;1424:268:66:-;;;:::i;2301:140:26:-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:20:-;;;:::i;:::-;;;3919:14:69;;3912:22;3894:41;;3882:2;3867:18;1819:584:20;3754:187:69;206:520:66;;;:::i;2013:142:26:-;;;:::i;1572:26:20:-;;;;;;;;;1822:302:64;1946:21;;-1:-1:-1;;;1946:21:64;;4148:2:69;1946:21:64;;;4130::69;4187:1;4167:18;;;4160:29;-1:-1:-1;;;4205:18:69;;;4198:38;1932:13:64;;;;;;1946:9;;4253:18:69;;1946:21:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1946:21:64;;;;;;;;;;;;:::i;:::-;1969:8;1932:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1922:7;:56;2012:21;;-1:-1:-1;;;2012:21:64;;4148:2:69;2012:21:64;;;4130::69;4187:1;4167:18;;;4160:29;-1:-1:-1;;;4205:18:69;;;4198:38;1998:13:64;;;;;;2012:9;;4253:18:69;;2012:21:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2012:21:64;;;;;;;;;;;;:::i;:::-;2035:8;1998:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1988:7;:56;1822:302::o;2161:134:26:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:26;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;732:355:66:-;829:3;;:16;;;-1:-1:-1;;;829:16:66;;;;802:24;;-1:-1:-1;;;;;829:3:66;;:14;;:16;;;;;802:24;;829:16;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:16:66;;;;;;;;;;;;:::i;:::-;802:43;;855:31;866:7;:14;884:1;866:19;855:10;:31::i;:::-;923:8;;914:18;;-1:-1:-1;;;914:18:66;;-1:-1:-1;;;;;923:8:66;;;914:18;;;7522:51:69;914:8:66;;;;7495:18:69;;914::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;942:3:66;;967:8;;942:35;;-1:-1:-1;;;942:35:66;;-1:-1:-1;;;;;967:8:66;;;942:35;;;7522:51:69;942:3:66;;;-1:-1:-1;942:16:66;;-1:-1:-1;7495:18:69;;942:35:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:3;;;;;;;;;-1:-1:-1;;;;;1023:3:66;-1:-1:-1;;;;;1023:14:66;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1023:16:66;;;;;;;;;;;;:::i;:::-;1013:26;;1049:31;1060:7;:14;1078:1;1060:19;1049:10;:31::i;:::-;768:319;732:355::o;2930:133:26:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:26;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:26;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;1093:325:66:-;1196:3;;:16;;;-1:-1:-1;;;1196:16:66;;;;1169:24;;-1:-1:-1;;;;;1196:3:66;;:14;;:16;;;;;1169:24;;1196:16;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1196:16:66;;;;;;;;;;;;:::i;:::-;1169:43;;1222:31;1233:7;:14;1251:1;1233:19;1222:10;:31::i;:::-;1325:8;;1308:26;;7733:2:69;7729:15;;;;-1:-1:-1;;7729:15:69;1308:26:66;;;7713:66:69;1281:14:66;;7795:12:69;;1308:26:66;;;-1:-1:-1;;1308:26:66;;;;;;;;;;1298:37;;1308:26;1298:37;;;;-1:-1:-1;;;1345:25:66;;1298:37;-1:-1:-1;1345:15:66;;;;:25;;1361:8;;1345:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1380:3:66;;1394:8;;1380:31;;-1:-1:-1;;;1380:31:66;;-1:-1:-1;;;;;1394:8:66;;;1380:31;;;9729:51:69;9796:18;;;9789:34;;;1380:3:66;;;-1:-1:-1;1380:13:66;;-1:-1:-1;9702:18:69;;1380:31:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:283;;1093:325::o;2447:178:26:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;1424:268:66:-;1530:3;;:16;;;-1:-1:-1;;;1530:16:66;;;;1503:24;;-1:-1:-1;;;;;1530:3:66;;:14;;:16;;;;;1503:24;;1530:16;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1530:16:66;;;;;;;;;;;;:::i;:::-;1503:43;;1556:31;1567:7;:14;1585:1;1567:19;1556:10;:31::i;:::-;1615:25;;-1:-1:-1;;;1615:25:66;;:15;;;;:25;;1631:8;;1615:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1650:3:66;;1675:8;;1650:35;;-1:-1:-1;;;1650:35:66;;-1:-1:-1;;;;;1675:8:66;;;1650:35;;;7522:51:69;1650:3:66;;;-1:-1:-1;1650:16:66;;-1:-1:-1;7495:18:69;;1650:35:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:223;1424:268::o;2301:140:26:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:20;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:20;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;9729:51:69;;;-1:-1:-1;;;9796:18:69;;;9789:34;2196:43:20;;;;;;;;;9702:18:69;;;2196:43:20;;;-1:-1:-1;;1671:64:20;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:20;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:20:o;206:520:66:-;300:3;;:16;;;-1:-1:-1;;;300:16:66;;;;273:24;;-1:-1:-1;;;;;300:3:66;;:14;;:16;;;;;273:24;;300:16;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;300:16:66;;;;;;;;;;;;:::i;:::-;273:43;;326:31;337:7;:14;355:1;337:19;326:10;:31::i;:::-;429:8;;412:26;;7733:2:69;7729:15;;;;-1:-1:-1;;7729:15:69;412:26:66;;;7713:66:69;385:14:66;;7795:12:69;;412:26:66;;;;;;-1:-1:-1;;412:26:66;;;;;;;402:37;;412:26;402:37;;;;458:8;;-1:-1:-1;;;449:18:66;;-1:-1:-1;;;;;458:8:66;449:18;;;7522:51:69;402:37:66;-1:-1:-1;449:8:66;;;;7495:18:69;;449::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;477:3:66;;491:8;;477:31;;-1:-1:-1;;;477:31:66;;-1:-1:-1;;;;;491:8:66;;;477:31;;;9729:51:69;9796:18;;;9789:34;;;477:3:66;;;-1:-1:-1;477:13:66;;-1:-1:-1;9702:18:69;;477:31:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:3;;;;;;;;;-1:-1:-1;;;;;554:3:66;-1:-1:-1;;;;;554:14:66;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;554:16:66;;;;;;;;;;;;:::i;:::-;544:26;;580:31;591:7;:14;609:1;591:19;580:10;:31::i;:::-;643:3;;:32;;-1:-1:-1;;;643:32:66;;;;;10943:25:69;;;622:18:66;;-1:-1:-1;;;;;643:3:66;;:24;;10916:18:69;;643:32:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;710:8;;622:53;;-1:-1:-1;685:34:66;;-1:-1:-1;;;;;696:22:66;;;710:8;;696:22;685:10;:34::i;:::-;239:487;;;206:520::o;2013:142:26:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:26;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;3262:157:20:-;3322:9;3317:96;;3352:30;;;;;11394:2:69;11376:21;;;11433:2;11413:18;;;11406:30;11472:25;11467:2;11452:18;;11445:53;11530:2;11515:18;;11192:347;3352:30:20;;;;;;;;3396:6;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;11746:51:69;;;-1:-1:-1;;;11813:18:69;;;11806:34;;;;2712:4:20;11856:18:69;;;11849:34;2489:11:20;;1671:64;2586:43;;11719:18:69;;2652:67:20;;;-1:-1:-1;;2652:67:20;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:20;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:20;2820:7;:14;;-1:-1:-1;;2820:14:20;;;;;2409:432::o;180:658:69:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:195;631:6;628:1;625:13;617:195;;;696:13;;-1:-1:-1;;;;;692:39:69;680:52;;787:15;;;;752:12;;;;728:1;646:9;617:195;;;-1:-1:-1;829:3:69;;180:658;-1:-1:-1;;;;;;180:658:69:o;843:1567::-;1045:4;1074:2;1114;1103:9;1099:18;1144:2;1133:9;1126:21;1167:6;1202;1196:13;1233:6;1225;1218:22;1259:2;1249:12;;1292:2;1281:9;1277:18;1270:25;;1354:2;1344:6;1341:1;1337:14;1326:9;1322:30;1318:39;1392:2;1384:6;1380:15;1413:1;1434;1444:937;1460:6;1455:3;1452:15;1444:937;;;1529:22;;;-1:-1:-1;;1525:36:69;1513:49;;1585:13;;1672:9;;-1:-1:-1;;;;;1668:35:69;1653:51;;1743:11;;1737:18;1775:15;;;1768:27;;;1856:19;;1625:15;;;1888:24;;;1978:21;;;;2023:1;;1946:2;1934:15;;;2037:236;2053:8;2048:3;2045:17;2037:236;;;2134:15;;-1:-1:-1;;;;;;2130:42:69;2116:57;;2242:17;;;;2081:1;2072:11;;;;;2199:14;;;;2037:236;;;-1:-1:-1;2359:12:69;;;;2296:5;-1:-1:-1;;;2324:15:69;;;;1486:1;1477:11;1444:937;;;-1:-1:-1;2398:6:69;;843:1567;-1:-1:-1;;;;;;;;;843:1567:69:o;2415:250::-;2500:1;2510:113;2524:6;2521:1;2518:13;2510:113;;;2600:11;;;2594:18;2581:11;;;2574:39;2546:2;2539:10;2510:113;;;-1:-1:-1;;2657:1:69;2639:16;;2632:27;2415:250::o;2670:271::-;2712:3;2750:5;2744:12;2777:6;2772:3;2765:19;2793:76;2862:6;2855:4;2850:3;2846:14;2839:4;2832:5;2828:16;2793:76;:::i;:::-;2923:2;2902:15;-1:-1:-1;;2898:29:69;2889:39;;;;2930:4;2885:50;;2670:271;-1:-1:-1;;2670:271:69:o;2946:803::-;3108:4;3137:2;3177;3166:9;3162:18;3207:2;3196:9;3189:21;3230:6;3265;3259:13;3296:6;3288;3281:22;3334:2;3323:9;3319:18;3312:25;;3396:2;3386:6;3383:1;3379:14;3368:9;3364:30;3360:39;3346:53;;3434:2;3426:6;3422:15;3455:1;3465:255;3479:6;3476:1;3473:13;3465:255;;;3572:2;3568:7;3556:9;3548:6;3544:22;3540:36;3535:3;3528:49;3600:40;3633:6;3624;3618:13;3600:40;:::i;:::-;3590:50;-1:-1:-1;3698:12:69;;;;3663:15;;;;3501:1;3494:9;3465:255;;;-1:-1:-1;3737:6:69;;2946:803;-1:-1:-1;;;;;;;2946:803:69:o;4282:127::-;4343:10;4338:3;4334:20;4331:1;4324:31;4374:4;4371:1;4364:15;4398:4;4395:1;4388:15;4414:275;4485:2;4479:9;4550:2;4531:13;;-1:-1:-1;;4527:27:69;4515:40;;4585:18;4570:34;;4606:22;;;4567:62;4564:88;;;4632:18;;:::i;:::-;4668:2;4661:22;4414:275;;-1:-1:-1;4414:275:69:o;4694:719::-;4774:6;4827:2;4815:9;4806:7;4802:23;4798:32;4795:52;;;4843:1;4840;4833:12;4795:52;4876:9;4870:16;4905:18;4946:2;4938:6;4935:14;4932:34;;;4962:1;4959;4952:12;4932:34;5000:6;4989:9;4985:22;4975:32;;5045:7;5038:4;5034:2;5030:13;5026:27;5016:55;;5067:1;5064;5057:12;5016:55;5096:2;5090:9;5118:2;5114;5111:10;5108:36;;;5124:18;;:::i;:::-;5166:53;5209:2;5190:13;;-1:-1:-1;;5186:27:69;5215:2;5182:36;5166:53;:::i;:::-;5153:66;;5242:2;5235:5;5228:17;5282:7;5277:2;5272;5268;5264:11;5260:20;5257:33;5254:53;;;5303:1;5300;5293:12;5254:53;5316:67;5380:2;5375;5368:5;5364:14;5359:2;5355;5351:11;5316:67;:::i;:::-;-1:-1:-1;5402:5:69;4694:719;-1:-1:-1;;;;4694:719:69:o;5418:306::-;5610:2;5599:9;5592:21;5573:4;5630:45;5671:2;5660:9;5656:18;5648:6;5630:45;:::i;:::-;5622:53;;5711:6;5706:2;5695:9;5691:18;5684:34;5418:306;;;;;:::o;5729:184::-;5799:6;5852:2;5840:9;5831:7;5827:23;5823:32;5820:52;;;5868:1;5865;5858:12;5820:52;-1:-1:-1;5891:16:69;;5729:184;-1:-1:-1;5729:184:69:o;6229:177::-;6308:13;;-1:-1:-1;;;;;6350:31:69;;6340:42;;6330:70;;6396:1;6393;6386:12;6411:960;6506:6;6537:2;6580;6568:9;6559:7;6555:23;6551:32;6548:52;;;6596:1;6593;6586:12;6548:52;6629:9;6623:16;6658:18;6699:2;6691:6;6688:14;6685:34;;;6715:1;6712;6705:12;6685:34;6753:6;6742:9;6738:22;6728:32;;6798:7;6791:4;6787:2;6783:13;6779:27;6769:55;;6820:1;6817;6810:12;6769:55;6849:2;6843:9;6871:2;6867;6864:10;6861:36;;;6877:18;;:::i;:::-;6923:2;6920:1;6916:10;6906:20;;6946:28;6970:2;6966;6962:11;6946:28;:::i;:::-;7008:15;;;7078:11;;;7074:20;;;7039:12;;;;7106:19;;;7103:39;;;7138:1;7135;7128:12;7103:39;7162:11;;;;7182:159;7198:6;7193:3;7190:15;7182:159;;;7264:34;7294:3;7264:34;:::i;:::-;7252:47;;7215:12;;;;7319;;;;7182:159;;;7360:5;6411:960;-1:-1:-1;;;;;;;;6411:960:69:o;7818:380::-;7897:1;7893:12;;;;7940;;;7961:61;;8015:4;8007:6;8003:17;7993:27;;7961:61;8068:2;8060:6;8057:14;8037:18;8034:38;8031:161;;8114:10;8109:3;8105:20;8102:1;8095:31;8149:4;8146:1;8139:15;8177:4;8174:1;8167:15;8031:161;;7818:380;;;:::o;8328:1222::-;8435:4;8464:2;8493;8482:9;8475:21;8516:1;8549:6;8543:13;8579:3;8601:1;8629:9;8625:2;8621:18;8611:28;;8689:2;8678:9;8674:18;8711;8701:61;;8755:4;8747:6;8743:17;8733:27;;8701:61;8808:2;8800:6;8797:14;8777:18;8774:38;8771:165;;-1:-1:-1;;;8835:33:69;;8891:4;8888:1;8881:15;8921:4;8842:3;8909:17;8771:165;9003:18;;;112:19;;;164:4;155:14;9046:18;9073:128;;;;9215:1;9210:314;;;;9039:485;;9073:128;-1:-1:-1;;9106:24:69;;9094:37;;9174:14;;9167:22;9164:1;9160:30;9151:40;;;-1:-1:-1;9073:128:69;;9210:314;8275:1;8268:14;;;8312:4;8299:18;;9304:1;9318:165;9332:6;9329:1;9326:13;9318:165;;;9410:14;;9397:11;;;9390:35;9453:16;;;;9347:10;;9318:165;;;9503:11;;;-1:-1:-1;;9039:485:69;-1:-1:-1;9541:3:69;;8328:1222;-1:-1:-1;;;;;;;;;8328:1222:69:o;9834:384::-;-1:-1:-1;;;;;;10019:33:69;;10007:46;;10076:13;;9989:3;;10098:74;10076:13;10161:1;10152:11;;10145:4;10133:17;;10098:74;:::i;:::-;10192:16;;;;10210:1;10188:24;;9834:384;-1:-1:-1;;;9834:384:69:o;10223:287::-;10352:3;10390:6;10384:13;10406:66;10465:6;10460:3;10453:4;10445:6;10441:17;10406:66;:::i;:::-;10488:16;;;;;10223:287;-1:-1:-1;;10223:287:69:o;10515:277::-;10582:6;10635:2;10623:9;10614:7;10610:23;10606:32;10603:52;;;10651:1;10648;10641:12;10603:52;10683:9;10677:16;10736:5;10729:13;10722:21;10715:5;10712:32;10702:60;;10758:1;10755;10748:12;10702:60;10781:5;10515:277;-1:-1:-1;;;10515:277:69:o;10979:208::-;11049:6;11102:2;11090:9;11081:7;11077:23;11073:32;11070:52;;;11118:1;11115;11108:12;11070:52;11141:40;11171:9;11141:40;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_addOracle()": "d60b819b",
    "test_addOracle_notOwner()": "4c7c495b",
    "test_removeOracle()": "34f7582a",
    "test_removeOracle_notOwner()": "6db3fb21"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_addOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_addOracle_notOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_removeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_removeOracle_notOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/ozCutFacetV2.t.sol\":\"ozCutFacetV2Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/test/=lib/unchecked-counter/lib/prb-test/src/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/unchecked-counter/lib/prb-test/src/\",\":solmate/=node_modules/solmate/\",\":src/=lib/unchecked-counter/src/\",\":unchecked-counter/=lib/unchecked-counter/src/\"]},\"sources\":{\"Errors.sol\":{\"keccak256\":\"0x4d54060072c9be49a915c0d55254a13a9086876e9f6d46b8386c4b1a769f5d21\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1a2ebfe590098ea6341bfd4315ca407bb4096021ee74d9dc2f72d9e8350b7ec\",\"dweb:/ipfs/QmWnnKWGBqWmRZxp2mYcWwFqH58ZfyeZFZ1JEji4ofNYpL\"]},\"contracts/AppStorage.sol\":{\"keccak256\":\"0x1d01e8211092b3e102f6247d710bdc93d56f2ce604a3652c88e9efb372d5b092\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e52d470e3263148fbebb0452bf2372696e685bcc0fcf4693f11fc8222937549e\",\"dweb:/ipfs/QmZ3EXMbatJ1yGSdT7a8d5azedM8TuLFeGiuNMS2dd3pqY\"]},\"contracts/EnergyETH.sol\":{\"keccak256\":\"0x8860d30ee8effbfde1841f5a1c9f49d0b52dee9f2ee5151e7612b24f58ca71d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://29ebf8d79af27669f1ddfdade3103a19a895a0be2505000cc72e0a5239f85774\",\"dweb:/ipfs/QmcP3fztfkTYYVrBBSPCufMtoPdtp9KdX5jrGEXWDzzB2P\"]},\"contracts/InitUpgradeV2.sol\":{\"keccak256\":\"0x50665467b9876cfd8a3a79aae8ddfccc08ba1566251daf1b5f2bc0c13ead3acb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://38e0a16de66a60e237d8b6fa53846eec4ed80cb278a8fcdf313b3ebed24bc6ca\",\"dweb:/ipfs/QmYHwtvYdWMpfQass3Vv2xmtZ1DzgvwsCVE2gp368JkYcT\"]},\"contracts/facets/ozCutFacetV2.sol\":{\"keccak256\":\"0x5060fc49720f42e32e88df871a1fd661ce67bc73abc7a5f1e88d546070e5617a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6808ab4746568a07ed0613a85ef0b57db407818f3face8502567626aa6638f6e\",\"dweb:/ipfs/QmX812XJQF75NXBMt56GxrSBZHq7Wo4YrbUtXFjcPDRZW9\"]},\"contracts/facets/ozExecutor2Facet.sol\":{\"keccak256\":\"0x17a72d66553314d4f257767a6eca7060403bd3773e057837b4afc992d7963483\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1046daf4704f2de46cba64f01c064337ad1f9e083ca384f7e57e387dbe9ba9d5\",\"dweb:/ipfs/QmT6En5U11LdcBrZA8H5fHjZSYRbhgFSRsDdyMHNM3ASCG\"]},\"contracts/facets/ozLoupeV2Facet.sol\":{\"keccak256\":\"0x594c123a0582ecf74915f6bb0216cd06b452782012b8c574603f8b29f64af0c9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://621257f9ec1dad42e189f9531794df041b13b2f20a5a97515015ae0a796f6449\",\"dweb:/ipfs/QmWJS7B12nkXfBDshiWnk5akFvs5a2zexWCeZNfkrwghM9\"]},\"contracts/facets/ozOracleFacet.sol\":{\"keccak256\":\"0xcfc70647fcfb4ff1daff572766b6512a760a8f3931f5947a5d0dfda75b6ea321\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://48144b7b4b94000e0d020a9a31302fa604bd1b7a1a400d992fda1be9e86cc693\",\"dweb:/ipfs/QmRvSpqyMWJ3AmDDr1BUkrBQbsLjrzGnQpPGDuUfdviN4a\"]},\"contracts/testing-files/DummyUniPool.sol\":{\"keccak256\":\"0x872ee12e86e8ae8f85eb954fb4bd0096c6af1164caf6bf38b3c7a0c58b2f2099\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6e302fcda72c4ad96bcd3e44e890965672b473230afd00934f6f63931d888abf\",\"dweb:/ipfs/QmTZJdYqBH4ou6iLwBDG5GcB1Nf9kmA5pqxgb6j4DzGPoY\"]},\"contracts/testing-files/EthFeed.sol\":{\"keccak256\":\"0xfae94447bf0a7060d524d89b7098563499a09eb64d4dfe81a53f6bc3eca4e5ba\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9df450219926b96a41df7e1f5b7e5c0f1a1bae592f8a0919e4a543667c5a9fa2\",\"dweb:/ipfs/QmXPMnCVvXDUX2TUp3Z5StrRj6ajXacpZkSMmsD4rR5Mf6\"]},\"contracts/testing-files/GoldFeed.sol\":{\"keccak256\":\"0xbbb7eb9f3a7464f7db594dc9a83b58f2da37f331efb6c66499b6cfa0061c36cf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f06b3d9350c1d29feb47847c1bb2a3a7c231b474a088f90aad114075a5e8ce3\",\"dweb:/ipfs/QmcVx7XU9SGPA47NCpvTwSKnX42USg8BFAFausTwq183Cc\"]},\"contracts/testing-files/WtiFeed.sol\":{\"keccak256\":\"0xfadb1ac2ee11deb3476d4981d9db84e00bcd0f68e75d47280eb66dbef6b8a8d8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6d8a6cb0228301adaaf131ad375536c55777d9011dd59d0b36f0fe1ee31360d4\",\"dweb:/ipfs/QmTHGW6rMAFi8QLEF2hy5DkLbJgsB6i6P88c2L5DKU2QW6\"]},\"interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119d9a5acd99b9462a8341c9b95ddd468648799eefa47038f81521431743c1ae\",\"dweb:/ipfs/QmTF7WNyPWTUtUzNcpq5rf5v2uw5TwzqsSg9D53pfQufcu\"]},\"interfaces/IPermit2.sol\":{\"keccak256\":\"0x9ab81ce4f763de93e8b6a6cd92825bcd623100fab4ecd3fa7cbc92745fd42cad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7d2f46be31c7e4c1850ab702d6614cc542ce86e78fa3569a0bd1954ea342aeb\",\"dweb:/ipfs/QmdXYebMsaSFKUpqkYxB8j6HNexjumE5QMxbRRgFZFEmjS\"]},\"interfaces/ITri.sol\":{\"keccak256\":\"0xd1d396aaff8a2356d4614974aa6575b9f7025a0ca192d6b2a3d2ce829e1df9ac\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9ed7118d2c78d6226b6fd2d11b578ef9631f09a92fc6c2a2d33de6303b186c00\",\"dweb:/ipfs/QmQiGDYTpki3PkqaUpFcAR4oiw8W6cCdvUNVgeY5H27yjK\"]},\"interfaces/IYtri.sol\":{\"keccak256\":\"0x209100b6ef0683ac98a57eab84d233804780632359cf059b96b677332262ca94\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://84f19c36a83e1e54e46d22605bc30a5a3c46bc46ec1354738a0b7b4e86cdc90d\",\"dweb:/ipfs/QmVw1dYEuu5zbf5bbTPY52o9PU3gxS8DG466n8XLKVgQmh\"]},\"interfaces/ozIDiamond.sol\":{\"keccak256\":\"0x4e5f411b2eaf7612b1e7d298233c863f8d47742a0170c11e2968ec5f133471ef\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ea6253a294e0a11a50d3abe9ba732b8782e8a8ee86aebb3bd5f94f9e22c8112f\",\"dweb:/ipfs/QmbDavUWwQoiv5v81gLESV51rpiMYAqfhE7g5c1j5Ser9D\"]},\"interfaces/ozIExecutorFacet.sol\":{\"keccak256\":\"0x35458269a1ab4438421054c440e608b4f66e7e51c46b080223648c65cab00b1b\",\"urls\":[\"bzz-raw://a9e68712d5f825866cd169cd68516dde17e174ba39d89cbe7bc34e9663169414\",\"dweb:/ipfs/QmVQp2x7Cq1ydxXi1wP7L8mnnkzSQ2bD1w2PtKKUFwGFL6\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5\",\"dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10\",\"dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/unchecked-counter/src/UC.sol\":{\"keccak256\":\"0xbc1a5f62265ddbc9f9a2604898b39f51a6a67b8a805dff49c677f39f372e2713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba5db66c8d3e329adc64151076ceed09ddf87f8ed13a11cc9f5b59ce1f07bb6a\",\"dweb:/ipfs/QmZtk54Y2ks6MnTukDt1HhmtALFAXeagKi3DpYwd1qatML\"]},\"libraries/LibCommon.sol\":{\"keccak256\":\"0x88e8b0f93d0e11cffe643750863f12b0f57508a79f611d3aef89cc7431704f41\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://dfccd4d3f89e2d64c4c39b1209eee88f21427bb6222451a74891adf81246aacc\",\"dweb:/ipfs/QmYrfDZYU9q5oHAoT82gAZMoxVWiaidpBjgfCPWdev2kN3\"]},\"libraries/LibDiamond.sol\":{\"keccak256\":\"0xfeaaa98addf77e7d9f71719f2834f8799a569aa8270404226aea2cb8344ec3ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31f564343b7f4fa9ad5bbe99251bd345ea0510e9f8c07f0f415ea60ffc1311ad\",\"dweb:/ipfs/QmUnk8MxoZAi4mvXVyEMbzvd9A74YUuPAmRvRSpJyhiFSA\"]},\"libraries/LibHelpers.sol\":{\"keccak256\":\"0xd1e3d96a0b39bf07b757d84882d6f0ade80d964ae5be99c378bca252d128a54e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77313d1e494c046a03e1401db00c621fecf5f85b427355288787d7de67be82aa\",\"dweb:/ipfs/QmRYixMW22ikSKCkdqtWV3hgZVpSD1kJpXUHTYxr3ed94f\"]},\"libraries/LibPermit2.sol\":{\"keccak256\":\"0xcd292910e6a8def4d329ae651521cb4538e516c6210a049b93a3e30be6a38155\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b715d4a75bcd3f1c94d8f15bb7be814df5ed3bf3e2832a07442e7e178f7a6f0a\",\"dweb:/ipfs/QmYLipjCDdjHbftpQYoXWBXLgL3pBCBDU3cxyahY6cXVTq\"]},\"libraries/oracle/FullMath.sol\":{\"keccak256\":\"0x7faf2a28bf7e7ba751ed9bc3f6f20a0b393083e5d5a009f8f9e8274d72f70cbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://290b4be31aa2523b06e9cdbeb5251a1382582b460315b928fd491d5b45c3bdae\",\"dweb:/ipfs/QmbLiLzGAzxTay25fkhNQZWCkE42TPpzt377ND8rx7zUbp\"]},\"libraries/oracle/OracleLibrary.sol\":{\"keccak256\":\"0xf58009c0eacca1a51ce8b50c1659e331cdb76a11feacc28979e1412a3a435d0f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4d072c69f799d614dc3394180ffe991756aff4109566647b0a35182e3120cd21\",\"dweb:/ipfs/Qme5hrYycY3TGqNjVKEmH9p7aaWeNKv1QDu4g6DawRaUkt\"]},\"libraries/oracle/TickMath.sol\":{\"keccak256\":\"0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97\",\"dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2\"]},\"node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x96ab2a92fbac88a704270b039691afb363c5a1ef1170fb0c955043e4da84b987\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://863c000efee45cb4abc204d77ff04a43fc3268f3524ff8a5e96b43b1a1658f5b\",\"dweb:/ipfs/QmVgN2VivBwgxv8gKKZuGQw4YfQRvpgYbfvuRzKTfMgFWi\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"node_modules/@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"test/foundry/Setup.sol\":{\"keccak256\":\"0x6a9d90872eace0d63dc6e6fd0db6d7016fdeb14766289da655c61712fe8d087f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f76f80ede8d4c3a9cd3236eeead173d7e8ccf77a7ec5efc5245f242bd8980ac6\",\"dweb:/ipfs/QmQdLpvMw5jinuqBAQoMcN4eqY8A1PpPBBAGAwg2J7oHZA\"]},\"test/foundry/dummy-files/NewOracle.sol\":{\"keccak256\":\"0x6dddc9eddd9301100ec019441466beefb0c8b3a4612009bf8bf2c7a210774b5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f99d5fb485854eded751827c10d3064c66f58c9c253d163d4b1d5ce55c7a3f99\",\"dweb:/ipfs/QmWAELWQ74wfQ9qngdtmXE4w8DMRCLnnYp5FHeRz2tTN3C\"]},\"test/foundry/ozCutFacetV2.t.sol\":{\"keccak256\":\"0x3911a7e4140ea67c94b7f5ecc576d0ff9acc314743bf0a37aecd90b5d799c277\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://26b646fdd0be1bfb8e23707ab840aee716abf3371c0fcf22c0bf86d37d8b7b21\",\"dweb:/ipfs/QmPpvJNYS41goox2eqHM35aBrwSjWJYfS8X84hktMqcWqH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_addOracle"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_addOracle_notOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_removeOracle"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_removeOracle_notOwner"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@prb/test/=lib/unchecked-counter/lib/prb-test/src/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":prb-test/=lib/unchecked-counter/lib/prb-test/src/",
        ":solmate/=node_modules/solmate/",
        ":src/=lib/unchecked-counter/src/",
        ":unchecked-counter/=lib/unchecked-counter/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/ozCutFacetV2.t.sol": "ozCutFacetV2Test"
      },
      "libraries": {}
    },
    "sources": {
      "Errors.sol": {
        "keccak256": "0x4d54060072c9be49a915c0d55254a13a9086876e9f6d46b8386c4b1a769f5d21",
        "urls": [
          "bzz-raw://a1a2ebfe590098ea6341bfd4315ca407bb4096021ee74d9dc2f72d9e8350b7ec",
          "dweb:/ipfs/QmWnnKWGBqWmRZxp2mYcWwFqH58ZfyeZFZ1JEji4ofNYpL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/AppStorage.sol": {
        "keccak256": "0x1d01e8211092b3e102f6247d710bdc93d56f2ce604a3652c88e9efb372d5b092",
        "urls": [
          "bzz-raw://e52d470e3263148fbebb0452bf2372696e685bcc0fcf4693f11fc8222937549e",
          "dweb:/ipfs/QmZ3EXMbatJ1yGSdT7a8d5azedM8TuLFeGiuNMS2dd3pqY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/EnergyETH.sol": {
        "keccak256": "0x8860d30ee8effbfde1841f5a1c9f49d0b52dee9f2ee5151e7612b24f58ca71d2",
        "urls": [
          "bzz-raw://29ebf8d79af27669f1ddfdade3103a19a895a0be2505000cc72e0a5239f85774",
          "dweb:/ipfs/QmcP3fztfkTYYVrBBSPCufMtoPdtp9KdX5jrGEXWDzzB2P"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/InitUpgradeV2.sol": {
        "keccak256": "0x50665467b9876cfd8a3a79aae8ddfccc08ba1566251daf1b5f2bc0c13ead3acb",
        "urls": [
          "bzz-raw://38e0a16de66a60e237d8b6fa53846eec4ed80cb278a8fcdf313b3ebed24bc6ca",
          "dweb:/ipfs/QmYHwtvYdWMpfQass3Vv2xmtZ1DzgvwsCVE2gp368JkYcT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozCutFacetV2.sol": {
        "keccak256": "0x5060fc49720f42e32e88df871a1fd661ce67bc73abc7a5f1e88d546070e5617a",
        "urls": [
          "bzz-raw://6808ab4746568a07ed0613a85ef0b57db407818f3face8502567626aa6638f6e",
          "dweb:/ipfs/QmX812XJQF75NXBMt56GxrSBZHq7Wo4YrbUtXFjcPDRZW9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozExecutor2Facet.sol": {
        "keccak256": "0x17a72d66553314d4f257767a6eca7060403bd3773e057837b4afc992d7963483",
        "urls": [
          "bzz-raw://1046daf4704f2de46cba64f01c064337ad1f9e083ca384f7e57e387dbe9ba9d5",
          "dweb:/ipfs/QmT6En5U11LdcBrZA8H5fHjZSYRbhgFSRsDdyMHNM3ASCG"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozLoupeV2Facet.sol": {
        "keccak256": "0x594c123a0582ecf74915f6bb0216cd06b452782012b8c574603f8b29f64af0c9",
        "urls": [
          "bzz-raw://621257f9ec1dad42e189f9531794df041b13b2f20a5a97515015ae0a796f6449",
          "dweb:/ipfs/QmWJS7B12nkXfBDshiWnk5akFvs5a2zexWCeZNfkrwghM9"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/facets/ozOracleFacet.sol": {
        "keccak256": "0xcfc70647fcfb4ff1daff572766b6512a760a8f3931f5947a5d0dfda75b6ea321",
        "urls": [
          "bzz-raw://48144b7b4b94000e0d020a9a31302fa604bd1b7a1a400d992fda1be9e86cc693",
          "dweb:/ipfs/QmRvSpqyMWJ3AmDDr1BUkrBQbsLjrzGnQpPGDuUfdviN4a"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/testing-files/DummyUniPool.sol": {
        "keccak256": "0x872ee12e86e8ae8f85eb954fb4bd0096c6af1164caf6bf38b3c7a0c58b2f2099",
        "urls": [
          "bzz-raw://6e302fcda72c4ad96bcd3e44e890965672b473230afd00934f6f63931d888abf",
          "dweb:/ipfs/QmTZJdYqBH4ou6iLwBDG5GcB1Nf9kmA5pqxgb6j4DzGPoY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/testing-files/EthFeed.sol": {
        "keccak256": "0xfae94447bf0a7060d524d89b7098563499a09eb64d4dfe81a53f6bc3eca4e5ba",
        "urls": [
          "bzz-raw://9df450219926b96a41df7e1f5b7e5c0f1a1bae592f8a0919e4a543667c5a9fa2",
          "dweb:/ipfs/QmXPMnCVvXDUX2TUp3Z5StrRj6ajXacpZkSMmsD4rR5Mf6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/testing-files/GoldFeed.sol": {
        "keccak256": "0xbbb7eb9f3a7464f7db594dc9a83b58f2da37f331efb6c66499b6cfa0061c36cf",
        "urls": [
          "bzz-raw://1f06b3d9350c1d29feb47847c1bb2a3a7c231b474a088f90aad114075a5e8ce3",
          "dweb:/ipfs/QmcVx7XU9SGPA47NCpvTwSKnX42USg8BFAFausTwq183Cc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/testing-files/WtiFeed.sol": {
        "keccak256": "0xfadb1ac2ee11deb3476d4981d9db84e00bcd0f68e75d47280eb66dbef6b8a8d8",
        "urls": [
          "bzz-raw://6d8a6cb0228301adaaf131ad375536c55777d9011dd59d0b36f0fe1ee31360d4",
          "dweb:/ipfs/QmTHGW6rMAFi8QLEF2hy5DkLbJgsB6i6P88c2L5DKU2QW6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/IDiamondCut.sol": {
        "keccak256": "0xc00c16bfa30a3fa5f3dc684f7f8ba62c259962b25f647d9588739458989717fc",
        "urls": [
          "bzz-raw://119d9a5acd99b9462a8341c9b95ddd468648799eefa47038f81521431743c1ae",
          "dweb:/ipfs/QmTF7WNyPWTUtUzNcpq5rf5v2uw5TwzqsSg9D53pfQufcu"
        ],
        "license": "MIT"
      },
      "interfaces/IPermit2.sol": {
        "keccak256": "0x9ab81ce4f763de93e8b6a6cd92825bcd623100fab4ecd3fa7cbc92745fd42cad",
        "urls": [
          "bzz-raw://e7d2f46be31c7e4c1850ab702d6614cc542ce86e78fa3569a0bd1954ea342aeb",
          "dweb:/ipfs/QmdXYebMsaSFKUpqkYxB8j6HNexjumE5QMxbRRgFZFEmjS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/ITri.sol": {
        "keccak256": "0xd1d396aaff8a2356d4614974aa6575b9f7025a0ca192d6b2a3d2ce829e1df9ac",
        "urls": [
          "bzz-raw://9ed7118d2c78d6226b6fd2d11b578ef9631f09a92fc6c2a2d33de6303b186c00",
          "dweb:/ipfs/QmQiGDYTpki3PkqaUpFcAR4oiw8W6cCdvUNVgeY5H27yjK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/IYtri.sol": {
        "keccak256": "0x209100b6ef0683ac98a57eab84d233804780632359cf059b96b677332262ca94",
        "urls": [
          "bzz-raw://84f19c36a83e1e54e46d22605bc30a5a3c46bc46ec1354738a0b7b4e86cdc90d",
          "dweb:/ipfs/QmVw1dYEuu5zbf5bbTPY52o9PU3gxS8DG466n8XLKVgQmh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/ozIDiamond.sol": {
        "keccak256": "0x4e5f411b2eaf7612b1e7d298233c863f8d47742a0170c11e2968ec5f133471ef",
        "urls": [
          "bzz-raw://ea6253a294e0a11a50d3abe9ba732b8782e8a8ee86aebb3bd5f94f9e22c8112f",
          "dweb:/ipfs/QmbDavUWwQoiv5v81gLESV51rpiMYAqfhE7g5c1j5Ser9D"
        ],
        "license": "GPL-2.0-or-later"
      },
      "interfaces/ozIExecutorFacet.sol": {
        "keccak256": "0x35458269a1ab4438421054c440e608b4f66e7e51c46b080223648c65cab00b1b",
        "urls": [
          "bzz-raw://a9e68712d5f825866cd169cd68516dde17e174ba39d89cbe7bc34e9663169414",
          "dweb:/ipfs/QmVQp2x7Cq1ydxXi1wP7L8mnnkzSQ2bD1w2PtKKUFwGFL6"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa9a389ae870e108986d72d760a792d011516a7091ab48da20a5982f8ae2e2575",
        "urls": [
          "bzz-raw://d6de722b90ec6b39fe65e121db1735234c8a123fd7bee0ed5daa646b0e6e14a5",
          "dweb:/ipfs/QmQfrW7sP3snKdoxtEVWh5CAxApwhBs6uLvDhiJLTza1Lp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203",
        "urls": [
          "bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10",
          "dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/unchecked-counter/src/UC.sol": {
        "keccak256": "0xbc1a5f62265ddbc9f9a2604898b39f51a6a67b8a805dff49c677f39f372e2713",
        "urls": [
          "bzz-raw://ba5db66c8d3e329adc64151076ceed09ddf87f8ed13a11cc9f5b59ce1f07bb6a",
          "dweb:/ipfs/QmZtk54Y2ks6MnTukDt1HhmtALFAXeagKi3DpYwd1qatML"
        ],
        "license": "MIT"
      },
      "libraries/LibCommon.sol": {
        "keccak256": "0x88e8b0f93d0e11cffe643750863f12b0f57508a79f611d3aef89cc7431704f41",
        "urls": [
          "bzz-raw://dfccd4d3f89e2d64c4c39b1209eee88f21427bb6222451a74891adf81246aacc",
          "dweb:/ipfs/QmYrfDZYU9q5oHAoT82gAZMoxVWiaidpBjgfCPWdev2kN3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "libraries/LibDiamond.sol": {
        "keccak256": "0xfeaaa98addf77e7d9f71719f2834f8799a569aa8270404226aea2cb8344ec3ec",
        "urls": [
          "bzz-raw://31f564343b7f4fa9ad5bbe99251bd345ea0510e9f8c07f0f415ea60ffc1311ad",
          "dweb:/ipfs/QmUnk8MxoZAi4mvXVyEMbzvd9A74YUuPAmRvRSpJyhiFSA"
        ],
        "license": "MIT"
      },
      "libraries/LibHelpers.sol": {
        "keccak256": "0xd1e3d96a0b39bf07b757d84882d6f0ade80d964ae5be99c378bca252d128a54e",
        "urls": [
          "bzz-raw://77313d1e494c046a03e1401db00c621fecf5f85b427355288787d7de67be82aa",
          "dweb:/ipfs/QmRYixMW22ikSKCkdqtWV3hgZVpSD1kJpXUHTYxr3ed94f"
        ],
        "license": "GPL-2.0-or-later"
      },
      "libraries/LibPermit2.sol": {
        "keccak256": "0xcd292910e6a8def4d329ae651521cb4538e516c6210a049b93a3e30be6a38155",
        "urls": [
          "bzz-raw://b715d4a75bcd3f1c94d8f15bb7be814df5ed3bf3e2832a07442e7e178f7a6f0a",
          "dweb:/ipfs/QmYLipjCDdjHbftpQYoXWBXLgL3pBCBDU3cxyahY6cXVTq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "libraries/oracle/FullMath.sol": {
        "keccak256": "0x7faf2a28bf7e7ba751ed9bc3f6f20a0b393083e5d5a009f8f9e8274d72f70cbb",
        "urls": [
          "bzz-raw://290b4be31aa2523b06e9cdbeb5251a1382582b460315b928fd491d5b45c3bdae",
          "dweb:/ipfs/QmbLiLzGAzxTay25fkhNQZWCkE42TPpzt377ND8rx7zUbp"
        ],
        "license": "MIT"
      },
      "libraries/oracle/OracleLibrary.sol": {
        "keccak256": "0xf58009c0eacca1a51ce8b50c1659e331cdb76a11feacc28979e1412a3a435d0f",
        "urls": [
          "bzz-raw://4d072c69f799d614dc3394180ffe991756aff4109566647b0a35182e3120cd21",
          "dweb:/ipfs/Qme5hrYycY3TGqNjVKEmH9p7aaWeNKv1QDu4g6DawRaUkt"
        ],
        "license": "GPL-2.0-or-later"
      },
      "libraries/oracle/TickMath.sol": {
        "keccak256": "0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347",
        "urls": [
          "bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97",
          "dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846",
        "urls": [
          "bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7",
          "dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x96ab2a92fbac88a704270b039691afb363c5a1ef1170fb0c955043e4da84b987",
        "urls": [
          "bzz-raw://863c000efee45cb4abc204d77ff04a43fc3268f3524ff8a5e96b43b1a1658f5b",
          "dweb:/ipfs/QmVgN2VivBwgxv8gKKZuGQw4YfQRvpgYbfvuRzKTfMgFWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "node_modules/@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/Setup.sol": {
        "keccak256": "0x6a9d90872eace0d63dc6e6fd0db6d7016fdeb14766289da655c61712fe8d087f",
        "urls": [
          "bzz-raw://f76f80ede8d4c3a9cd3236eeead173d7e8ccf77a7ec5efc5245f242bd8980ac6",
          "dweb:/ipfs/QmQdLpvMw5jinuqBAQoMcN4eqY8A1PpPBBAGAwg2J7oHZA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/dummy-files/NewOracle.sol": {
        "keccak256": "0x6dddc9eddd9301100ec019441466beefb0c8b3a4612009bf8bf2c7a210774b5b",
        "urls": [
          "bzz-raw://f99d5fb485854eded751827c10d3064c66f58c9c253d163d4b1d5ce55c7a3f99",
          "dweb:/ipfs/QmWAELWQ74wfQ9qngdtmXE4w8DMRCLnnYp5FHeRz2tTN3C"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/foundry/ozCutFacetV2.t.sol": {
        "keccak256": "0x3911a7e4140ea67c94b7f5ecc576d0ff9acc314743bf0a37aecd90b5d799c277",
        "urls": [
          "bzz-raw://26b646fdd0be1bfb8e23707ab840aee716abf3371c0fcf22c0bf86d37d8b7b21",
          "dweb:/ipfs/QmPpvJNYS41goox2eqHM35aBrwSjWJYfS8X84hktMqcWqH"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/ozCutFacetV2.t.sol",
    "id": 38080,
    "exportedSymbols": {
      "AccData": [
        213
      ],
      "AccountConfig": [
        205
      ],
      "Address": [
        35898
      ],
      "AggregatorV3Interface": [
        34878
      ],
      "AlreadyFeed": [
        9
      ],
      "AppStorage": [
        174
      ],
      "Cant_approve": [
        255
      ],
      "Cant_be_zero": [
        247
      ],
      "Cant_transfer": [
        259
      ],
      "Context": [
        35920
      ],
      "DSTest": [
        4670
      ],
      "Data": [
        234
      ],
      "DataInfo": [
        221
      ],
      "DummyUniPool": [
        1954
      ],
      "ERC20": [
        35465
      ],
      "EnergyETH": [
        459
      ],
      "EthFeed": [
        2031
      ],
      "FixedPoint96": [
        36505
      ],
      "FixedPointMathLib": [
        36039
      ],
      "FullMath": [
        33601
      ],
      "GoldFeed": [
        2108
      ],
      "IDiamondCut": [
        2426
      ],
      "IERC20": [
        35543
      ],
      "IERC20Metadata": [
        35568
      ],
      "IPermit2": [
        2502
      ],
      "ISwapRouter": [
        36605
      ],
      "ITri": [
        2711
      ],
      "IUniswapV3Pool": [
        36061
      ],
      "IUniswapV3PoolActions": [
        36171
      ],
      "IUniswapV3PoolDerivedState": [
        36202
      ],
      "IUniswapV3PoolEvents": [
        36321
      ],
      "IUniswapV3PoolImmutables": [
        36361
      ],
      "IUniswapV3PoolOwnerActions": [
        36387
      ],
      "IUniswapV3PoolState": [
        36495
      ],
      "IUniswapV3SwapCallback": [
        36075
      ],
      "IYtri": [
        2736
      ],
      "InitUpgradeV2": [
        611
      ],
      "LibCommon": [
        31678
      ],
      "LibDiamond": [
        32635
      ],
      "LibHelpers": [
        32890
      ],
      "LibPermit2": [
        33019
      ],
      "NewOracle": [
        37876
      ],
      "NotFeed": [
        5
      ],
      "Not_enough_funds": [
        251
      ],
      "ONE": [
        31255
      ],
      "OZLERC20": [
        185
      ],
      "OracleLibrary": [
        34294
      ],
      "Setup": [
        37862
      ],
      "StdAssertions": [
        6144
      ],
      "StdChains": [
        6838
      ],
      "StdCheats": [
        9069
      ],
      "StdInvariant": [
        9359
      ],
      "StdStorage": [
        10109
      ],
      "StdStyle": [
        12753
      ],
      "StdUtils": [
        13560
      ],
      "Test": [
        13609
      ],
      "TestBase": [
        4730
      ],
      "TickMath": [
        34832
      ],
      "TradeOps": [
        196
      ],
      "UC": [
        31248
      ],
      "Vm": [
        14921
      ],
      "WtiFeed": [
        2186
      ],
      "ZERO": [
        31262
      ],
      "console": [
        22985
      ],
      "console2": [
        31081
      ],
      "ozCutFacetV2": [
        788
      ],
      "ozCutFacetV2Test": [
        38079
      ],
      "ozExecutor2Facet": [
        989
      ],
      "ozIDiamond": [
        2871
      ],
      "ozIExecutorFacet": [
        2883
      ],
      "ozLoupeV2Facet": [
        1163
      ],
      "ozOracleFacet": [
        1753
      ],
      "stdError": [
        9135
      ],
      "stdJson": [
        9935
      ],
      "stdMath": [
        10077
      ],
      "stdStorage": [
        11542
      ],
      "uc": [
        31381
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1652:66",
    "nodes": [
      {
        "id": 37878,
        "nodeType": "PragmaDirective",
        "src": "45:23:66",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 37879,
        "nodeType": "ImportDirective",
        "src": "71:28:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38080,
        "sourceUnit": 13610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37880,
        "nodeType": "ImportDirective",
        "src": "100:21:66",
        "nodes": [],
        "absolutePath": "test/foundry/Setup.sol",
        "file": "./Setup.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38080,
        "sourceUnit": 37863,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37881,
        "nodeType": "ImportDirective",
        "src": "123:31:66",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38080,
        "sourceUnit": 22986,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38079,
        "nodeType": "ContractDefinition",
        "src": "157:1540:66",
        "nodes": [
          {
            "id": 37953,
            "nodeType": "FunctionDefinition",
            "src": "206:520:66",
            "nodes": [],
            "body": {
              "id": 37952,
              "nodeType": "Block",
              "src": "239:487:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37892,
                      "mutability": "mutable",
                      "name": "oracles",
                      "nameLocation": "290:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 37952,
                      "src": "273:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37890,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "273:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 37891,
                        "nodeType": "ArrayTypeName",
                        "src": "273:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37896,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37893,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "300:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 37894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "304:10:66",
                      "memberName": "getOracles",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2808,
                      "src": "300:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 37895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "300:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "273:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37898,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37892,
                            "src": "337:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 37899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "345:6:66",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "337:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 37900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "355:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "337:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37897,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3153,
                        3174
                      ],
                      "referencedDeclaration": 3153,
                      "src": "326:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 37902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "326:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37903,
                  "nodeType": "ExpressionStatement",
                  "src": "326:31:66"
                },
                {
                  "assignments": [
                    37905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37905,
                      "mutability": "mutable",
                      "name": "deadID",
                      "nameLocation": "393:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 37952,
                      "src": "385:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 37904,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "385:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37912,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 37909,
                            "name": "deadAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37082,
                            "src": "429:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 37907,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "412:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 37908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "416:12:66",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "412:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 37910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "412:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 37906,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "402:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 37911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "402:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "385:54:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37916,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37073,
                        "src": "458:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37913,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "449:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 37915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "452:5:66",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14622,
                      "src": "449:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 37917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "449:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37918,
                  "nodeType": "ExpressionStatement",
                  "src": "449:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37922,
                        "name": "deadAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37082,
                        "src": "491:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37923,
                        "name": "deadID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37905,
                        "src": "501:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 37919,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "477:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 37921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "481:9:66",
                      "memberName": "addOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2829,
                      "src": "477:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32) external"
                      }
                    },
                    "id": 37924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "477:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37925,
                  "nodeType": "ExpressionStatement",
                  "src": "477:31:66"
                },
                {
                  "expression": {
                    "id": 37930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37926,
                      "name": "oracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37892,
                      "src": "544:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 37927,
                          "name": "OZL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37049,
                          "src": "554:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                            "typeString": "contract ozIDiamond"
                          }
                        },
                        "id": 37928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "558:10:66",
                        "memberName": "getOracles",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2808,
                        "src": "554:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (address[] memory)"
                        }
                      },
                      "id": 37929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "554:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "544:26:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 37931,
                  "nodeType": "ExpressionStatement",
                  "src": "544:26:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37933,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37892,
                            "src": "591:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 37934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "599:6:66",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "591:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 37935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "609:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "591:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37932,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3153,
                        3174
                      ],
                      "referencedDeclaration": 3153,
                      "src": "580:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 37937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37938,
                  "nodeType": "ExpressionStatement",
                  "src": "580:31:66"
                },
                {
                  "assignments": [
                    37940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37940,
                      "mutability": "mutable",
                      "name": "oracleDead",
                      "nameLocation": "630:10:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 37952,
                      "src": "622:18:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37939,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "622:7:66",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37945,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37943,
                        "name": "deadID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37905,
                        "src": "668:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 37941,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "643:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 37942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "647:20:66",
                      "memberName": "getOracleAddressById",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2822,
                      "src": "643:24:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 37944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "643:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "622:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37947,
                          "name": "oracleDead",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37940,
                          "src": "696:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 37948,
                          "name": "deadAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37082,
                          "src": "710:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "696:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37946,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3153,
                        3174
                      ],
                      "referencedDeclaration": 3153,
                      "src": "685:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 37950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37951,
                  "nodeType": "ExpressionStatement",
                  "src": "685:34:66"
                }
              ]
            },
            "functionSelector": "d60b819b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_addOracle",
            "nameLocation": "215:14:66",
            "parameters": {
              "id": 37886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:66"
            },
            "returnParameters": {
              "id": 37887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:0:66"
            },
            "scope": 38079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38001,
            "nodeType": "FunctionDefinition",
            "src": "732:355:66",
            "nodes": [],
            "body": {
              "id": 38000,
              "nodeType": "Block",
              "src": "768:319:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37960,
                      "mutability": "mutable",
                      "name": "oracles",
                      "nameLocation": "819:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 38000,
                      "src": "802:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 37959,
                        "nodeType": "ArrayTypeName",
                        "src": "802:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37964,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37961,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "829:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 37962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "833:10:66",
                      "memberName": "getOracles",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2808,
                      "src": "829:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 37963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "802:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37966,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37960,
                            "src": "866:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 37967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "874:6:66",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "866:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 37968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "884:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "866:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37965,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3153,
                        3174
                      ],
                      "referencedDeclaration": 3153,
                      "src": "855:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 37970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "855:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37971,
                  "nodeType": "ExpressionStatement",
                  "src": "855:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37975,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37073,
                        "src": "923:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37972,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "914:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 37974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "917:5:66",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14622,
                      "src": "914:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 37976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37977,
                  "nodeType": "ExpressionStatement",
                  "src": "914:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 37983,
                            "name": "ozOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37037,
                            "src": "967:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozOracleFacet_$1753",
                              "typeString": "contract ozOracleFacet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozOracleFacet_$1753",
                              "typeString": "contract ozOracleFacet"
                            }
                          ],
                          "id": 37982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "959:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37981,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "959:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37978,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "942:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 37980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "946:12:66",
                      "memberName": "removeOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2834,
                      "src": "942:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 37985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37986,
                  "nodeType": "ExpressionStatement",
                  "src": "942:35:66"
                },
                {
                  "expression": {
                    "id": 37991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37987,
                      "name": "oracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37960,
                      "src": "1013:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 37988,
                          "name": "OZL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37049,
                          "src": "1023:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                            "typeString": "contract ozIDiamond"
                          }
                        },
                        "id": 37989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1027:10:66",
                        "memberName": "getOracles",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2808,
                        "src": "1023:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (address[] memory)"
                        }
                      },
                      "id": 37990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1023:16:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1013:26:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 37992,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:26:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37994,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37960,
                            "src": "1060:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 37995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1068:6:66",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1060:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1078:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1060:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37993,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3153,
                        3174
                      ],
                      "referencedDeclaration": 3153,
                      "src": "1049:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 37998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37999,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:31:66"
                }
              ]
            },
            "functionSelector": "34f7582a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_removeOracle",
            "nameLocation": "741:17:66",
            "parameters": {
              "id": 37954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "758:2:66"
            },
            "returnParameters": {
              "id": 37955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:66"
            },
            "scope": 38079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38043,
            "nodeType": "FunctionDefinition",
            "src": "1093:325:66",
            "nodes": [],
            "body": {
              "id": 38042,
              "nodeType": "Block",
              "src": "1135:283:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38008,
                      "mutability": "mutable",
                      "name": "oracles",
                      "nameLocation": "1186:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 38042,
                      "src": "1169:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38006,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1169:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38007,
                        "nodeType": "ArrayTypeName",
                        "src": "1169:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38012,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 38009,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "1196:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 38010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1200:10:66",
                      "memberName": "getOracles",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2808,
                      "src": "1196:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 38011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1169:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 38014,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38008,
                            "src": "1233:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 38015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1241:6:66",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1233:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 38016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1251:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1233:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 38013,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3153,
                        3174
                      ],
                      "referencedDeclaration": 3153,
                      "src": "1222:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 38018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38019,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:31:66"
                },
                {
                  "assignments": [
                    38021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38021,
                      "mutability": "mutable",
                      "name": "deadID",
                      "nameLocation": "1289:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 38042,
                      "src": "1281:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 38020,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1281:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38028,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38025,
                            "name": "deadAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37082,
                            "src": "1325:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 38023,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1308:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 38024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1312:12:66",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1308:16:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 38026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:26:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 38022,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1298:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 38027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1298:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1281:54:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38032,
                        "name": "notOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37107,
                        "src": "1361:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 38029,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "1345:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 38031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1348:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14663,
                      "src": "1345:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 38033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:25:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38034,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:25:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38038,
                        "name": "deadAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37082,
                        "src": "1394:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38039,
                        "name": "deadID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38021,
                        "src": "1404:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 38035,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "1380:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 38037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1384:9:66",
                      "memberName": "addOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2829,
                      "src": "1380:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32) external"
                      }
                    },
                    "id": 38040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38041,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:31:66"
                }
              ]
            },
            "functionSelector": "4c7c495b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_addOracle_notOwner",
            "nameLocation": "1102:23:66",
            "parameters": {
              "id": 38002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:2:66"
            },
            "returnParameters": {
              "id": 38003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:0:66"
            },
            "scope": 38079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 38078,
            "nodeType": "FunctionDefinition",
            "src": "1424:268:66",
            "nodes": [],
            "body": {
              "id": 38077,
              "nodeType": "Block",
              "src": "1469:223:66",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38050,
                      "mutability": "mutable",
                      "name": "oracles",
                      "nameLocation": "1520:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 38077,
                      "src": "1503:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1503:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 38049,
                        "nodeType": "ArrayTypeName",
                        "src": "1503:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38054,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 38051,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "1530:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 38052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1534:10:66",
                      "memberName": "getOracles",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2808,
                      "src": "1530:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 38053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 38056,
                            "name": "oracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38050,
                            "src": "1567:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 38057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1575:6:66",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1567:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 38058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1585:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1567:19:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 38055,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3153,
                        3174
                      ],
                      "referencedDeclaration": 3153,
                      "src": "1556:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 38060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38061,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38065,
                        "name": "notOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37107,
                        "src": "1631:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "id": 38062,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "1615:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14921",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 38064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1618:12:66",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14663,
                      "src": "1615:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 38066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:25:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38067,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:25:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38073,
                            "name": "ozOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37037,
                            "src": "1675:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ozOracleFacet_$1753",
                              "typeString": "contract ozOracleFacet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ozOracleFacet_$1753",
                              "typeString": "contract ozOracleFacet"
                            }
                          ],
                          "id": 38072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1667:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38071,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1667:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1667:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38068,
                        "name": "OZL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37049,
                        "src": "1650:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ozIDiamond_$2871",
                          "typeString": "contract ozIDiamond"
                        }
                      },
                      "id": 38070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1654:12:66",
                      "memberName": "removeOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2834,
                      "src": "1650:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 38075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38076,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:35:66"
                }
              ]
            },
            "functionSelector": "6db3fb21",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_removeOracle_notOwner",
            "nameLocation": "1433:26:66",
            "parameters": {
              "id": 38044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1459:2:66"
            },
            "returnParameters": {
              "id": 38045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:0:66"
            },
            "scope": 38079,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37882,
              "name": "Test",
              "nameLocations": [
                "186:4:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13609,
              "src": "186:4:66"
            },
            "id": 37883,
            "nodeType": "InheritanceSpecifier",
            "src": "186:4:66"
          },
          {
            "baseName": {
              "id": 37884,
              "name": "Setup",
              "nameLocations": [
                "192:5:66"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37862,
              "src": "192:5:66"
            },
            "id": 37885,
            "nodeType": "InheritanceSpecifier",
            "src": "192:5:66"
          }
        ],
        "canonicalName": "ozCutFacetV2Test",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38079,
          37862,
          13609,
          4730,
          4727,
          13560,
          9359,
          9069,
          8410,
          6838,
          6144,
          4670
        ],
        "name": "ozCutFacetV2Test",
        "nameLocation": "166:16:66",
        "scope": 38080,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 66
}